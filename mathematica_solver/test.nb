(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    624096,      12487]
NotebookOptionsPosition[    608423,      11964]
NotebookOutlinePosition[    608944,      11986]
CellTagsIndexPosition[    608856,      11981]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.604411576628065*^9, 3.6044115784851713`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0.099", "*", "0.8"}]], "Input",
 CellChangeTimes->{{3.60415234896914*^9, 3.6041523516462927`*^9}}],

Cell[BoxData["0.0792`"], "Output",
 CellChangeTimes->{3.60415235212232*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"0", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6041526972050576`*^9, 3.6041527120989094`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.604152708573708*^9, 3.6041527124289284`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"0.7", ",", "0.2", ",", "0.1"}], "}"}], ".", 
  "markovChainMatrix"}]], "Input",
 CellChangeTimes->{{3.604152859715353*^9, 3.6041528646426344`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.6599999999999999`", ",", "0.24`", ",", "0.1`"}], "}"}]], "Output",
 CellChangeTimes->{3.604152865104661*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", ".", "markovChainMatrix"}]], "Input",
 CellChangeTimes->{{3.604152867397792*^9, 3.6041528693679047`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.6555555599999999`", ",", "0.24444444`", ",", "0.1`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6041528697079244`*^9, 3.604152876260299*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"markovChainMatrix", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6041528897070684`*^9, 3.6041529080731187`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7`", ",", "0.2`", ",", "0.1`"}], "}"}]], "Output",
 CellChangeTimes->{{3.604152892263214*^9, 3.6041529085101433`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"markovChainMatrix", "[", 
   RowBox[{"[", "3", "]"}], "]"}], ".", 
  RowBox[{"MatrixPower", "[", 
   RowBox[{"markovChainMatrix", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.604152918223699*^9, 3.604152983383426*^9}, {
  3.6041532221970854`*^9, 3.604153236186886*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.6555555555400001`", ",", "0.24444444446000002`", ",", "0.1`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6041529440281754`*^9, 3.6041529838344517`*^9}, {
  3.604153233564736*^9, 3.604153236558907*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", ".", "markovChainMatrix"}]], "Input",
 CellChangeTimes->{{3.6041529891207542`*^9, 3.604152991474889*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.6555555599999999`", ",", "0.24444444`", ",", "0.1`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6041529918189087`*^9, 3.604152997507234*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPower", "[", 
  RowBox[{"markovChainMatrix", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.6041530755586987`*^9, 3.6041530828801174`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.6555555556`", ",", "0.24444444440000002`", ",", "0.1`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6555555555`", ",", "0.2444444445`", ",", "0.1`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6555555554`", ",", "0.24444444459999998`", ",", "0.1`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6041530836191597`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"markovChainMatrix", "[", 
   RowBox[{"[", "1", "]"}], "]"}], ".", "%"}]], "Input",
 CellChangeTimes->{{3.6041530894964952`*^9, 3.604153095309828*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.65555555556`", ",", "0.24444444444`", ",", "0.1`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.604153096090873*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["stateProb"], "Input",
 CellChangeTimes->{{3.604153290356984*^9, 3.60415329133604*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.65555555556`", ",", "0.24444444444`", ",", "0.1`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6041532917490635`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6041532944982204`*^9, 3.6041532951182566`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.604153317474535*^9, 3.6041533245099373`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "wData", "]"}]], "Input",
 CellChangeTimes->{{3.6041534782597313`*^9, 3.6041534818289356`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8759", ",", "27"}], "}"}]], "Output",
 CellChangeTimes->{3.6041534821439533`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.604153487271247*^9, 3.6041534888323364`*^9}}],

Cell[BoxData["8759"], "Output",
 CellChangeTimes->{3.60415348924636*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"randomStateSequence", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\"\<M\>\""}], ",", " ", 
   RowBox[{"Print", "[", "\"\<yes\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<No\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.604153688747771*^9, 3.604153732380266*^9}}],

Cell[BoxData["\<\"yes\"\>"], "Print",
 CellChangeTimes->{3.6041537560916224`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "availableResources", "]"}]], "Input",
 CellChangeTimes->{{3.604154628001493*^9, 3.604154633569812*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.604154633905831*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", 
    RowBox[{"Length", "[", "availableResources", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"availableResources", "[", 
      RowBox[{"[", "i", "]"}], "]"}], " ", "=", "  ", 
     RowBox[{
      RowBox[{"0.5", "*", "0.5", "*", "1.27", "*", "Pi", "*", 
       RowBox[{
        RowBox[{"windSpeed", "[", 
         RowBox[{"[", 
          RowBox[{"10", "+", "i", "-", "1"}], "]"}], "]"}], "^", "3"}]}], "+", 
      RowBox[{"1.2", "*", "100", "*", 
       RowBox[{"solarRadi", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"10", "+", "i", "-", "1"}], ",", "24"}], "]"}], "+", 
           "1"}], ",", "month"}], "]"}], "]"}]}]}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6041546375600395`*^9, 3.604154760330062*^9}, {
  3.6041550861476974`*^9, 3.6041552063075705`*^9}, {3.604156266895232*^9, 
  3.6041562763497734`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["availableResources"], "Input",
 CellChangeTimes->{{3.6041551870674696`*^9, 3.6041551880785275`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.604155214885061*^9, 3.6041562907475967`*^9, 
  3.6041563280807323`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["availableResources"], "Input",
 CellChangeTimes->{{3.6041563375652742`*^9, 3.604156338956354*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2364.1404817351918`", ",", "2295.2864117800195`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6041563394013796`*^9, 3.6041564075522776`*^9, 
  3.6041570444317045`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"AvailableResource", "[", "100", "]"}]], "Input",
 CellChangeTimes->{{3.60415634343361*^9, 3.6041563462237697`*^9}, {
  3.604156403118024*^9, 3.6041564040410767`*^9}, {3.604157039568427*^9, 
  3.60415704241959*^9}}],

Cell[CellGroupData[{

Cell[BoxData["demand"], "Input",
 CellChangeTimes->{{3.604156937407583*^9, 3.6041569381976285`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.604156939883725*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Demand", "[", "100", "]"}]], "Input",
 CellChangeTimes->{{3.6041569435519347`*^9, 3.6041569465531063`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["demand"], "Input",
 CellChangeTimes->{{3.6041569492622614`*^9, 3.604156950142312*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1042.1279582830057`", ",", "1524.782196003547`"}], "}"}]], "Output",
 CellChangeTimes->{3.6041569504763308`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "=", "3"}], ";"}]], "Input",
 CellChangeTimes->{{3.604173134831023*^9, 3.604173139037264*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Minimize", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"x", "^", "2"}]}], "-", 
    RowBox[{"3", " ", "x"}], "+", "5"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6041731405293493`*^9, 3.604173140559351*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["31", "8"], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox["3", "4"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.604173145532635*^9, 3.6041731697340193`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6041731555252066`*^9, 3.6041731628276243`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Symbol", " ", "x"}]], "Input",
 CellChangeTimes->{{3.6041742368950577`*^9, 3.6041742425553813`*^9}}],

Cell[BoxData[
 RowBox[{"Symbol", " ", "x"}]], "Output",
 CellChangeTimes->{3.6041742430204077`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Symbol"}]], "Input",
 CellChangeTimes->{{3.604174247688675*^9, 3.604174248908745*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", StyleBox[\\\"\\\\\
\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"name\\\\\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\
\\\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\\) refers to a symbol with \
the specified name. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Symbol"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.604174251330883*^9},
 CellTags->"Info3604156249-5721513"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Symbol", "[", "\"\<x\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6041742601403875`*^9, 3.604174263046553*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.604174263636587*^9, 3.604174283046697*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{3.604174266706763*^9}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.604174267413803*^9, 3.604174278776453*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"markovChainMatrix", "//", "Grid"}]], "Input",
 CellChangeTimes->{{3.6041886866163435`*^9, 3.6041887004811363`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.7`", "0.2`", "0.1`"},
    {"0.6`", "0.3`", "0.1`"},
    {"0.5`", "0.4`", "0.1`"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.6041886934157324`*^9, 3.604188700865158*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"markovChainMatrix", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6041887223173857`*^9, 3.6041887349261065`*^9}}],

Cell[BoxData["0.6`"], "Output",
 CellChangeTimes->{{3.604188726378618*^9, 3.604188735378133*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Demand", "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.6041894126678715`*^9, 3.604189426733676*^9}}],

Cell[BoxData["demand"], "Input",
 CellChangeTimes->{{3.604189428708789*^9, 3.604189429966861*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"227.92606784937996`", ",", "2621.6552462433383`"}], "}"}]], "Input",
 CellChangeTimes->{3.6041909000119424`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"227.92606784937996`", ",", "2621.6552462433383`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.604190900208954*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AvailableResource", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.604190123644537*^9, 3.604190136391266*^9}, {
  3.6041902013119793`*^9, 3.604190206855296*^9}, {3.60419071324426*^9, 
  3.6041907308342657`*^9}}],

Cell[BoxData["2227.782377945881`"], "Output",
 CellChangeTimes->{3.604190905701268*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.604190222780207*^9, 3.6041902256933737`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Demand", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.604190741988904*^9, 3.6041907452690916`*^9}}],

Cell[BoxData["3244.8662938504126`"], "Output",
 CellChangeTimes->{3.604190920637122*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"randomStateSequence", "[", 
   RowBox[{"[", "t", "]"}], "]"}], "\[Equal]", "\"\<N\>\""}]], "Input",
 CellChangeTimes->{{3.604191187492386*^9, 3.6041912383942966`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6041912105207024`*^9, 3.6041912390533347`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Minimize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"0.051`", " ", 
       RowBox[{"(", 
        RowBox[{"xGB", "+", "xGC"}], ")"}]}], "+", 
      RowBox[{"0.002`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB"}], ")"}]}], 
      "+", 
      RowBox[{"0.001`", " ", 
       RowBox[{"(", 
        RowBox[{"xBC", "+", "xBG", "+", "xGB", "+", "xRB"}], ")"}]}], "-", 
      RowBox[{"0.0408`", " ", 
       RowBox[{"(", 
        RowBox[{"xBG", "+", "xRG"}], ")"}]}], "+", 
      RowBox[{"0.7`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"0.051`", " ", 
          RowBox[{"(", 
           RowBox[{"yGB1", "+", "yGC1"}], ")"}]}], "+", 
         RowBox[{"0.002`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "-", 
            "yBC1", "-", "yBG1", "+", "yGB1", "+", "yRB1"}], ")"}]}], "+", 
         RowBox[{"0.001`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "+", 
            "yBC1", "+", "yBG1", "+", "yGB1", "+", "yRB1"}], ")"}]}], "-", 
         RowBox[{"0.0408`", " ", 
          RowBox[{"(", 
           RowBox[{"yBG1", "+", "yRG1"}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.6`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"0.051`", " ", 
          RowBox[{"(", 
           RowBox[{"yGB2", "+", "yGC2"}], ")"}]}], "+", 
         RowBox[{"0.002`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "-", 
            "yBC2", "-", "yBG2", "+", "yGB2", "+", "yRB2"}], ")"}]}], "+", 
         RowBox[{"0.001`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "+", 
            "yBC2", "+", "yBG2", "+", "yGB2", "+", "yRB2"}], ")"}]}], "-", 
         RowBox[{"0.0408`", " ", 
          RowBox[{"(", 
           RowBox[{"yBG2", "+", "yRG2"}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.5`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"0.051`", " ", 
          RowBox[{"(", 
           RowBox[{"yGB3", "+", "yGC3"}], ")"}]}], "+", 
         RowBox[{"0.002`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "-", 
            "yBC3", "-", "yBG3", "+", "yGB3", "+", "yRB3"}], ")"}]}], "+", 
         RowBox[{"0.001`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "+", 
            "yBC3", "+", "yBG3", "+", "yGB3", "+", "yRB3"}], ")"}]}], "-", 
         RowBox[{"0.0408`", " ", 
          RowBox[{"(", 
           RowBox[{"yBG3", "+", "yRG3"}], ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"xBC", "+", "xGC", "+", "xRC"}], "\[Equal]", 
       "265.5451903286421`"}], "&&", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB"}], 
       "\[LessEqual]", "capBat"}], "&&", 
      RowBox[{
       RowBox[{"xRB", "+", "xRC", "+", "xRG"}], "\[Equal]", 
       "2364.1404817351918`"}], "&&", 
      RowBox[{"xGB", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xGC", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xRB", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xRC", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xRG", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xBC", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xBG", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yGB1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yGC1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRB1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRC1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRG1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBC1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBG1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{
       RowBox[{"yBC1", "+", "yGC1", "+", "yRC1"}], "\[Equal]", 
       "9291.418969944281`"}], "&&", 
      RowBox[{
       RowBox[{"xBC", "+", "xBG", "-", "xGB", "-", "xRB"}], "\[LessEqual]", 
       RowBox[{
        RowBox[{"-", "yBC1"}], "-", "yBG1", "+", "yGB1", "+", "yRB1"}], 
       "\[LessEqual]", 
       RowBox[{"capBat", "+", "xBC", "+", "xBG", "-", "xGB", "-", "xRB"}]}], "&&", 
      RowBox[{
       RowBox[{"yRB1", "+", "yRC1", "+", "yRG1"}], "\[Equal]", 
       "2295.2864117800195`"}], "&&", 
      RowBox[{"yGB2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yGC2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRB2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRC2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRG2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBC2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBG2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{
       RowBox[{"yBC2", "+", "yGC2", "+", "yRC2"}], "\[Equal]", 
       "7400.271050457528`"}], "&&", 
      RowBox[{
       RowBox[{"xBC", "+", "xBG", "-", "xGB", "-", "xRB"}], "\[LessEqual]", 
       RowBox[{
        RowBox[{"-", "yBC2"}], "-", "yBG2", "+", "yGB2", "+", "yRB2"}], 
       "\[LessEqual]", 
       RowBox[{"capBat", "+", "xBC", "+", "xBG", "-", "xGB", "-", "xRB"}]}], "&&", 
      RowBox[{
       RowBox[{"yRB2", "+", "yRC2", "+", "yRG2"}], "\[Equal]", 
       "2295.2864117800195`"}], "&&", 
      RowBox[{"yGB3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yGC3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRB3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRC3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRG3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBC3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBG3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{
       RowBox[{"yBC3", "+", "yGC3", "+", "yRC3"}], "\[Equal]", 
       "7008.120652501304`"}], "&&", 
      RowBox[{
       RowBox[{"xBC", "+", "xBG", "-", "xGB", "-", "xRB"}], "\[LessEqual]", 
       RowBox[{
        RowBox[{"-", "yBC3"}], "-", "yBG3", "+", "yGB3", "+", "yRB3"}], 
       "\[LessEqual]", 
       RowBox[{"capBat", "+", "xBC", "+", "xBG", "-", "xGB", "-", "xRB"}]}], "&&", 
      RowBox[{
       RowBox[{"yRB3", "+", "yRC3", "+", "yRG3"}], "\[Equal]", 
       "2295.2864117800195`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "xGB", ",", "xGC", ",", "xRB", ",", "xRC", ",", "xRG", ",", "xBC", ",", 
     "xBG", ",", "yGB1", ",", "yGC1", ",", "yRB1", ",", "yRC1", ",", "yRG1", 
     ",", "yBC1", ",", "yBG1", ",", "yGB2", ",", "yGC2", ",", "yRB2", ",", 
     "yRC2", ",", "yRG2", ",", "yBC2", ",", "yBG2", ",", "yGB3", ",", "yGC3", 
     ",", "yRB3", ",", "yRC3", ",", "yRG3", ",", "yBC3", ",", "yBG3"}], 
    "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Minimize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"0.051`", " ", 
       RowBox[{"(", 
        RowBox[{"xGB", "+", "xGC"}], ")"}]}], "+", 
      RowBox[{"0.002`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB"}], ")"}]}], 
      "+", 
      RowBox[{"0.001`", " ", 
       RowBox[{"(", 
        RowBox[{"xBC", "+", "xBG", "+", "xGB", "+", "xRB"}], ")"}]}], "-", 
      RowBox[{"0.0408`", " ", 
       RowBox[{"(", 
        RowBox[{"xBG", "+", "xRG"}], ")"}]}], "+", 
      RowBox[{"0.7`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"0.051`", " ", 
          RowBox[{"(", 
           RowBox[{"yGB1", "+", "yGC1"}], ")"}]}], "+", 
         RowBox[{"0.002`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "-", 
            "yBC1", "-", "yBG1", "+", "yGB1", "+", "yRB1"}], ")"}]}], "+", 
         RowBox[{"0.001`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "+", 
            "yBC1", "+", "yBG1", "+", "yGB1", "+", "yRB1"}], ")"}]}], "-", 
         RowBox[{"0.0408`", " ", 
          RowBox[{"(", 
           RowBox[{"yBG1", "+", "yRG1"}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.6`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"0.051`", " ", 
          RowBox[{"(", 
           RowBox[{"yGB2", "+", "yGC2"}], ")"}]}], "+", 
         RowBox[{"0.002`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "-", 
            "yBC2", "-", "yBG2", "+", "yGB2", "+", "yRB2"}], ")"}]}], "+", 
         RowBox[{"0.001`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "+", 
            "yBC2", "+", "yBG2", "+", "yGB2", "+", "yRB2"}], ")"}]}], "-", 
         RowBox[{"0.0408`", " ", 
          RowBox[{"(", 
           RowBox[{"yBG2", "+", "yRG2"}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.5`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"0.051`", " ", 
          RowBox[{"(", 
           RowBox[{"yGB3", "+", "yGC3"}], ")"}]}], "+", 
         RowBox[{"0.002`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "-", 
            "yBC3", "-", "yBG3", "+", "yGB3", "+", "yRB3"}], ")"}]}], "+", 
         RowBox[{"0.001`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "+", 
            "yBC3", "+", "yBG3", "+", "yGB3", "+", "yRB3"}], ")"}]}], "-", 
         RowBox[{"0.0408`", " ", 
          RowBox[{"(", 
           RowBox[{"yBG3", "+", "yRG3"}], ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"xBC", "+", "xGC", "+", "xRC"}], "\[Equal]", 
       "265.5451903286421`"}], "&&", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB"}], 
       "\[LessEqual]", "capBat"}], "&&", 
      RowBox[{
       RowBox[{"xRB", "+", "xRC", "+", "xRG"}], "\[Equal]", 
       "2364.1404817351918`"}], "&&", 
      RowBox[{"xGB", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xGC", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xRB", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xRC", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xRG", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xBC", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xBG", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yGB1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yGC1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRB1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRC1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRG1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBC1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBG1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{
       RowBox[{"yBC1", "+", "yGC1", "+", "yRC1"}], "\[Equal]", 
       "9291.418969944281`"}], "&&", 
      RowBox[{
       RowBox[{"xBC", "+", "xBG", "-", "xGB", "-", "xRB"}], "\[LessEqual]", 
       RowBox[{
        RowBox[{"-", "yBC1"}], "-", "yBG1", "+", "yGB1", "+", "yRB1"}], 
       "\[LessEqual]", 
       RowBox[{"capBat", "+", "xBC", "+", "xBG", "-", "xGB", "-", "xRB"}]}], "&&", 
      RowBox[{
       RowBox[{"yRB1", "+", "yRC1", "+", "yRG1"}], "\[Equal]", 
       "2295.2864117800195`"}], "&&", 
      RowBox[{"yGB2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yGC2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRB2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRC2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRG2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBC2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBG2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{
       RowBox[{"yBC2", "+", "yGC2", "+", "yRC2"}], "\[Equal]", 
       "7400.271050457528`"}], "&&", 
      RowBox[{
       RowBox[{"xBC", "+", "xBG", "-", "xGB", "-", "xRB"}], "\[LessEqual]", 
       RowBox[{
        RowBox[{"-", "yBC2"}], "-", "yBG2", "+", "yGB2", "+", "yRB2"}], 
       "\[LessEqual]", 
       RowBox[{"capBat", "+", "xBC", "+", "xBG", "-", "xGB", "-", "xRB"}]}], "&&", 
      RowBox[{
       RowBox[{"yRB2", "+", "yRC2", "+", "yRG2"}], "\[Equal]", 
       "2295.2864117800195`"}], "&&", 
      RowBox[{"yGB3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yGC3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRB3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRC3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRG3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBC3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBG3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{
       RowBox[{"yBC3", "+", "yGC3", "+", "yRC3"}], "\[Equal]", 
       "7008.120652501304`"}], "&&", 
      RowBox[{
       RowBox[{"xBC", "+", "xBG", "-", "xGB", "-", "xRB"}], "\[LessEqual]", 
       RowBox[{
        RowBox[{"-", "yBC3"}], "-", "yBG3", "+", "yGB3", "+", "yRB3"}], 
       "\[LessEqual]", 
       RowBox[{"capBat", "+", "xBC", "+", "xBG", "-", "xGB", "-", "xRB"}]}], "&&", 
      RowBox[{
       RowBox[{"yRB3", "+", "yRC3", "+", "yRG3"}], "\[Equal]", 
       "2295.2864117800195`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "xGB", ",", "xGC", ",", "xRB", ",", "xRC", ",", "xRG", ",", "xBC", ",", 
     "xBG", ",", "yGB1", ",", "yGC1", ",", "yRB1", ",", "yRC1", ",", "yRG1", 
     ",", "yBC1", ",", "yBG1", ",", "yGB2", ",", "yGC2", ",", "yRB2", ",", 
     "yRC2", ",", "yRG2", ",", "yBC2", ",", "yBG2", ",", "yGB3", ",", "yGC3", 
     ",", "yRB3", ",", "yRC3", ",", "yRG3", ",", "yBC3", ",", "yBG3"}], 
    "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.604191352737837*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Minimize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"0.051", " ", 
       RowBox[{"(", 
        RowBox[{"xGB", "+", "xGC"}], ")"}]}], "+", 
      RowBox[{"0.002", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB"}], ")"}]}], 
      "+", 
      RowBox[{"0.001", " ", 
       RowBox[{"(", 
        RowBox[{"xBC", "+", "xBG", "+", "xGB", "+", "xRB"}], ")"}]}], "-", 
      RowBox[{"0.0408", " ", 
       RowBox[{"(", 
        RowBox[{"xBG", "+", "xRG"}], ")"}]}], "+", 
      RowBox[{"0.7", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"0.051", " ", 
          RowBox[{"(", 
           RowBox[{"yGB1", "+", "yGC1"}], ")"}]}], "+", 
         RowBox[{"0.002", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "-", 
            "yBC1", "-", "yBG1", "+", "yGB1", "+", "yRB1"}], ")"}]}], "+", 
         RowBox[{"0.001", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "+", 
            "yBC1", "+", "yBG1", "+", "yGB1", "+", "yRB1"}], ")"}]}], "-", 
         RowBox[{"0.0408", " ", 
          RowBox[{"(", 
           RowBox[{"yBG1", "+", "yRG1"}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.6", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"0.051", " ", 
          RowBox[{"(", 
           RowBox[{"yGB2", "+", "yGC2"}], ")"}]}], "+", 
         RowBox[{"0.002", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "-", 
            "yBC2", "-", "yBG2", "+", "yGB2", "+", "yRB2"}], ")"}]}], "+", 
         RowBox[{"0.001", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "+", 
            "yBC2", "+", "yBG2", "+", "yGB2", "+", "yRB2"}], ")"}]}], "-", 
         RowBox[{"0.0408", " ", 
          RowBox[{"(", 
           RowBox[{"yBG2", "+", "yRG2"}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"0.051", " ", 
          RowBox[{"(", 
           RowBox[{"yGB3", "+", "yGC3"}], ")"}]}], "+", 
         RowBox[{"0.002", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "-", 
            "yBC3", "-", "yBG3", "+", "yGB3", "+", "yRB3"}], ")"}]}], "+", 
         RowBox[{"0.001", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "+", 
            "yBC3", "+", "yBG3", "+", "yGB3", "+", "yRB3"}], ")"}]}], "-", 
         RowBox[{"0.0408", " ", 
          RowBox[{"(", 
           RowBox[{"yBG3", "+", "yRG3"}], ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"xBC", "+", "xGC", "+", "xRC"}], "\[Equal]", "265.545"}], "&&", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB"}], 
       "\[LessEqual]", "capBat"}], "&&", 
      RowBox[{
       RowBox[{"xRB", "+", "xRC", "+", "xRG"}], "\[Equal]", "2364.14"}], "&&", 
      RowBox[{"xGB", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xGC", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xRB", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xRC", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xRG", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xBC", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xBG", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yGB1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yGC1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRB1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRC1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRG1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBC1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBG1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{
       RowBox[{"yBC1", "+", "yGC1", "+", "yRC1"}], "\[Equal]", "9291.42"}], "&&", 
      RowBox[{
       RowBox[{"xBC", "+", "xBG", "-", "xGB", "-", "xRB"}], "\[LessEqual]", 
       RowBox[{
        RowBox[{"-", "yBC1"}], "-", "yBG1", "+", "yGB1", "+", "yRB1"}], 
       "\[LessEqual]", 
       RowBox[{"capBat", "+", "xBC", "+", "xBG", "-", "xGB", "-", "xRB"}]}], "&&", 
      RowBox[{
       RowBox[{"yRB1", "+", "yRC1", "+", "yRG1"}], "\[Equal]", "2295.29"}], "&&", 
      RowBox[{"yGB2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yGC2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRB2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRC2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRG2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBC2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBG2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{
       RowBox[{"yBC2", "+", "yGC2", "+", "yRC2"}], "\[Equal]", "7400.27"}], "&&", 
      RowBox[{
       RowBox[{"xBC", "+", "xBG", "-", "xGB", "-", "xRB"}], "\[LessEqual]", 
       RowBox[{
        RowBox[{"-", "yBC2"}], "-", "yBG2", "+", "yGB2", "+", "yRB2"}], 
       "\[LessEqual]", 
       RowBox[{"capBat", "+", "xBC", "+", "xBG", "-", "xGB", "-", "xRB"}]}], "&&", 
      RowBox[{
       RowBox[{"yRB2", "+", "yRC2", "+", "yRG2"}], "\[Equal]", "2295.29"}], "&&", 
      RowBox[{"yGB3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yGC3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRB3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRC3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRG3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBC3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBG3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{
       RowBox[{"yBC3", "+", "yGC3", "+", "yRC3"}], "\[Equal]", "7008.12"}], "&&", 
      RowBox[{
       RowBox[{"xBC", "+", "xBG", "-", "xGB", "-", "xRB"}], "\[LessEqual]", 
       RowBox[{
        RowBox[{"-", "yBC3"}], "-", "yBG3", "+", "yGB3", "+", "yRB3"}], 
       "\[LessEqual]", 
       RowBox[{"capBat", "+", "xBC", "+", "xBG", "-", "xGB", "-", "xRB"}]}], "&&", 
      RowBox[{
       RowBox[{"yRB3", "+", "yRC3", "+", "yRG3"}], "\[Equal]", 
       "2295.29"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "xGB", ",", "xGC", ",", "xRB", ",", "xRC", ",", "xRG", ",", "xBC", ",", 
     "xBG", ",", "yGB1", ",", "yGC1", ",", "yRB1", ",", "yRC1", ",", "yRG1", 
     ",", "yBC1", ",", "yBG1", ",", "yGB2", ",", "yGC2", ",", "yRB2", ",", 
     "yRC2", ",", "yRG2", ",", "yBC2", ",", "yBG2", ",", "yGB3", ",", "yGC3", 
     ",", "yRB3", ",", "yRC3", ",", "yRG3", ",", "yBC3", ",", "yBG3"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6041913670616565`*^9, 3.604191367068657*^9}}],

Cell[BoxData[
 RowBox[{"Minimize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"0.051`", " ", 
       RowBox[{"(", 
        RowBox[{"xGB", "+", "xGC"}], ")"}]}], "+", 
      RowBox[{"0.002`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB"}], ")"}]}], 
      "+", 
      RowBox[{"0.001`", " ", 
       RowBox[{"(", 
        RowBox[{"xBC", "+", "xBG", "+", "xGB", "+", "xRB"}], ")"}]}], "-", 
      RowBox[{"0.0408`", " ", 
       RowBox[{"(", 
        RowBox[{"xBG", "+", "xRG"}], ")"}]}], "+", 
      RowBox[{"0.7`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"0.051`", " ", 
          RowBox[{"(", 
           RowBox[{"yGB1", "+", "yGC1"}], ")"}]}], "+", 
         RowBox[{"0.002`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "-", 
            "yBC1", "-", "yBG1", "+", "yGB1", "+", "yRB1"}], ")"}]}], "+", 
         RowBox[{"0.001`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "+", 
            "yBC1", "+", "yBG1", "+", "yGB1", "+", "yRB1"}], ")"}]}], "-", 
         RowBox[{"0.0408`", " ", 
          RowBox[{"(", 
           RowBox[{"yBG1", "+", "yRG1"}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.6`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"0.051`", " ", 
          RowBox[{"(", 
           RowBox[{"yGB2", "+", "yGC2"}], ")"}]}], "+", 
         RowBox[{"0.002`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "-", 
            "yBC2", "-", "yBG2", "+", "yGB2", "+", "yRB2"}], ")"}]}], "+", 
         RowBox[{"0.001`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "+", 
            "yBC2", "+", "yBG2", "+", "yGB2", "+", "yRB2"}], ")"}]}], "-", 
         RowBox[{"0.0408`", " ", 
          RowBox[{"(", 
           RowBox[{"yBG2", "+", "yRG2"}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{"0.5`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"0.051`", " ", 
          RowBox[{"(", 
           RowBox[{"yGB3", "+", "yGC3"}], ")"}]}], "+", 
         RowBox[{"0.002`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "-", 
            "yBC3", "-", "yBG3", "+", "yGB3", "+", "yRB3"}], ")"}]}], "+", 
         RowBox[{"0.001`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB", "+", 
            "yBC3", "+", "yBG3", "+", "yGB3", "+", "yRB3"}], ")"}]}], "-", 
         RowBox[{"0.0408`", " ", 
          RowBox[{"(", 
           RowBox[{"yBG3", "+", "yRG3"}], ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"xBC", "+", "xGC", "+", "xRC"}], "\[Equal]", "265.545`"}], "&&", 
      RowBox[{"0", "\[LessEqual]", 
       RowBox[{
        RowBox[{"-", "xBC"}], "-", "xBG", "+", "xGB", "+", "xRB"}], 
       "\[LessEqual]", "capBat"}], "&&", 
      RowBox[{
       RowBox[{"xRB", "+", "xRC", "+", "xRG"}], "\[Equal]", "2364.14`"}], "&&", 
      RowBox[{"xGB", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xGC", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xRB", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xRC", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xRG", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xBC", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xBG", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yGB1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yGC1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRB1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRC1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRG1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBC1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBG1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{
       RowBox[{"yBC1", "+", "yGC1", "+", "yRC1"}], "\[Equal]", "9291.42`"}], "&&", 
      RowBox[{
       RowBox[{"xBC", "+", "xBG", "-", "xGB", "-", "xRB"}], "\[LessEqual]", 
       RowBox[{
        RowBox[{"-", "yBC1"}], "-", "yBG1", "+", "yGB1", "+", "yRB1"}], 
       "\[LessEqual]", 
       RowBox[{"capBat", "+", "xBC", "+", "xBG", "-", "xGB", "-", "xRB"}]}], "&&", 
      RowBox[{
       RowBox[{"yRB1", "+", "yRC1", "+", "yRG1"}], "\[Equal]", "2295.29`"}], "&&", 
      RowBox[{"yGB2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yGC2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRB2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRC2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRG2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBC2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBG2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{
       RowBox[{"yBC2", "+", "yGC2", "+", "yRC2"}], "\[Equal]", "7400.27`"}], "&&", 
      RowBox[{
       RowBox[{"xBC", "+", "xBG", "-", "xGB", "-", "xRB"}], "\[LessEqual]", 
       RowBox[{
        RowBox[{"-", "yBC2"}], "-", "yBG2", "+", "yGB2", "+", "yRB2"}], 
       "\[LessEqual]", 
       RowBox[{"capBat", "+", "xBC", "+", "xBG", "-", "xGB", "-", "xRB"}]}], "&&", 
      RowBox[{
       RowBox[{"yRB2", "+", "yRC2", "+", "yRG2"}], "\[Equal]", "2295.29`"}], "&&", 
      RowBox[{"yGB3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yGC3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRB3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRC3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRG3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBC3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBG3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{
       RowBox[{"yBC3", "+", "yGC3", "+", "yRC3"}], "\[Equal]", "7008.12`"}], "&&", 
      RowBox[{
       RowBox[{"xBC", "+", "xBG", "-", "xGB", "-", "xRB"}], "\[LessEqual]", 
       RowBox[{
        RowBox[{"-", "yBC3"}], "-", "yBG3", "+", "yGB3", "+", "yRB3"}], 
       "\[LessEqual]", 
       RowBox[{"capBat", "+", "xBC", "+", "xBG", "-", "xGB", "-", "xRB"}]}], "&&", 
      RowBox[{
       RowBox[{"yRB3", "+", "yRC3", "+", "yRG3"}], "\[Equal]", 
       "2295.29`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "xGB", ",", "xGC", ",", "xRB", ",", "xRC", ",", "xRG", ",", "xBC", ",", 
     "xBG", ",", "yGB1", ",", "yGC1", ",", "yRB1", ",", "yRC1", ",", "yRG1", 
     ",", "yBC1", ",", "yBG1", ",", "yGB2", ",", "yGC2", ",", "yRB2", ",", 
     "yRC2", ",", "yRG2", ",", "yBC2", ",", "yBG2", ",", "yGB3", ",", "yGC3", 
     ",", "yRB3", ",", "yRC3", ",", "yRG3", ",", "yBC3", ",", "yBG3"}], 
    "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.6041913680127106`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Demand", "[", 
  RowBox[{"t", "+", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.604191544949831*^9, 3.6041915537553344`*^9}}],

Cell[BoxData["4992.155874107198`"], "Output",
 CellChangeTimes->{{3.6041915499201155`*^9, 3.6041915541593575`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RootApproximant", "[", "4992.155874107198`", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], " ", 
  RowBox[{"(", 
   RowBox[{"7483", "+", 
    SqrtBox["56152057"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.6041934856698337`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xRB", "/.", "firstState"}]], "Input",
 CellChangeTimes->{{3.604193475394246*^9, 3.604193480638546*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "rmix"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Elements of \[NoBreak]\\!\\({219.78023750094218`, \
\\(\\({\\(\\(xGB \[Rule] 0.`\\)\\), \\(\\(xGC \[Rule] \
3311.7215981812355`\\)\\), \\(\\(xRB \[Rule] 100.`\\)\\), \\(\\(xRC \[Rule] \
2264.1404817351918`\\)\\), \\(\\(xRG \[Rule] 0.`\\)\\), \\(\\(xBC \[Rule] 0.`\
\\)\\), \\(\\(xBG \[Rule] 0.`\\)\\), \\(\\(yGB1 \[Rule] 0.`\\)\\), \\(\\(yGC1 \
\[Rule] 0.`\\)\\), \\(\\(yRB1 \[Rule] 0.`\\)\\), \\(\\(yRC1 \[Rule] \
408.837772106323`\\)\\), \\(\\(yRG1 \[Rule] 1886.4486396736966`\\)\\), \
\\(\\(yBC1 \[Rule] 100.00000000000011`\\)\\), \\(\\(yBG1 \[Rule] 0.`\\)\\), \
\\(\\(yGB2 \[Rule] 0.`\\)\\), \\(\\(yGC2 \[Rule] 315.4568309415431`\\)\\), \
\\(\\(yRB2 \[Rule] 0.`\\)\\), \\(\\(yRC2 \[Rule] 2295.2864117800195`\\)\\), \
\\(\\(yRG2 \[Rule] 0.`\\)\\), \\(\\(yBC2 \[Rule] 100.`\\)\\), \\(\\(yBG2 \
\[Rule] 0.`\\)\\), \\(\\(yGB3 \[Rule] 0.`\\)\\), \\(\\(yGC3 \[Rule] \
3703.781573175245`\\)\\), \\(\\(yRB3 \[Rule] 0.`\\)\\), \\(\\(yRC3 \[Rule] \
2295.2864117800195`\\)\\), \\(\\(yRG3 \[Rule] 0.`\\)\\), \\(\\(yBC3 \[Rule] \
100.`\\)\\), \\(\\(yBG3 \[Rule] 0.`\\)\\)}\\)\\)}\\)\[NoBreak] are a mixture \
of lists and nonlists. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/rmix\\\", ButtonNote -> \
\\\"ReplaceAll::rmix\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6041934812235794`*^9}],

Cell[BoxData[
 RowBox[{"xRB", "/.", "\[VeryThinSpace]", 
  RowBox[{"{", 
   RowBox[{"219.78023750094218`", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xGB", "\[Rule]", "0.`"}], ",", 
      RowBox[{"xGC", "\[Rule]", "3311.7215981812355`"}], ",", 
      RowBox[{"xRB", "\[Rule]", "100.`"}], ",", 
      RowBox[{"xRC", "\[Rule]", "2264.1404817351918`"}], ",", 
      RowBox[{"xRG", "\[Rule]", "0.`"}], ",", 
      RowBox[{"xBC", "\[Rule]", "0.`"}], ",", 
      RowBox[{"xBG", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yGB1", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yGC1", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yRB1", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yRC1", "\[Rule]", "408.837772106323`"}], ",", 
      RowBox[{"yRG1", "\[Rule]", "1886.4486396736966`"}], ",", 
      RowBox[{"yBC1", "\[Rule]", "100.00000000000011`"}], ",", 
      RowBox[{"yBG1", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yGB2", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yGC2", "\[Rule]", "315.4568309415431`"}], ",", 
      RowBox[{"yRB2", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yRC2", "\[Rule]", "2295.2864117800195`"}], ",", 
      RowBox[{"yRG2", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yBC2", "\[Rule]", "100.`"}], ",", 
      RowBox[{"yBG2", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yGB3", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yGC3", "\[Rule]", "3703.781573175245`"}], ",", 
      RowBox[{"yRB3", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yRC3", "\[Rule]", "2295.2864117800195`"}], ",", 
      RowBox[{"yRG3", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yBC3", "\[Rule]", "100.`"}], ",", 
      RowBox[{"yBG3", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]}]], "Output",
 CellChangeTimes->{3.60419348122958*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"t", "=", "101"}], ";"}]], "Input",
 CellChangeTimes->{{3.6041937830268416`*^9, 3.6041937857789993`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Minimize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"xGB", "+", "xGC"}], ")"}], "*", 
       RowBox[{"BuyPrice", "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"initBatt", "+", "xGB", "+", "xRB", "-", "xBC", "-", "xBG"}], 
        ")"}], "*", 
       RowBox[{"ReserveCost", "[", "t", "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"initBatt", "+", "xGB", "+", "xRB", "+", "xBC", "+", "xBG"}], 
        ")"}], "*", 
       RowBox[{"TransitionCost", "[", "t", "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"xBG", "+", "xRG"}], ")"}], "*", 
       RowBox[{"SellPrice", "[", "t", "]"}]}], "+", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"randomStateSequence", "[", 
           RowBox[{"[", "t", "]"}], "]"}], "\[Equal]", "\"\<N\>\""}], ",", 
         RowBox[{"markovChainMatrix", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"randomStateSequence", "[", 
             RowBox[{"[", "t", "]"}], "]"}], "\[Equal]", "\"\<A\>\""}], ",", 
           RowBox[{"markovChainMatrix", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"markovChainMatrix", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "1"}], "]"}], "]"}]}], "]"}]}], "]"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"yGB1", "+", "yGC1"}], ")"}], "*", 
          RowBox[{"BuyPrice", "[", 
           RowBox[{"t", "+", "1"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "initBatt", "+", "xGB", "+", "xRB", "-", "xBC", "-", "xBG"}], 
             ")"}], "+", "yGB1", "+", "yRB1", "-", "yBC1", "-", "yBG1"}], 
           ")"}], "*", 
          RowBox[{"ReserveCost", "[", 
           RowBox[{"t", "+", "1"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "initBatt", "+", "xGB", "+", "xRB", "-", "xBC", "-", "xBG"}], 
             ")"}], "+", "yGB1", "+", "yRB1", "+", "yBC1", "+", "yBG1"}], 
           ")"}], "*", 
          RowBox[{"TransitionCost", "[", 
           RowBox[{"t", "+", "1"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"yBG1", "+", "yRG1"}], ")"}], "*", 
          RowBox[{"SellPrice", "[", "t", "]"}]}]}], ")"}]}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"randomStateSequence", "[", 
           RowBox[{"[", "t", "]"}], "]"}], "\[Equal]", "\"\<N\>\""}], ",", 
         RowBox[{"markovChainMatrix", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"randomStateSequence", "[", 
             RowBox[{"[", "t", "]"}], "]"}], "\[Equal]", "\"\<A\>\""}], ",", 
           RowBox[{"markovChainMatrix", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"markovChainMatrix", "[", 
            RowBox[{"3", ",", "2"}], "]"}]}], "]"}]}], "]"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"yGB2", "+", "yGC2"}], ")"}], "*", 
          RowBox[{"BuyPrice", "[", 
           RowBox[{"t", "+", "1"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "initBatt", "+", "xGB", "+", "xRB", "-", "xBC", "-", "xBG"}], 
             ")"}], "+", "yGB2", "+", "yRB2", "-", "yBC2", "-", "yBG2"}], 
           ")"}], "*", 
          RowBox[{"ReserveCost", "[", 
           RowBox[{"t", "+", "1"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "initBatt", "+", "xGB", "+", "xRB", "-", "xBC", "-", "xBG"}], 
             ")"}], "+", "yGB2", "+", "yRB2", "+", "yBC2", "+", "yBG2"}], 
           ")"}], "*", 
          RowBox[{"TransitionCost", "[", 
           RowBox[{"t", "+", "1"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"yBG2", "+", "yRG2"}], ")"}], "*", 
          RowBox[{"SellPrice", "[", 
           RowBox[{"t", "+", "1"}], "]"}]}]}], ")"}]}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"randomStateSequence", "[", 
           RowBox[{"[", "t", "]"}], "]"}], "\[Equal]", "\"\<N\>\""}], ",", 
         RowBox[{"markovChainMatrix", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"randomStateSequence", "[", 
             RowBox[{"[", "t", "]"}], "]"}], "\[Equal]", "\"\<A\>\""}], ",", 
           RowBox[{"markovChainMatrix", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"markovChainMatrix", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "3"}], "]"}], "]"}]}], "]"}]}], "]"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"yGB3", "+", "yGC3"}], ")"}], "*", 
          RowBox[{"BuyPrice", "[", 
           RowBox[{"t", "+", "1"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "initBatt", "+", "xGB", "+", "xRB", "-", "xBC", "-", "xBG"}], 
             ")"}], "+", "yGB3", "+", "yRB3", "-", "yBC3", "-", "yBG3"}], 
           ")"}], "*", 
          RowBox[{"ReserveCost", "[", 
           RowBox[{"t", "+", "1"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "initBatt", "+", "xGB", "+", "xRB", "-", "xBC", "-", "xBG"}], 
             ")"}], "+", "yGB3", "+", "yRB3", "+", "yBC3", "+", "yBG3"}], 
           ")"}], "*", 
          RowBox[{"TransitionCost", "[", 
           RowBox[{"t", "+", "1"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"yBG3", "+", "yRG3"}], ")"}], "*", 
          RowBox[{"SellPrice", "[", 
           RowBox[{"t", "+", "1"}], "]"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"xBC", "+", "xGC", "+", "xRC"}], "\[Equal]", 
       RowBox[{"Demand", "[", "t", "]"}]}], "&&", "\[IndentingNewLine]", 
      RowBox[{"0", "\[LessEqual]", " ", 
       RowBox[{"initBatt", "+", "xRB", "+", "xGB", "-", "xBG", "-", "xBC"}], 
       "\[LessEqual]", " ", "capBat"}], "&&", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xRG", "+", "xRB", "+", "xRC"}], "\[Equal]", 
       RowBox[{"AvailableResource", "[", "t", "]"}]}], "&&", 
      "\[IndentingNewLine]", 
      RowBox[{"xGB", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xGC", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xRB", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xRC", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xRG", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xBC", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"xBG", "\[GreaterEqual]", "0"}], "&&", "\[IndentingNewLine]", 
      RowBox[{"yGB1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yGC1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRB1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRC1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRG1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBC1", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBG1", "\[GreaterEqual]", "0"}], "&&", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yBC1", "+", "yGC1", "+", "yRC1"}], "\[Equal]", 
       RowBox[{"Demand", "[", 
        RowBox[{"t", "+", "1"}], "]"}]}], "&&", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"initBatt", "+", "xGB", "+", "xRB", "-", "xBC", "-", "xBG"}],
          ")"}]}], "\[LessEqual]", " ", 
       RowBox[{"yRB1", "+", "yGB1", "-", "yBG1", "-", "yBC1"}], 
       "\[LessEqual]", " ", 
       RowBox[{"capBat", "-", 
        RowBox[{"(", 
         RowBox[{"initBatt", "+", "xGB", "+", "xRB", "-", "xBC", "-", "xBG"}],
          ")"}]}]}], "&&", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yRG1", "+", "yRB1", "+", "yRC1"}], "\[Equal]", 
       RowBox[{"AvailableResource", "[", 
        RowBox[{"t", "+", "1"}], "]"}]}], "&&", "\[IndentingNewLine]", 
      RowBox[{"yGB2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yGC2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRB2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRC2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRG2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBC2", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBG2", "\[GreaterEqual]", "0"}], "&&", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yBC2", "+", "yGC2", "+", "yRC2"}], "\[Equal]", 
       RowBox[{"Demand", "[", 
        RowBox[{"t", "+", "1"}], "]"}]}], "&&", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"initBatt", "+", "xGB", "+", "xRB", "-", "xBC", "-", "xBG"}],
          ")"}]}], "\[LessEqual]", " ", 
       RowBox[{"yRB2", "+", "yGB2", "-", "yBG2", "-", "yBC2"}], 
       "\[LessEqual]", " ", 
       RowBox[{"capBat", "-", 
        RowBox[{"(", 
         RowBox[{"initBatt", "+", "xGB", "+", "xRB", "-", "xBC", "-", "xBG"}],
          ")"}]}]}], "&&", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yRG2", "+", "yRB2", "+", "yRC2"}], "\[Equal]", 
       RowBox[{"AvailableResource", "[", 
        RowBox[{"t", "+", "1"}], "]"}]}], "&&", "\[IndentingNewLine]", 
      RowBox[{"yGB3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yGC3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRB3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRC3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yRG3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBC3", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"yBG3", "\[GreaterEqual]", "0"}], "&&", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yBC3", "+", "yGC3", "+", "yRC3"}], "\[Equal]", 
       RowBox[{"Demand", "[", 
        RowBox[{"t", "+", "1"}], "]"}]}], "&&", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"initBatt", "+", "xGB", "+", "xRB", "-", "xBC", "-", "xBG"}],
          ")"}]}], "\[LessEqual]", " ", 
       RowBox[{"yRB3", "+", "yGB3", "-", "yBG3", "-", "yBC3"}], 
       "\[LessEqual]", " ", 
       RowBox[{"capBat", "-", 
        RowBox[{"(", 
         RowBox[{"initBatt", "+", "xGB", "+", "xRB", "-", "xBC", "-", "xBG"}],
          ")"}]}]}], "&&", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yRG3", "+", "yRB3", "+", "yRC3"}], "\[Equal]", 
       RowBox[{"AvailableResource", "[", 
        RowBox[{"t", "+", "1"}], "]"}]}]}]}], "\[IndentingNewLine]", "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "xGB", ",", "xGC", ",", "xRB", ",", "xRC", ",", "xRG", ",", "xBC", ",", 
     "xBG", ",", "yGB1", ",", "yGC1", ",", "yRB1", ",", "yRC1", ",", "yRG1", 
     ",", "yBC1", ",", "yBG1", ",", "yGB2", ",", "yGC2", ",", "yRB2", ",", 
     "yRC2", ",", "yRG2", ",", "yBC2", ",", "yBG2", ",", "yGB3", ",", "yGC3", 
     ",", "yRB3", ",", "yRC3", ",", "yRG3", ",", "yBC3", ",", "yBG3"}], 
    "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NMinimize", "::", "incst"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(NMinimize\\)\[NoBreak] was unable to \
generate any initial points satisfying the inequality constraints \
\[NoBreak]\\!\\({\\(\\(\\(\\(\\(\\(-6745.668156970725`\\)\\) + \
\\(\\(0.9999999999999998`\\\\ xBC\\)\\) + \\(\\(0.9999999999999998`\\\\ \
xGC\\)\\)\\)\\) \[LessEqual] 0\\)\\), \
\\(\\(\\(\\(\\(\\(-4450.381745190711`\\)\\) + \\(\\(2.220446049250313`*^-16\\\
\\ xBC\\)\\) - xBG + xGB + \\(\\(1.0000000000000002`\\\\ xGC\\)\\) - \
\\(\\(1.0000000000000002`\\\\ xRG\\)\\)\\)\\) \[LessEqual] 0\\)\\), \\(\\(\\(\
\\(\\(\\(4450.381745190711` \[VeryThinSpace]\\)\\) - \
\\(\\(1.0000000000000002`\\\\ xBC\\)\\) - \\(\\(1.0000000000000002`\\\\ \
xGC\\)\\) + \\(\\(1.0000000000000002`\\\\ xRG\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\[LeftSkeleton] 11 \[RightSkeleton]\\)\\), \
\\(\\(\\(\\(\\(\\(-2295.2864117800186`\\)\\) + \\(\\(0.9999999999999998`\\\\ \
yRB3\\)\\) + \\(\\(0.9999999999999998`\\\\ yRG3\\)\\)\\)\\) \[LessEqual] 0\\)\
\\), \\(\\(\\(\\(\\(\\(5595.268609051487` \[VeryThinSpace]\\)\\) - \
\\(\\(2.220446049250313`*^-16\\\\ xBC\\)\\) + xBG - xGB - \
\\(\\(1.0000000000000002`\\\\ xGC\\)\\) + \\(\\(1.0000000000000002`\\\\ \
xRG\\)\\) + yBG3 - yGB3 - \\(\\(1.`\\\\ yGC3\\)\\) + \
\\(\\(2.220446049250313`*^-16\\\\ yRB3\\)\\) + \\(\\(1.0000000000000002`\\\\ \
yRG3\\)\\)\\)\\) \[LessEqual] 0\\)\\)}\\)\[NoBreak]. The initial region \
specified may not contain any feasible points. Changing the initial region or \
specifying explicit initial points may provide a better solution. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NMinimize/incst\\\", \
ButtonNote -> \\\"NMinimize::incst\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.604193808680309*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NMinimize", "::", "nnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\(\\(\\(-23.912555051245597`\\)\\) - \
\\(\\(15.589200421598878`\\\\ \\(\\(\\(\\({\\(\\({0.7`, 0.2`, 0.1`}\\)\\), \
\\(\\({0.6`, 0.3`, 0.1`}\\)\\), \\(\\({0.5`, 0.4`, \
0.1`}\\)\\)}\\)\\)[\\(\\(3, 2\\)\\)]\\)\\)\\)\\)\\)\[NoBreak] is not a number \
at \[NoBreak]\\!\\({xBC, xBG, xGB, xGC, xRB, xRC, xRG, yBC1, yBC2, yBC3, \
yBG1, yBG2, yBG3, yGB1, yGB2, yGB3, yGC1, yGC2, yGC3, yRB1, yRB2, yRB3, yRC1, \
yRC2, yRC3, yRG1, yRG2, yRG3}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.004702136253247247`, 0.048002776472569675`, \
0.08756837940127025`, 1.9174173766476146`, \\(\\(-4448.463455788662`\\)\\), \
6743.746037457824`, 0.003830110852756863`, 6162.35964146517`, \
2651.4060800130055`, 1244.9556862378183`, 0.0071706895084590275`, \
0.060288341022053805`, 0.0151693976062657`, \\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\), 1.9968902280476475`, 0.0704125214883193`, \
0.07767442123226471`, 0.014526324569183858`, 0.06719194638981218`, \
0.013844476776451354`, 0.07670081606351026`, 2295.1693822372818`, \
2295.2675044478738`, 2295.2030630784084`, 0.04983759634955336`, \
0.005062855370622255`, 0.006647885547152988`}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NMinimize\\\", ButtonNote -> \\\
\"NMinimize::nnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6041938087713137`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Demand", "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.6041938443983517`*^9, 3.6041938461224504`*^9}}],

Cell[BoxData["2766.423559567115`"], "Output",
 CellChangeTimes->{3.6041938519247828`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RootApproximant", "[", "2766.423559567115`", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], " ", 
  RowBox[{"(", 
   RowBox[{"4154", "+", 
    SqrtBox["17183269"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.604193987589542*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"initBatt", "=", "10"}]], "Input",
 CellChangeTimes->{{3.604193913376297*^9, 3.6041939159064417`*^9}, {
  3.604193989672661*^9, 3.604193991240751*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.6041939924808216`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["firstState"], "Input",
 CellChangeTimes->{{3.604194080077832*^9, 3.6041940807818723`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"181.64315615297997`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xGB", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xGC", "\[Rule]", "1121.142548108026`"}], ",", 
     RowBox[{"xRB", "\[Rule]", "100.`"}], ",", 
     RowBox[{"xRC", "\[Rule]", "2264.1404817351918`"}], ",", 
     RowBox[{"xRG", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xBC", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xBG", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGB1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGC1", "\[Rule]", "525.0174665268364`"}], ",", 
     RowBox[{"yRB1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yRC1", "\[Rule]", "2295.2864117800195`"}], ",", 
     RowBox[{"yRG1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yBC1", "\[Rule]", "100.`"}], ",", 
     RowBox[{"yBG1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGB2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGC2", "\[Rule]", "5772.759982079486`"}], ",", 
     RowBox[{"yRB2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yRC2", "\[Rule]", "2295.2864117800195`"}], ",", 
     RowBox[{"yRG2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yBC2", "\[Rule]", "100.00000000000045`"}], ",", 
     RowBox[{"yBG2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGB3", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGC3", "\[Rule]", "956.672744996732`"}], ",", 
     RowBox[{"yRB3", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yRC3", "\[Rule]", "2295.2864117800195`"}], ",", 
     RowBox[{"yRG3", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yBC3", "\[Rule]", "100.`"}], ",", 
     RowBox[{"yBG3", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6041940812709*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6041939846073713`*^9, 3.6041939856904335`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["secondStage"], "Input",
 CellChangeTimes->{{3.6041940964377675`*^9, 3.604194099940968*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"595.9314136413473`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xGB", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xGC", "\[Rule]", "4308.596245933433`"}], ",", 
     RowBox[{"xRB", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xRC", "\[Rule]", "2295.2864117800195`"}], ",", 
     RowBox[{"xRG", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xBC", "\[Rule]", "4.547473508864641`*^-13"}], ",", 
     RowBox[{"xBG", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGB1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGC1", "\[Rule]", "6215.147097226974`"}], ",", 
     RowBox[{"yRB1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yRC1", "\[Rule]", "2295.2864117800195`"}], ",", 
     RowBox[{"yRG1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yBC1", "\[Rule]", "100.00000000000045`"}], ",", 
     RowBox[{"yBG1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGB2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGC2", "\[Rule]", "3645.3770897974887`"}], ",", 
     RowBox[{"yRB2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yRC2", "\[Rule]", "2295.2864117800195`"}], ",", 
     RowBox[{"yRG2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yBC2", "\[Rule]", "100.`"}], ",", 
     RowBox[{"yBG2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGB3", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGC3", "\[Rule]", "1651.126069801412`"}], ",", 
     RowBox[{"yRB3", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yRC3", "\[Rule]", "2295.2864117800195`"}], ",", 
     RowBox[{"yRG3", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yBC3", "\[Rule]", "100.`"}], ",", 
     RowBox[{"yBG3", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6041941006110067`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", "]"}], "0.5"}]], "Input",
 CellChangeTimes->{{3.604194152833993*^9, 3.6041941762663336`*^9}}],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{{3.6041941573882537`*^9, 3.604194172464116*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["secondStage"], "Input",
 CellChangeTimes->{{3.6041942067240753`*^9, 3.6041942076991315`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"150.82186492731924`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xGB", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xGC", "\[Rule]", "2863.1803881586106`"}], ",", 
     RowBox[{"xRB", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xRC", "\[Rule]", "2295.2864117800195`"}], ",", 
     RowBox[{"xRG", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xBC", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xBG", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGB1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGC1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yRB1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yRC1", "\[Rule]", "1059.0411838488258`"}], ",", 
     RowBox[{"yRG1", "\[Rule]", "1236.2452279311938`"}], ",", 
     RowBox[{"yBC1", "\[Rule]", "100.`"}], ",", 
     RowBox[{"yBG1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGB2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGC2", "\[Rule]", "1268.2897804725294`"}], ",", 
     RowBox[{"yRB2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yRC2", "\[Rule]", "2295.2864117800195`"}], ",", 
     RowBox[{"yRG2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yBC2", "\[Rule]", "100.`"}], ",", 
     RowBox[{"yBG2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGB3", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGC3", "\[Rule]", "24.986727783749302`"}], ",", 
     RowBox[{"yRB3", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yRC3", "\[Rule]", "2295.2864117800195`"}], ",", 
     RowBox[{"yRG3", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yBC3", "\[Rule]", "100.`"}], ",", 
     RowBox[{"yBG3", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.604194208233162*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"initBatt", "=", "10"}], ";"}]], "Input",
 CellChangeTimes->{{3.604195052285439*^9, 3.604195057575742*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"StateMinimize", "[", 
     RowBox[{"t", ",", "initBatt"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "1", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.60419495632195*^9, 3.604195047768181*^9}, {
  3.604195321424833*^9, 3.60419532190286*^9}, {3.6041957516484404`*^9, 
  3.6041957529645157`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(1.0020224285714285`\\)\
\[NoBreak] is neither a machine-sized integer nor a list of machine-sized \
integers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/pspec\\\", ButtonNote -> \
\\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6041950638341*^9, 3.6041953226129007`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(1.0020224285714285`\\)\
\[NoBreak] is neither a machine-sized integer nor a list of machine-sized \
integers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/pspec\\\", ButtonNote -> \
\\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6041950638341*^9, 3.604195322671904*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(1.0020224285714285`\\)\
\[NoBreak] is neither a machine-sized integer nor a list of machine-sized \
integers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/pspec\\\", ButtonNote -> \
\\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6041950638341*^9, 3.6041953227289076`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
pspec\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6041950638341*^9, 3.604195322758909*^9}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{1, 100}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.6041950679253335`*^9, 3.604195325621073*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"StateMinimize", "[", 
   RowBox[{"10", ",", "initBatt"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6041953309783792`*^9, 3.6041953641492767`*^9}}],

Cell[BoxData[
 RowBox[{"-", "5889.048430300105`"}]], "Output",
 CellChangeTimes->{{3.604195340450921*^9, 3.6041953646883073`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", "1000"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
   "(", "\[IndentingNewLine]", "StageMinimize", "\[IndentingNewLine]", 
    ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.604195384437437*^9, 3.604195415418209*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"StageMinimize", "[", 
     RowBox[{"t", ",", "initBatt"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "1", ",", "10", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.604195843468692*^9, 3.6041958710082674`*^9}, {
   3.604195921910179*^9, 3.6041959270944753`*^9}, 3.6041961752906713`*^9, {
   3.6041965184833007`*^9, 3.604196520690427*^9}, {3.604196605328268*^9, 
   3.604196605995306*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "278.8997428554277`", ",", "403.4452431894059`", ",", "210.62290652687625`",
    ",", "306.9248101752913`", ",", "378.344953573205`", ",", 
   "951.6300341460835`", ",", "28.229785150001845`", ",", 
   RowBox[{"-", "3132.68269992992`"}], ",", 
   RowBox[{"-", "3687.5679136676545`"}], ",", 
   RowBox[{"-", "4722.187333782782`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6041961968729057`*^9, 3.6041963093233376`*^9, 3.604196523758602*^9, {
   3.604196590083396*^9, 3.6041966193800716`*^9}, 3.604196670284983*^9, {
   3.6041967204248514`*^9, 3.604196728532315*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"StageMinimize", "[", 
   RowBox[{"6", ",", "0"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6041963239591746`*^9, 3.6041963647655087`*^9}, 
   3.60419643822071*^9, {3.604196485284402*^9, 3.6041964907697153`*^9}}],

Cell[BoxData["591.2572380882272`"], "Output",
 CellChangeTimes->{{3.604196334934802*^9, 3.604196389758938*^9}, {
  3.604196470009528*^9, 3.6041964911507373`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.6041969976147056`*^9, 3.6041970003958645`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.6041970008558908`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6041970038690634`*^9, 3.6041970436743402`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], 
    LineBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 4.}, {5., 5.}, {6., 6.}, {7., 
     7.}, {8., 8.}, {9., 9.}, {10., 10.}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 10.}, {0, 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.2, 0.2}, {0.2, 0.2}}]], "Output",
 CellChangeTimes->{3.6041970105664463`*^9, 3.6041970442443724`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"res", " ", "=", 
  RowBox[{"{", "}"}]}]], "Input",
 CellChangeTimes->{{3.604197050829749*^9, 3.604197069191799*^9}, 
   3.60419719385993*^9, 3.6041972676481504`*^9}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.6041970700928507`*^9, 3.604197125008992*^9, 3.6041971964300776`*^9, 
   3.604197268250185*^9, {3.604197315348879*^9, 3.604197326222501*^9}, 
   3.6041973599254284`*^9, {3.6041974204508905`*^9, 3.6041974254951787`*^9}, 
   3.60419762937184*^9, 3.6041977629524803`*^9, 3.604197817785617*^9, 
   3.604198461821453*^9, 3.6041994792676477`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", "10"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"res", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"res", ",", 
        RowBox[{
         RowBox[{"StageMinimize", "[", 
          RowBox[{"i", ",", "initBatt"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}], 
    "\[IndentingNewLine]", ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.604197222551571*^9, 3.6041973236173515`*^9}, {
   3.6041973621125536`*^9, 3.6041973922172756`*^9}, 3.604197422456005*^9, {
   3.6041976356682*^9, 3.6041976368052654`*^9}, 3.6041977787383833`*^9, 
   3.6041978217918453`*^9, {3.604198411515576*^9, 3.6041984145117474`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NMinimize", "::", "argrx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(NMinimize\\)\[NoBreak] called with \
\[NoBreak]\\!\\(3\\)\[NoBreak] arguments; \[NoBreak]\\!\\(2\\)\[NoBreak] \
arguments are expected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NMinimize\\\", ButtonNote -> \
\\\"NMinimize::argrx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6041991174629536`*^9, 3.604199457240388*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NMinimize", "::", "argrx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(NMinimize\\)\[NoBreak] called with \
\[NoBreak]\\!\\(3\\)\[NoBreak] arguments; \[NoBreak]\\!\\(2\\)\[NoBreak] \
arguments are expected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NMinimize\\\", ButtonNote -> \
\\\"NMinimize::argrx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6041991174629536`*^9, 3.604199457319392*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NMinimize", "::", "argrx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(NMinimize\\)\[NoBreak] called with \
\[NoBreak]\\!\\(3\\)\[NoBreak] arguments; \[NoBreak]\\!\\(2\\)\[NoBreak] \
arguments are expected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NMinimize\\\", ButtonNote -> \
\\\"NMinimize::argrx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6041991174629536`*^9, 3.604199457401397*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NMinimize \
:: argrx\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6041991174629536`*^9, 3.604199457432399*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["res"], "Input",
 CellChangeTimes->{{3.6041972906704674`*^9, 3.6041972909894857`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"524.6259841806541`", ",", "603.6974214968602`"}], "}"}]], "Output",
 CellChangeTimes->{3.6041984800184937`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"res", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.604197334731988*^9, 3.6041973491878147`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.604197418324769*^9, 3.6041974183707714`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.604197353925085*^9, 3.604197353993089*^9}}],

Cell[CellGroupData[{

Cell[BoxData["$MachineEpsilon"], "Input",
 CellChangeTimes->{{3.6041993031295733`*^9, 3.604199314823242*^9}}],

Cell[BoxData["2.220446049250313`*^-16"], "Output",
 CellChangeTimes->{3.6041993154182763`*^9, 3.6044123076048746`*^9}]
}, Open  ]],

Cell[BoxData["e"], "Input",
 CellChangeTimes->{{3.604412315702338*^9, 3.6044123173204308`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Demand", "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.6042372718823357`*^9, 3.604237274252471*^9}}],

Cell[BoxData["1331"], "Output",
 CellChangeTimes->{3.6042372746584945`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["firstStage"], "Input",
 CellChangeTimes->{{3.604411580989315*^9, 3.604411581907367*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"49.35774877470095`", " ", "Null"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"xGB", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"xGC", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"xRB", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"xRC", "\[Rule]", "2000.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"xRG", "\[Rule]", "227.78237794588085`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"xBC", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"xBG", "\[Rule]", "100.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yGB1", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yGC1", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yRB1", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yRC1", "\[Rule]", "2000.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yRG1", "\[Rule]", "161.615013538511`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yBC1", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yBG1", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yGB2", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yGC2", "\[Rule]", "919.1924932307445`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yRB2", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yRC2", "\[Rule]", "1080.8075067692555`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yRG2", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yBC2", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yBG2", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yGB3", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yGC3", "\[Rule]", "1459.5962466153724`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yRB3", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yRC3", "\[Rule]", "540.4037533846277`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yRG3", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yBC3", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yBG3", "\[Rule]", "0.`"}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6044115824463983`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global'*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6044116891385007`*^9, 3.604411696489921*^9}}],

Cell[CellGroupData[{

Cell[BoxData["firstStage"], "Input",
 CellChangeTimes->{{3.604411706125472*^9, 3.6044117069975224`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"28.509552025769302`", " ", "Null"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"xGB", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"xGC", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"xRB", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"xRC", "\[Rule]", "2000.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"xRG", "\[Rule]", "227.78237794588085`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"xBC", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"xBG", "\[Rule]", "100.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yGB1", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yGC1", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yRB1", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yRC1", "\[Rule]", "2000.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yRG1", "\[Rule]", "161.615013538511`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yBC1", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yBG1", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yGB2", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yGC2", "\[Rule]", "919.1924932307445`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yRB2", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yRC2", "\[Rule]", "1080.8075067692555`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yRG2", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yBC2", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yBG2", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yGB3", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yGC3", "\[Rule]", "1459.5962466153724`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yRB3", "\[Rule]", "1.1368683772161603`*^-13"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yRC3", "\[Rule]", "540.4037533846276`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yRG3", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yBC3", "\[Rule]", "0.`"}], ")"}]}], ",", 
     RowBox[{"Null", " ", 
      RowBox[{"(", 
       RowBox[{"yBG3", "\[Rule]", "0.`"}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.604411707350542*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$MachineEpsilon"], "Input",
 CellChangeTimes->{{3.60466309091673*^9, 3.6046630955909977`*^9}}],

Cell[BoxData["2.220446049250313`*^-16"], "Output",
 CellChangeTimes->{3.6046630960530243`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"wData", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "20"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6046722766345024`*^9, 3.604672303205022*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"wData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.604673036844984*^9, 3.6046730562100916`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1:eJx0vX+Ylvn4xz2SNZKMJCPJSDKSjDZt0rYjyWjbdrZt29m2bWdHkiRJkjYZ
SUaSkSRJRpIkSZIkGUmSZCRJskaSJCsrSbKe4/ne79d9HPN6jmf/uY7Xfn6d
5/tznufnuq/rbu4XNLx9wps6lZSU3NK3pOT/vRb+u3zb/11q31Od/1G4NsKl
hesOuKxwbYN7FK6X4fLCtWJhuHfhWgVXFK7VcN/CtQzuV93Rnv6Fa/2CcGXh
Oufd4QGxb354YNaDBxWu7e8KV8Ve+BWZn/6DYw/z31y4NsJDMh/8ysK1AvuG
yt5bCtcWeFjGw6+Kvfg7PP7Bry5cm+ERhWtxP24tXIv7MTJX9Lwt9sHVHbkx
XNy/13S0pzFci72j4l/8bwwX9X9txocbw0W9R3fkxnAt41+XdsaHi/s9pnBt
Zf1wCfa9vqO9jeFG2msK1zbaw2X4/4b4h//hYj6MLVzRvzFc1P/2XNE3XIzv
cYVrUf9wUf87Ctei/nd09KdkfOGKHo3hVvS7s3CtRr9wCe21sSdcHZ5Df9oz
f2u4GP93Fa5t4eow8d8YJv5bw83YPyHjw9XhCvwNE/+t4Rb0uTv/P1wdbmd8
GL1bw8X6MzHjwtXh4n6E2f/W8Bzsvyf+4H+4Hf3C6NkarkD/SbEH/cONjA9X
oP+kjuuV3Jv1WD9chf73drS3NVysP3WF62X0DxfjLUy8t4aL9ea+wpV4rw4T
v41h9GwNF+v95MK1Fv3D7E9juLj/4WL+3h9/8D9cQj6E0bM1XDwPpmQc+oeb
0T9chf5TOq5X8kD8Zf1wNfo/0NHe1nAr9k/NFf3C1egXpt63hon3kgezPuPD
xHtjGL1bw/XoX59+4YpwcT/qO65fH96Bf2HyvyVcjNdwS/RsZ370f6gjV4Q5
P6rD1ZmvPlys9+Gy2NPCfOgdJt7bw8XztiHrxr+KMPleHabe1IeJ98Yw9b2F
+dA7jJ7t4Tno/8bCtRn9w+xPdZh8qw8TP41h4q8ljF6t9Ef/MPlQMi3ro3+Y
+lVNO/qH0bsxjN4tYfRuDVNf2sPF+5s3ZR70DxfreZh4rg8Tz41h9GwJo2cr
86F/uB39p8c+9J/esX91mP2tD3N/0Bim3raEOR9b6R9uZ370f3Ph2ob+YfKn
Oky814eL9SXMedoSJr5bmS/2toeL95MzClfiqyJcrCdh9K4Po3djGL1bwujX
ynzoHy55ONe3ZN1wxVs69q8Ocx7Uh4v1MVyMv/AO9Gc8+oeJ75KZWQ/9w+RP
dZjztX5mx/Uaw8R7C/OhP/Ohf7h4//jWwpV6UhEm3qvD1I/6MHo3htG7JUx8
t4bRtz1chf6zsg76z+rYvzpMPaoPEz+NYc63ljB6tTIe/cPFz1Nvy3rhijD3
s9Vh6k19mHhvDBPvLczHecl86B8unp+zcyX/w8X7wTDnY30YvRvDxGtLGP1a
w7XoH56D/m/PPOgfrkf/MPtdHy5+3ghzHrSEuf9uDXO/0h6uRf85mTdcFiZ/
KmjPfFVh9K4Oo3dtGL3rw+g9J1z8PBQmvpvndPS3JdwW3hEuQ98w8dzG+ugd
bglfxj/0f0fGhcve0bF/RZh8qoKpj2Hu32rD1If6MPV7Trj4eS3MedGMPZzn
9M98O8LF+hKmvrQxH/HOfOHL4eLn/7mZP1wWJr4rwsR3VRi9q8PEa224OVzP
fOE54fZwI/OHm8PsR0uY82IHTH0LE39t+MP9ButFz8vh4v37OzMv8R/m+UFF
mPpe9c6O61WHifda5iP+mS/2zgkX71+Yn/gPF+sJ6+F/GL1bw+jdxvrEP/MR
/9izKNd5mT9cNq9j/wraw1Uw9THM/VxtmPOgnvmI/zD6N4bRvzmM/i30J/7D
3H+1hrlfb2M+4p/5Yu9l7CX+89yJelMWpt5UhKk3VWHqeXWYelMbpn7UMx/x
H0bfRp6DRf9m9W+hnf2HiX/sw/8w9ZrnnNST4nM24j/3Pdzf8xyIfOE5BftZ
/NxM/Id5PsvnuOLnxTD1h+cgxc+nYe4v+BxCPhQ/N1L/uU8j/vmcQvyHi/U/
TD5wn0c94jlBsf5Td4l/zk3qHzriPzriP/eJxD/3QcQ/ca9rs67F+k8/4l/r
MW+x/jMP8c981H/2mfjHTuKfdYh/4gj/qYvEf5h8KN4XE//MR/yH0Ru/OA+a
1Z+8px7y3AH9i89R8B9/mJf12Dfsk47F+JduxeeQxP97OvZDd+oPedCi/8/9
AudEMf7pR/wznvjHL/xnPPGPHcQ/9hL/4WL8Mx/xT10k/qkrxD9xQv1b2HFc
8Tke/nOfqrgqxj9+E9di6nAx/mlXXBbrP+v9/+hE3OJ38T5GfmFHUVfi/2GN
e7jjFd2L9Z86TfwzXv3KUu+L9/3Uf/Uv1iHN+//ZJ+1rvfKqGP/4S/yzLvEf
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
Df5k/XEwv+skeyeGOZ/rsC88Rf7WYy/5H+b+aQbr8fmf9cJzwsTzvDD3twvC
nB+LsI/zH395/wfHvybWI//h6N+MP9FvtfRdG+Z37daLW9R/E/5G/y3ok3zb
BnP+y95d6J392MN68W8fevG7VKxH/hOfvP9n/vBR9OTzv/bjRLj4/I/xPP/D
X85/1uP9n+LrAuPj/yXF52XF7xU4el6jf3538Ia45HOFK/vROUz+lIb5Xbuu
YT4/l32uo709aA+XMz770Ttc/N2wMOd1vzD1qTLMfgykf7gqzH4MYX6e/+EP
z//CnLfV2M/7P/onvmpoj/7j0IvfHcS/6DcRjr51jA9PEdeH+R3JaeiX+Waw
XvSfBfM7fLJ3Hv5H/wX0j/6LwnyeaWQ8+R/md9SatB8r6B9u1n6s1n6sZTzP
/7CH8x97ef+HHvFvC+3xfxvM71biT/TbBed3PvfQP7yP9fldUPQOH2R/ov9h
/M1+H4U5/2XvCTj7cYr+2Y8z2o929CH/iU/e/2Mfn/+1H5e1H1eIP57/MZ7v
/2m+kpb0j32dwsXnAWHO15vg6FMa5ndTu8DRsyv987uv3cRlYX4HtnuY313t
gX3Z757Yl3goD3M/3Iv5on9v2sN95G8FnP3oG+bzRD/sDfdnvnAl/kbfAWHq
y0DGhwdpvirsjT2D8T/+DKE9+g+Fo/8w7I9+w9En+o7AvvBIcTXjw6PwL/ON
pn/0H4N90b8Gf2LvWJj7pTD1aTzjuX+Co/8E/ON9apjzcVKY86KO/tF3MvPx
fUvGh6fSzv0X9sa+BsXXNOyP/9Ppn/icoXifKX1noW9+d3m2eI76z2W9zDeP
/tnv+djH5zv2K/YuRI/ov4j28GLG8/4Hzn4swb/sx9Iw9WkZ9nE+aD+Wh3n+
sUL7sxJ7eH4s+1ahR/xZTXv8X8N80X+t4n0dHH3Xs9/hDeIW5g9vVD3aRP+s
vxn/uT9Fr9i7VfVzG/sX/7bD3L8yPvrvVD7skl67lQ97wtzP7g1zfu9Tvdqv
/W1Vvh6gf/w7qPg7pPpwWPXjiPQ/Kr2PoV+4TfofhzPfCeIh659kvth3ivmi
/2nVozO0x79HVI/aVY/Osv/R55zOh/M6Hy5Q78MXlQ+XxI/iT+a7zPqx7zHW
i39XdN5eRd/of036X1d9uSG9HxeXfD7XjO8EZ/7OYfS/KYz+pWH07xLm80rX
MPHVDeZ3nRkf/buzXvTpEeZ5a0/Wj57lzBfuRf9wb3EfzV/BfLGvL/bzPJL2
+N+f9aJPJfZHvwFw9B2InuFB4irWCw/G3sw3JMz97VDGx75h2Bf9h2Nf9B8h
/UdiX/SvZnz0HyV9RrN+eIz0rwlTf8ZK73Hi8djP71DDsW8C9sW/ibRH/0ms
H/3rsDd6TaY9ek7B/obCdaq4XvvVgF6Zbxoc/afjT+4HZmBf9J/J+tF/luJr
NszvkjM++s/FvvA81o9e88OcxwuwP7xQ+7FIvJj5+F1zxcsS+bdU/i/DvujT
BEe/5YrvFYxvKFxXEu/hZu3XKjjzr4az/hrmi31rla/rsCf7sR6Ofxtg3j8z
PvuxUfpsYv3ovxn/eD8V5jzeGuY82Cbernq3A459O7En/u2S/rul/x72K/rt
VXzvk/77pX+r9D8g/Q9K/0PYG/sOM3/0P4I90f8oHP+OwdG/TefBcelzQvXi
pM6DU2HO49PKhzPan0eUb+2Kl7P4y/N46kv8P6/6cEH146L0vsR64UeZL3wZ
f8KPaT+vsF+pd1exl+d7zBf9r2NP/Lmh+Hpc9ahkY67Rv1OYz8udw+TDTWHy
oZT+4S5hnrd2DVOvuoU5f8rg2Ns9zPOvHmH874m90b+c9RsK1160h3tj/0OF
ax/mC1fgT/r3xZ7o34/2rN+f9thXyXyJlwHYk/0YiD3RfxDt4SrGZz8GM3/0
GRLm/f9QxoeH4V/0H057eESYfBlJO99/kr2jwtzvjIbj/xjsjT41rN9QuI5l
veg7jvHh8eJa1g9PCHN+TKQ9+z2J9thXx3zRfzL2xJ8p2Jv4mkp79K9nfPRo
YP7oPw1/wtPD1KcZYe6XZjJ/eBbzh2cznue3cOydy3qpN/OwP/7Px77oswBu
KFwXsl70XBRury9cF9M/7Y3YG17CeplvKfZl/WW0x74m5s9+LA9Tj1bA0X8l
HP2bGR9exfzRZzX+RP812B/914Z5frGO+aP3euZP+wbGc/7DsXdjmPN2Uxj/
N7NeQ+G6BY5+W5kvvA1/ov92+od3MH/674Qz/64w5/Fu2bcnjP57w+i/D47+
+7EverdiT/gA9kafg6wf/Q+xXvgw/aPvEeaP/kfVfgzm+Tn+JH+PMz7+nWC9
xPtJ7GkoXE/B0e8080ffM7SHHwnXh9uZP3yW9TP/uTDn8Xn6px5eYP7of1H+
XIKzH4+yfvbjcph8eIz5w1cYn/24Sv/of43+4evYE71vqP1xOOuXfCH+xf5O
YZ5ndobj/01h6kUpHP26wA8Wrl2Zf2rh2i1ckvYy5s/47nDm7xHmfO8p+8pZ
L/HSS/70hrMffcJ8XqgIsx99mT/692N8uD/9sx+V9I++A7CH7yupfRD+8/0F
OPYOZn4+/8MNhetQ9Ihew7Aveg4PV0fvEbQ/ULiOZL20V9M/40ehT+YfrfXH
0B77apgv+o9lvvgzDo7+49GD96f4E56AvdFnIutH/0msF/3r6B+eLL2nqH2q
9r8ejv0NzM/nf7ihcJ2ueJ+heJ4pvWfhf3g248NzlB9z8Tfzz9P685kv9i3A
/uTDQvSMP4vg7Mdi5UMj9kSPJcqHpawf/ZexXrgJe6Lvcum9Qu0rtf/NcOxd
hT2pN6tVb9ZgT/RZq3hex/pTCtf1tIc3YE+4RfuxUfm0Setvpj32bWG+6L9V
9WgbHP23oy/vr7EveuxUPuxifPZjt+rTHvqH90rvfapf+9m/rN/K/LH/gOrt
QdWbQ4rXw9L7CPPdX7gexb/wMXGb9uM44zP/CfpH/5M6j06pHp1WPTqjfHhE
50M760WPs9gT/c9pP84rPy5oPy4qPy4pfx7V+pdl/2OsF3+vKN6vqp5ck57X
4cmF6w3631e4Ps764ZJNHcd3gjN/5zD3TzeFOQ9Kw9yfdQkX3/8zX/TvRv9w
WZj3S92ZP/vRg/HRvyf9+X4x9mU/eoU5P3pjT7iP1q+gf+zvS//o3y9MPPan
f/SqpD16DoDrCteB2B8epPYq5sv4wfRPPgzBv9SjofSPfcNoj/3DmZ/3/3D2
YyT6xv9qxkf/UazP9yHRm/f/6MP3I7EnPJb5o/c4tY/X+rWyfwLrJd4mMj7x
OAlOfNdJz8nwvYXrFPwJT2W9cD3zZXyD5p9G/+z/dDj6z6B/Q+E6E314/8/6
0X+28mGO4nEu9mc/5jFf9J/PeuEF6Bl9FzJfeJH2azHtsadR9i+hf/Rfij2J
x2WK1ybpvRx9JhWuK/A3vFLtzRq/SvOvpn/2fw3tnP+0x/51xE/iaT2c/dgA
x/8W1o/+G5UPm1iP9/+qT1vQM7yV+aL3Nu3XdsZn/R2yf6fyfRfzpd7sVrzu
gaPnXviewnUf48P71d6q/DjA+tH/oPb/EBz9DzM+9h/Bv+h/lPmi/zH530Z7
9D/OfNH7hPLhpPLhlOrTaeaL/me0X48oH9vZv+TzWfRJvp/T+Xie+aP/BcXz
RfpH30vMN7FwfZT+ab+Mfxn/mOrZFZ0HV5Wf1/A/9l+nf/S/ofP5cflf8sVc
o3+nMM8fO4fJh5to5/t/YfTtwnzRv2uY/erG+MRD2Rc72t+d9aJ/j3Bj6nFP
xidey+Ho2Yv+0bs384X70D9cgb3Rvy8c/fsxX/a/P+OTn5W0x/4BYe6fB9I/
+g+iPf5X0Z79GMx80X8I9kTvobTz/T/pOxw9wyO0XyPZr6xfDcf+Ucyfejua
9aP/GPSM/jVw9B9L/+g7jvnuLlzHq71W4ydo/ona/0mMj/51+B/7J9O/oXCd
Akf/qXD8r4ejfwPr831s5cN05cMM6TtT+TBL/Wez/7FnDpx8nos9yfd5+Jt6
PJ/5Eq8LFN8L4ei9CPsmFK6L1d6ofFkCZ/6ljM/6y7An+dlEvMX+5exHQ+G6
Ao6/K1k/+jfD0X8VeoRXKx/WKB/WKh/W0R7916v/BsVDCxz7N9I/+m+iPfVg
s+rNFsXzVum9jfHh7fSP/ju0fzu1v7sYH/13M3/yc4/03yv990n//cr/Vul/
QOfBQebn/b/0PCz9j6geHWU/M/4Y68WeNjj2H1e9PaF6f1L14pTi+TQcvc9g
b/gR7Uc782f8We3vOeXfeeaP/hdk/0XGpx5dghsK10eV/5d1HjymenQFPaPf
Ve3HNdWX66pHN9jv9H9c9pRsznqpp53g1NvOYe4PbwoTr6X0j55daL+rcO0a
bq0tXLupvUzju8OZvwfjs35Pxic/y2mP/b3CnGe94fjbh/mjfwUc/fuGeX7R
j/nD/Vk/elbSHh5Ae/QfGKaeDWL+2FOFvqmngxmfeBvC/InHofRPvA6TnsNp
j94j8O/OwnUk/dNerfGj4Mw/mvGpR2OwJ/FRQ3vsH0t78mEczPt/9GgoXGth
Pv9rPyZqPyaF+fxWR3v0n6z9mKLxU5k/9tTTP/HUgH6p99MUj9NpT7zOkJ4z
6T++cJ1F//Bstc+BM36u8mEenP2fz3zRfwHtqUcLsSf6L1I+LKZ/Q660R/8l
6BX9l6J3eJn0bNJ+LFd+rND4lex37GtG/9T7Vao3q2lPPK6hPfG6Fk58r4Pv
KFzXw+MK1w1qb9H4jcqHTap3m7En8bFF9WgrnHq0TfmwHf+zHzuUDztVn3Zp
P3YrP/ZoP/aqXu3Dv/Tfr/hoVT4foD35flD15pDi9bDi+4j0PgrfXrgeU3ub
xh/XeXFC+39S+XkKexI/p+mfenSG+Ob9v/K/XflwFv+j/znVp/O0R88LtIcv
Ml/0v0T8Z/yj2B97LiufH1O9v6J6cFX15pr0u07/6H0DHlu4Pq72ki/lmnzo
9KWO83emPfrfRHvyszRM/HShf/TvCsffbnD0LwuTD92Zr6Fw7RGmPvWkPVxO
e/TvxfzRvzec/n3g5GcF/uS87Ut79O8HR//+Yc7TSuk3AI6+A+HoP0jtVcyX
fBis+YfAWX8o/ic/h2F/9B9O/5wHI+D4OxK9sx/VzMfnf/o3FK6jw3x+GBMu
fv+P9aP/WOYLj9N+jqd/4qOW9ZLPE2hPvZ1Ie+rxJDjxXoee0W+y9J4Cv6Fw
ncr4cL32o0HzT9P+T4ej/wz8S/zMhHMezFK8zWb+6D+H+I3+c9G7oXCdJ/3m
az8WsJ/hhdqPRXDGL1Z8NGJf9F/Cesn3pbRH/2WK9ybmi97LpfcKuKZwXSlu
1n6s0vyrtf4a/El+rsXe2L+O/rz/V7xtUD1qUT5sVD5sYn8aCtfN9A9vwf7o
v1X7sU31bbviY4fq6U44+u9i/tTj3Yr3PYr3vdJ3H/z6wnW/uJX50/8AnHw4
qPUPYX/y8zD2Rv8jMO//6Z94O6Z61EY94fO/8uGE8uGk6tMp5cNp7ccZzfcI
9sS+duxNPp9VvT2HXqnH51UvLijeLzI++l6CxxSuj4ovq/9jyqcrOg+uKj+v
KX6u05/3/4q3x1WPSrZkfPTvFOZ5aucw+XAT/RsK11Law10YH/27hsmvbmHe
p5SF+XzTnfmS7z3on3rck/7RuxyOfr3oH317w68rXPuIKxif/n01fz846/dn
fPSvxN7EzwA458FA+kf/QXDqURX9sx+Dw+TDkDDxOxQ9ef9Pe0PhOlz7MQL7
M99I9i/xUU3/5PMo7Iv+o+HU4zFw9KmBo/9Y1ou+4+DRhet4ca32a4Lmn6j9
n4S9yc86/In+k+HoPwVOvE2FU4/qmS/70UD8Rq9ptIenM573/8qPmcqPWdif
8bPxP/bNoX/0n0t76u08xqfez4dTrxdIv4WK70XM99rCdbG4Ufu1RPMv1f4v
g6N/E/4nf5czX86DFXDibSWcfGhWPqyiPfmwmviOfmtUT9YqP9ZpP9Yzf+bb
QHvsa2G95PNG+kf/TXDq/WbVmy3Sb6viexvjo/d28Q7136n5d2n/d6s+7iF+
ov9e+se/fcr3/XD0b2W95MMB2qPXQZ0Ph5QPh5UPR6hf4aPKr2P0j31tcPQ/
jj05707AOQ9PSp9T0v+09DwjvR9R/LcrX85q/nPS/zzt0f8C7dH/Iv7mPL5E
e/R/lPbUo8uqR48pXq+oHl3V+XBN5/V17AvfYP7o/7jsK/lyOPncKcx51znM
/eVNcPQphaNfF8ZH367wqMK1m7iM8dmv7pq/B5z86wlH/3LmS/3sFeZ+qDft
qbd9aI/+FfiffOhL/+jVj/bsR/8w9agyTD0awPzRfyDzZX8HYX/sq6J/9B9M
e/Qfwvich0NpT70fJv2GS98R8GsK15H0T3u19msUnPlHw9n/MXDqYw36JH/H
0p7zeBztyffxcPKhFv+j/wTao9dE7I3+k8LkQx3rhSdrP6Zof6fKvnraE08N
tOe8m8b60X867Yn3GdJvpvSfJf1nS/85Gj9X+ztP+s9Hr+i/gPbov5D2+LeI
9ui/GI7+jawXfZYoXpeiT/JhmfKhSfmwnPbwCubL/CtlX7P0X4U9fP6X/muk
/1rpt076r5f+G9TeovEbFf+bpP9mxf8Wxf9W+bdN+m+nPfrvYHzq0U7ao/8u
1aPdcPTfQ3/e/ysf9im/9su+Vul/QPofZL7cDx6S/oel3xHpe1T6H1P8t2n8
cel/QvqfVPyfUvyfln9npP8jiv92xf9Z6X9O+p+X/hek/0XlwyXN/ygc+y4z
Pvo/xvy537hC/+h/lfbU+2vS+7r0vgFXF66Pq71ka67Rv1OY/e1MO+c/HP1L
w9y/dQnzeaAr/aN/Nzj6l7Fe4r8746NXD/pH/560h8th3v+HOR96a/4+2Bv7
Khgff/rSP/cb/Vg/9yP9aY9elXD0HABH74GMv61wHaT2KtpHFa6Dac/+DoGz
/0Ph3B8Mg3P/MJz54t8I/M39xkg490PV9I8+o2iP/qPh5MMYOPrXMD76j8We
8Dg4+z0e5vt/iqcJireJcOrBJMVrHRz9J8PRd4r0n6r2eunfIP2n0R79p9Oe
+jiD9ug/U/7NIr6S77Ph5MMc6TOX9uzHPOXDfDj7sYDx2Y+F2o9FyrfFjOf7
f7Tn89YSOOftUjj1YBnrjSpcmxTPy+k/snBdAd9auK7UfjRr/1Ypv1Yr/9bA
0X8t/VM/19Ee/dcTr9F/A8znf/RIPmxUPmyCo/9mOPpv0X5sVb3aBmf+7TDf
/1M87YT5/E//xONu1Zs90nMvPKJw3Qe/unDdr/1oVT4c0P4eVP4dUn08rPp5
ROfBUdXbY6pHbdLnuOL1hPbjpPbjlPbjtPiM9vsRmO//0T/n7Vn8i7/nVG/O
K14vKN4vSu9L8PDC9VHtz2WNf0z7e0X16Krq4zXVz+vy74bq0eNw8qHkK+kf
fTrB2Y/OcPbjJjj7UQpnP7qIu8LZ724w3/8Lc3/XPUy96UF79OhJe+K9HI7e
veBXFa694WGFax84+1EBZz/6wsmHfnD2vz/25DyopD3n8QDa499AOPkwCE4+
VEmfwdqPIfTPfgzVfgzTfgynf3gE7dnvkbTz/T/sT70fBSfeRtM/eoyhPfWj
RnqPhW8pXMfBQwvX8dqPWu3HBDj5MJH1RxWuk+DUxzr6p35ODlOPptAe/afC
0b+e/tGngXa+/wdH/+lw9J8BR++Z4lnMn/Vmsx+xb470nyv950n/+dJ/gfRf
KL0XiRdL/0bpv0T6L4VHFa7LpH+T9F8u/VdI/5XSv1n6r5L+q6X/GvqH18LZ
j3Xi9cq3DcwX+1qUzxuV75tUDzarXmyRnlvhVxau26T/duXHDu3fTu3vLtW/
3bRH/z1wzq+9iq99jM95sB/OedCq+nBA9eig6tEhnQ+HVY+OKD+Osh9Z7xjt
ud9sUzwdV76fUL0/qXp/Snqelv5npP8j6t8u/c9K/3PS/zyc+4MLcO6HLiq+
LqFP9H8Ujh6X6c+//1M+XIGzH1fh7Mc1nQ/XtT83tN7jOq9KtuUa/TvBowrX
znDqwU1w6kUpHD27wNG/q7gbnP0og5M/3eHsb48w9a8n7bk/KIdz/9CL/vGv
N5zzuE+Yzz8VYe5P+8LRvx/zR//+cPSvZL7wAMbz7/9hzn/sSb5WyZ/B8ncI
7ak3Q6XXMOk7HL65cB0hHgkPiV0aPwpOPoyGk39j4JxPNdib+jmW9pwH49An
+TAeTj7Uok/icwLzZT8maj8mwdmPOu3HZLVPgbPeVOZPvNTLnwb5O016TFf8
zpC+M+HBhess+BWF62y1z9H4ucqnedr/+crPBcrfhfiXerSI9ui/GI4ejfRP
fC6Bsx9LlR/LGJ/9aFJ+LNd+raA9+bcSzv1Os/xZJX9XS481it+10ncdXFW4
rocHFa4b1N6i/diofNikercZznmwBb14/696tA1OPdouPXYwPvuxU/uxS/mx
W/uxR/uxV/mzj/7Z//2Kl1b5c0DxflB6HJJeh6XvEXhg4XpUfEzcpv04rnw4
of0/qfw8hb+5XztNe+rRGTj19hHlQ7vOh7OqT+e0H+e1Hxe0HxeVP5d0Hj2q
eLksfx6Tv1ekx1XF+zXpeR0eULjeED+u/iVfzTX71wnO/naGU+9ugpOfpWHu
17rAuT/qCicfujE+epSFOR+6w3z/j/HZj55w9qM8zH70Untv1st51AdOva+A
c7/XV/72g6N3f+lVCUffAXBl4ToQ7l+4DlJ7lcYPhpMPQ+Ds/1A49WgYnPwd
Die+RqBH8mEknHyohnM/Pkr7MVr7MUb7USO9x6p9HPbkPBqveKmlPfd7E+DU
94nSYxKc+K2TnpOl9xS4X+E6Ve31Gt+g+acpH6bDuf+aASd/Z+Jf6tEs2lNv
Z0uPOcqHuTDf/4Oj/3ztxwLpvVDti2jPebsYTrw0Mn/q/RLF21LF+zLp1SQ9
l0vvFeKV6t8sXiX9Vyv/1sCpj2vhfD5ZB0f/9apHG2hPPWpRfdgIJx82MT77
sZl6E323wNF/q9q3MV/036583aF42ql42yU9dkv/PdJvr/TeB/ctXPervVXj
D6geHZT+h1QfD6t+HoFHFa5H0S/16Jj0aKM9+XBc+XBC+XBS9ekU46P3ae3X
Gcan/j0C5/NVu+LprPw9J/3PS68L0vOi+JL0f1Ttl8WPaX+vqP5dhXM/dk3n
8XXl9w04593jOg9Ktuca/TuFeR/Vmfbkw01h7idL4ejfRe1dGZ/61w1OvpbB
8ac7HH97wNGjJxy9yuG+hWsvcW+4onDto/YKcV84+9sPzv73h5OflXDq5wCY
9/9w6tEg9E09qoKTD4Ph7McQxmc/htLO+3/ao/dwtY+gPfk3Es55Wy1/RsHJ
/9HSe4z0rBGPhXsXruPE48W1Gj9B+zFR+z8JznlUB6ceTYaTD1PQI/sxlfbk
Q732owFOfkyDc15MZ3zun2YoX2aqfZb2fzacej9H8T5X8TdPesyXfgvg8sJ1
oXiReLHGN4qXaD+Wav+XKT6a4NwvLFc+rIBzf7QSvUYVrs2Kz1WqF6u1H2to
z36sld7rtF/rYb7/p3rTovzeKH83SZ/N0nML3KNw3SreJt4u3iHeqfl3af93
Kx/2wDmv9sI5z/YpH/YrH1oVnwe0HweVH4e0H4e1H0fUflT18JjipU3xdFz+
npD+J6XPKel3WnwGLitcH1F7u/is5j+nfDiv/Lyg/L2o+LoE8/5f+XBZ+fAY
nPp0hf7R/yrtyY9rtOf8uK72G1rvcelf8rVcE0+d4L6Fa2c4etwER69ScRc4
encVd1P/MnF3cQ84+98T5vyHcx70gvP5sTecetQHzv1HRZj60BdOPvSjf/Kh
P+3Zj0o48T6A/tF/IJz740FwztsqOPE0GE68DZH+Q6XPMOk7XDwCLi1cR6q9
WjxK84/W+mMUHzVw6udYOPE1Dk49Gi89auHoPwE9RxWuE+HkwyT6R/862qP3
ZLVPgVP/psLJ13rp36B4myb/p0ufGdJvpniW9J8tnqP+c8XztP58xccCOPVz
oeJrEcz7fzj3f41w6vMSeFThulT5sEz50KR8WK72FXDq30rla7PiaZX0Xy29
10ifteJ14vXSe4PaW8QbxZuk/2bpv0X1cyuc83gbnPNgu+rRDtWjncqHXdqP
3dqPPdJ7L5x82QfnfnO/8rVV/hyQvwelxyHpeVh8RHxUfEzcJj6u9U5o/08q
Pk4pf08rv8/oPHhEerSrHp1VPpzT+XCe9uh/QfXpovbnkurfo8rXy/LnMfl7
RfpcFV+DSwrX6+Ib4sfFJTs6zvcEcSc4+/FEOPHRGc55/CQ48XUTnPPgyXD0
L4VTn58C536lS5j71afSPqpw7Up79H4a7eFucOrf0+Hkaxkc/Z8hf7tLj2fC
0a+H+FninuJni8vFz9F6vWTPc6V/b+n/POnfR/o/H048Vkj/F0j/vtL/hdK/
n/R/kfTvL/1fLP0r5c9L5O8A6fFS6TVQ/DLxIPHLxVXiV2i9wbLnZtk7RPq/
UvoPlf63SP9hcM7jV8E5D4ZL/1dL/xHS/1bpPxLO+XMbnHpZLX9eI39HSY/X
Sq/R4teJx4hfL64Rv0HrjRXfDqc+joP7Fq53SP/xcO6H7lQ81sK5P7lL+k+A
o//d6J3zYKL0vwceVbhOYnzOn3sVL3XS/z75O1n63C+eIn5APFX8oLhe/JDW
b1A8vFH6T5P+b4Jzvk2X/m+W/jOk/1vgnMczVY/eKv1nKd7fpvyYLf3fLv3n
yJ93yP+50ued4nnid4nni98tXiB+j9ZfKH5Y9i6Cc//2XtXXxXDuR9+netAI
5370/ToPligfPqB6tFR6f1D7s0z170OKlyb582H5u1z6fAS+fNv/XVaIP6r+
K8UfEzeLPy5eJXs+oXxYDef+4ZPSfw1cVbh+SvG4VufBp3UerFM+fEb1aL30
/qz2Z4P2/3OKlxb583n5u1F6fEF6bxJ/UbxZ47+k9i1q/7J4q+z5iuzdpvr5
VeX3dp0HX1M92qF69HXlw07txzeUD7uk9ze1P7u1/99SvOyRP9+W/3ul13fE
+8TfFe8Xf0/cKv6+1j8g/X8gew9K/x9K/0PS/0fS/7D0/7H0PyL9fyL9j0r/
n0r/Y9L/Z9K/Tf79XP4flz6/EJ8Q/1J8Uvwr8Snxr7X+afFvpP8Z6f9b6f+I
9P+d9G/XefB76X9W+v9B+p+T/n+U/uel/59k7wXp/2f5e1H6/EV8SfxX8aPi
v4kvi/8ufkz2/EP2XpE//9T5dhXO/dC/VI+v6Tz4t86D63Duj/6j8+CG9P4v
zPN+OM/b/id7S77e0Z8nwPG3Exw9nijuLH6S+Cbxk8Wl4qeIu8iep8rernDu
H54G9y1cu8E5j58OJx7L4NyfPANOPeoOJx+eCfPvE+Dkw7Pg7E9POPn3bNlb
Lv+eI/97iZ8r7i1+nriP+PniCvELxH1l3wulfz/58yI49xf94XzefDGceKyE
kw8vgVOPBsDJh5fCyYeB0vtlcO5fB8HJv5fL3ir59wr5P1h8s3iI+JXioeJb
wg/tb/2/6zC1v0o8XPxq2TsCznlwK5zzbaT0v03xWC39XwOnHo2S/q+V/qOl
/+uk/xjp/3rpXyN/3iB/x4pvF48T3yEeL75T+teq/S7xBPHdsnei9L9H+k+C
cx7fK/3rVI/uUz2arHp0v+rRFNWjB7Q/U1X/HpS99fLnIfnbIH6jeJr4TeLp
4jdL/xlqf4t4pvitsneW/HkbnPNtts6Dtyse50j/d0j/udL/ndJ/nvR/l/Sf
L/3fLXsXyJ/3yN+F4ofFi8TvFS8Wv0/6N6r9/eIl4g/I3qXy54PSf5nOgw9J
jyadBx+Gc3+6XOfBR1SPVkjvj2p/Vqr+fUz2Nsu/j4tXiT8hXi3+pHiN+FPS
f63aPy1eJ/6M9F+v8/izqq8bVI8+Jz1aVI8+r/Ngo/LhC8qHTXDe53xR7ZtV
/74ke7fIvy+Lt4q/It4m/qp4u/T+mniH+n9dvFP8DfEu+fNNxddu6f8t6bFH
+fBt5cNe5cN3dD7vk97fVb7sV/37nuxtlT/fFx8Q/0B8UPxD8SHp/SPxYfGP
xUc030/ER5UPP5V/x1SPfqZ61KZ8+LnOh+M6H36h/Dih/fil8uWk1vuV7D0l
f34tPi3+jfQ5I/6t+BHx78Tt4t+Lz2r9P4jPyZ8/Sv/zqkd/kh4XlA9/lv4X
lQ9/kf6XpPdflS+Par2/yb7L8ufv4sfE/5A+V8T/FF8V/0t8Tfxv8XWt/x/x
Den/X/n3uPT/n/Qo2Zlr9H8CzPcB4ej/RDj50BmO3k8S3wRnvSfDsbcU5vO/
uEsYPZ4q7ip+mrib+OniMvEzxN1lzzPFPeTPs+Do3xOO/s+Gcx6US//nSP9e
cM7n52o/esPJh+eJ+2i958veCvnzAnFf6fFCcT/xi8T9xS8WV4pfIh4ge14q
Hih/Xib9B0n/l0uPKrhv4foKmO9jwqlHN2s/higfXikeqvVukb3D5M+rxMOl
x6vFI8S3ikeKbxNXi18jHiV7XiseLX9eJ/3HwLkfej2c87hG9eENyoexyofb
tR/jlA93iMdrvTtlb638uUv+TxDfLZ4ovkc8SXyvuE58n3iy7LtfPEX+PCD9
p0r/B6VHvfR/SPo3SP83Sv9p0vtN4ula782yd4b8eYv8nyl+q3iW+G3i2eK3
i+eI3yGeK/veKZ4nf94l/edL/3erHixQ/XmP9F8o/R+W/otUb94rXiz93yd7
G+Xv+8VLxB8QLxV/ULxM/CFxk/jD4uXS+yPiFeKPyr+V0v9j0qNZ8f9x6b9K
+n9C+q9WvH9SvEbrfUr2rpW/nxavE39GvF78WfEG8efELeLPizfK3i+IN4m/
KP03S/8vSY8t0v/LyoetOo+/ov3YpvP4q9J/u9b7muzdIX+/Lt4p/oZ4l/ib
4t3ib4n3iL8t3it7vyPeJ/6u9N8v/b8nPVql//cV/wek/w+k/0Hp/0Ppf0jr
/Uj2Hpa/PxYfEf9EfFT8U/Ex8c/EbeKfi4/L3l+IT4h/qfp/Uvr/Snqckv6/
Vvyflv6/kf5npP9vxY9ovd/J3nb5+3vxWfEfxOfEfxSfF/9JfEH8Z/FF2fsX
8SXxX6X/o9L/bzp/L0v/vyv+H5Pe/xBfkd7/VPxf1Xr/kr3X5O+/xdfF/xHf
EP9X/Lj4f+KSb3TkJ4g7iZ/4jY72dxY/CY7+N8H5/PVkOHqUwn0L16fA0b8L
HL2fCuf87QpH76fBuf/ppvWeLnvL5N8zxN3FzxT3ED9L3FP8bHG5+DniXuLn
yv7e4ufBqf994MT/86VHhfR/AZx601d6vxBOvPeT3i8S99d6L5a9lfLvJeIB
4peKB4pfJh4kfrm4SvwK8WDxzbJ/iPiViv+hiv9b4NSbYdL/VdJ/uPR/teJ9
hPS+Fc7zn5Fa7zbZWy3/XiMeJX6teLT4deIx4teLa8RvEI8V3y77x4nvkP7j
pf+d0qNW9eYu1ZsJive7pf9E6X+P9J+k9e6VvXXy7z7xZPH94iniB8RTxQ+K
68UPiRvEb5T908RvUv2ZLv3fLD1mSP+3SP+Z0v+t0n+W9H6beLbWe7vsnSP/
3iGeK36neJ74XeL54neLF4jfI14oflj2LxK/V/G/WPq/T3o0Sv/3S/8l0v8D
ivel0vuD4mVa70Oyt0n+fVi8XPwR8QrxR8UrxR8TN4s/Ll4l/oTsXy3+pPRf
I/0/JT3WSv9PS/910v8z0n89PLhw/ax4g86Xzyk/W+Tf58UbxV8QbxJ/UbxZ
/CXxFvGXxVvFX5He28Rflf7bpf/XpMcOnbdf13m7U/XmG9J/l/T+Jnxz4bpb
631L+u+R/d+Wv3vF3xHvE39XvF/8PXGr+PviA+IfyN6D4h9K/0Mwn/+lx2Hp
/2Ppf0T6/0T15aj0/qn4mPLrZ9K/Tfb/XP4eF/9CfEL8S/FJ8a/Ep8S/Fp8W
/0b2nhH/Vvo/Iv1/J/3bpf/vVW/OSv8/SP9z0vuP4vPS/0/S/4Ls/7P8vSj+
i/iS+K/iR8V/E18W/138mPgfsveK+J/S/6r0/5f0vyb9/y39r0v//6je3IDz
/ZP/ih/X/P+T/iW7Otr/hHDx87/4ieLO4ieJbxI/WVwqfoq4i/ipsrcrHH+e
Bufzbjc4+j8dTjyWwTlvnwFH/+5w9H8mHP17wNH7WeKecPR/Npz4KJc/zxH3
kv/PFfcWP0/cR/x8cYX4BeK+sueF4n7S/0XSv7/0f7H0r5T+L5H+A+Ccty+V
/gOl98vgfP9tkOZ/ufSvkj+vEA+WHjeLh4hfKR4qvkU8TPwqrT9c/GrxCOl/
q/QfCef5y22Kx2o45+1rFO+j4NT718Kp76Ol9+vgfB9xjOZ/veyrkT9vEI8V
3y4eJ75Deo4X3ymu1fi7xBPEd4snSv975N8k6X+v4r9O8Xmf9J8s/e+X/lOk
9wNwvh89Vfn0oOyrlz8PiRvEbxRPE79J+k4Xv1n9Z4jfIp4pfqt4lvR/m/yb
Lf3frvifI/3fIf3nSv93qt7Mk/7vkv7zpf+7Zd8C2f8e+bdQ/LB4kfR9r3ix
+H3iRs33fvES8Qdk71LV0w/Kv2XS/0PSv0n14cOq98ul/0ek/wrp/1Hpv1L7
+TG4R+HaLH8+Ln9XiT8hXi09PyleI/6UeK3405p/nfgz4vXS/7PSf4P0/5z0
b5H+n5f+G6X/F6T/Jun/Rem/Wfp/Sfpvkf5fln9bxV8Rb5N+XxVvF39NvEP8
dc2/U/wN2btL+n9T/u2W/t+S/ntUH74t/ffCud/5jvTfJ72/K96v+b4n+1rl
z/fl7wHxD8QHpd8PxYfEPxIfFv9Y8x8R/0T2HpX+P5V/x+A8b/uZ6n2b9P+5
9Dou/X8B537nhPT+JZx/D3NS+fMr2XdK/vxa/p4W/0Z8Rvr9VvyI+Hfids33
e/FZ8R9k7znp/0f5d176/0n6X5D+f5ZeF+Hc7/xF+l+S3n+F8++/HtX+/Q3O
55HL8ufv8vcx8T/EV6TnP8VXxf8SX9N8/xZfF/9H9t6Q/v+V/o9L//9J/5Jv
5pr6/AQ4enWCo/8T4dT7znD0fhI8vHC9SeOfDEf/Ujj+PAWOv13ETw2jX1fx
08TdxE8Xl2n+Z4i7i58p7gFH/2fBOX97wtH/2XD0L5f+z5H+veDU++fCqTe9
pf/z4Px71D4a/3zpXyH9XyD/+opfKP36iV8k7i9+sbhS/BKtN0D8UvFA6f8y
6T9I+r8czv1OlfR/hfQfLP1ulv5DpP8rpf9Qjb9F+g+T/q+Sf8PFr5ZeI8S3
ikeKbxNXi1+j9UaJXyseLf1fJ/3HSP/XS/8a6f8G6T9W+t0u/cdJ/zuk/3g4
58WdML8/If3vkn8TxHdLr4nie8STxPeK68T3ab3J4vvFU6T/A3Dq/1Tp/6D0
r4dzv/OQ6nWD9HsjnPN2mur9m+D8/YfpOi/eLP1nSP+3yL+Z4rdKr1nit4ln
i98uniN+h9abK36neJ70f5f0ny/93y39F0j/90j/hdL/Yem/SPq/V/ovlv7v
k/6N0v/98m+J+APipdLvg+Jl4g9pfJP4w+Ll4o+IV0j/j0r/ldL/Yzp/m6X/
x6X/Kun/Cem/Wvp/UvVnjfT/lPRfK/0/Lf/WiT8jPdeLPyveIP6cuEX8efFG
rf8F8Sbp/0XV/83S/0vSf4vq/5dV/7eq/n9Fem5T/f+q9mO79u9r0n+H9P+6
/Nsp/ob02SX+pni3+Fuab4/42+K94u/I3n3S/7uK//3S/3vSv1X6f1/6H5D+
P5D+B5UPP5T+h9T/R7LnsPz5sfw9Iv6J+Kj4p+Jj4p+J28Q/Fx8X/0J6n1C8
/xLO/d1JuG/h+ivV/1OqP79W/Tmt+P0NnPufM4r/36r+PCL9fyf92+XP77Uf
Z+X/H8TnFN9/VPt58Z/EF8R/Fl+UPX+RvZek/1+l/6PS/2/S/7L0/7v0f0z6
/0P6X1G8/1Pn71X1/5fsuSZ//i1/r0uP/4hviP8rflz8P3HJ7o78BHEnOPY8
EY69neHUmyfBqa83wXnf9WQ4z3tK4TzveQqcetMFjn5PhRPvXeHE+9PgWwvX
bnDq09NlTxmc+HmG/O0uPZ4p7iF+lrin+NnicvFzxL1kz3Olf2/p/zzp3wfO
8+bnw6n3FXDq/QvgxHtf6fdCOPHeT3q/CM7fn+yv/i+W/pXS/yXyd4D0eKl4
oPhl4kHil4urxK8QD5Y9N0v/IXDqzSvh1Neh0v8WOPVmGJx68yo49Xq49H+1
4n0EnL8/eSucvwc6Ek49uk32VEv/18jfUdLjteLR4teJx4hfL64Rv0E8Vvbc
LnvHSf874L6F63j5e6f0r5X+d0n/Cao3d0vPidL/njB/D3eS8uNe2VMnf+6T
v5Olx/3iKeIHxFPFD4rrxQ9p/QbF+xtl7zTVmzcpv6fDOW/frHo/Q/X+Lar3
M1U/3io9Z6nevA3O30Ofrf15u+yZo/r5Dvk7V/q8UzxP/C7xfPG7xQvE75H+
C2XPw7J3kerNexVfi3Xevk/1vlH1/v2qN0tUbz4gPZcq3j8I8/f/VY8+JHua
lL8flr/LpcdHpNcK8UfFK8UfEzeLP671VsmeT0j/1ao3n4T5+/86bz+lerNW
9ebTqjfrVG8+Iz3XK94/i/6jCtcNav+c6l+L8vfz8nej9PiC9Nok/qJ4s/hL
4i3iL2u9rbLnK4qXbdL/q8rv7fL3a4r3Hao3X1e871S8f0Pxvov2UYXrN2nP
75HsVvu3VP/2KH+/rfq6V3p8R3rtE39XvF/8PXGr5v+++IDs+YHi5aDq/Q+V
34fk748U74dVb36seD+i+v4TxfNRxftPac/vsR1T+89U/9oUPz+Xv8elxy/E
J6TnL8Unxb/S+FPiX4tPy57fKF7OqN7/VvXmEdWb3yne23W+/l7xflbx/gfF
8znF+x9pz+8Rntd+/AnOeX9B+v9Z/l6UHn+RnpfEfxU/Kv6b5rss/rvqzWOq
9/+Q/ldU7/+penNV/v5L9f2a4v3fivfrOk//I71vwNH3v3B+j/Nx7cf/lH8l
38qVv/8Hx99OcPR4Ihy9OsPR90nim8RP1vhS8VO0XhfZ81S4b+HaFU69fxqc
/O4Gx9+nw6nvZXDi/Rlw9O4epn48E47ePegfvZ8F1xSuPemf9mfTnnpXDid/
nyN/e0mP50qv3tL3eeI+4ueLKzTfC8R9Zc8LpX8/6f8i6d8fTr15MZx4r4RT
X14CjypcB6Bf4v2lcOJ5IP3z+78vg/N72IO0Hy+Hk39VcPL3FfJ3sPS/WfoM
kZ6vFA8V3yIepvlepfWGy55Xw6k/I6T/rdJ/pPS/TfpXS//XKN5H0Z54f63i
fTT9o//r4Og/RvvxeuVfjex/A5z7u7HS43bpNU58h/QdL75T/WvFd2m9CbLn
btXLiXDud+6Bc95OUrzdq3pTp3pzH5x4nwwn3u9XvE9B78T3A7TfXrhOhccW
rg/C+fxcL/sfgnN/1wDnPH6j9Jkm/d4kni5+s3iG5nuL1pspe96qejkLznn7
NtX72Yq3t6NX4n2O4v0dqu9zVb/fKb3nSd93weMK1/n0z368m/ac7wvg3B+/
R/V1ofL/YemzSPq9V7xY/D5xo+Z7v9ZbIns+oHxdqnj/oOJ9meL9Q6rvTaov
H1Z9Wa76/RHpvUL6fhS+o3BdSf/wx2hPvjXL/o8rv1cp/j4hfVZLv09K3zXi
T6n/Ws33adWbdbLnM4r39XA+z35W8b5B8f45nactOk8/r3q+UfX8C4rvTdL7
i/Cdhetm+oe/pPq2RfZ/WefxVp13X5E+26TfV6XvdvHX1H+H5vu69nun7PmG
8nWXztdvqr7uVrx/S/V8j+r5t3Ve7lU9/47ieZ/0/S761xau+8PV4e+pvrXK
/u8rvw9I/x9Ir4PS84fS+5DafyQ+rPl+rPWOyJ6fwLm/OQrnfvqnqjfHVN9/
pvrSpvryc9WX44r3X8DjC9cTcPT9JXxX4XpS/Cvl2ynZ/2udx6dVf3+j+Dwj
/X4rfR8R/0792zXf77XeWdnzB9XLc6r3f9T5dl75/iedpxd0nv5Z8X5R8f4X
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
hes56ftH2t9YuJ5nvvCfyIfMd0Hx8WfGx7+L2Jv6+xedB5fg5MNfdX4+qvj+
m9ova/zflW+PoXf0/wfzpd5coX/i/Z/y56ri/V86/64xPnr/m/XC11XP/4Oe
DYXrDeI//F/Wi96PMz78P9Wrkr25Jj6eECa+OoW5H3pimPjsDEe/JzFf4vkm
2qP3k9VeCuf+6in0T751gZOPT8We1JuutEf/p2F/9O/G/Hz+hxPvZcwXvZ8R
Jj6707+hcH0m84d7hInvZ9Ee7sl80wrXZ2u+cvpH/+fgT+KrF/1zHj8XTnz2
hlOPnqf96ANH7+fTP+0VtGf8C2jPfvdFn8TDC2lPvekHp968iP7xpz/zR/8X
w9G/Eo7+/09X5h3+5fT/8be9adgzfI3MsrKVZFPZEfKhpZ2irO7IFqWUaCOb
zKRSKSujzJARsldCkfX7Xdf7+XBd9+Ov9/W4zn3OeZ3HeZ3Xue/Ppz4+438n
xqup/u7MfPG7S5j83pX2+N6N8cK7wxmvAf5zPhsST/JrD8bL+d8TTj3aS+dh
b+3HPsrvRjwf3pf2vF/tRzzxvz/tyYcDaI//A2lPvh8EZz0H4y/15hDyMb4b
h3mfacL48X8o8dZUf5sq3w+jf7iZfB/O/oSP0Pk5Ek5+HMV8Wd/RrCfn/xjV
o2N1Ho6Dsx/HK7+bq70F7enfEs55O4H44v9E1ZuT4Pg/Wfl0Chz/p+Invk9j
PfHdiv2pqf6ejt/wGcr31qovZ8r3Way3bfX3bOZL/zaK7xytr4b+Of/nqh6d
p/PQVvvRTvndnvHDHdS/I+05b+frPHaCU286w6k3XZRPXRmf7384vrsr33vg
r6b621P5foHqSy/57s1+xPeF9A9fpP3rw/yph321vot1H18C8/2ven0ZnPvz
cuV3P3Gh89Rf5+0K2nMer1S9GUB78v0q1Zurdb9eo3y/VvX9OvzFz/WqLzcQ
f3zfqPweSHv4JnyFb9Z5GaTzOFjn+Rbdx0OUn0NVr2+lPfk8DM5+DBffpvM0
QuftdvzkPN5Be/J9JJx8HwUnn0aTb1nfGDj+xyrfxxFffI9n/vi6U77vku+7
aW9X/Z1A//A9Oi/36jzep/N8v87/AzDf/6rXDymfH9b5eEQ8UefpUZ23x3g+
5/Fx2hPfE7Qn359UvXmKfMv6JtFeU/19WvV9svL9GfmaonoyVb6n4SP8LPGG
p+Mn/WfwfOKbCec8P6f7eBb942c2nPPwPByfL+h8vCh+SefpZZ23OTwf/68o
vlfh+H9N5/l1OOubC9dUf+fpPnxD+f6m8v0t9iP8tvL7Hfl+l/1vX/2dr/7v
KR/eZ7yc5w90/hfA8fOh6vVHyuePdT4+ES9kvPT/VOftM9XDzxXfItpTb75g
/vj/UvfrV3DW+7Xuw2+U798q379Tvn/P8+EfaI/vH+kf/kn9Fysfftb9tUTn
/xfi5/sfjr/flM9LdT6WiX9Xvf9D9+1y1cM/Fd9ful//Vr7/o/X9C8d3ZUr6
x/cKYd5fVgzja6Uwvlemf/yuEi7Cq4ZnhFejPf1XD1P/1mC85NOazJ/8W4vx
+P5nvPhbh/7Zj3V5Pr7XE9dS/9rMl/NWh/FSb+rSnvjWx0f8b8D48b8hnPVt
BMf/xvSP/02IJ/43DbeJr83wFd6c/vG7Be3hLYm/Q/V3K+JPez3GTzxbs/9Z
zzY8z///iY/vfzjnYTuej8/tac9+7MD6wzuqf33657ztRPypNzsrvl3g+N6V
9dRUf3ejf9a3u/K9gfK9ofJ9D+IN76l834vn43dv+d6H/Qk3Ir7035f9Snz7
4SPr25/54/8Axk9+Hsj8OQ8HKZ8P5vnwIeLGjB//Tegf/4fC8d9U/g9jvPhv
Jv+HK7+OkP8j5f8o+T9a/o+R/2OV78cxXnwfT/zh5qpPLXg+8bRkvKzvBJ7P
+T9R+XmS6tHJxBefp/B8+FTxaerfiv6pd6fDqfdnqN60huP/TNXTs1Rvzla9
acP+xP85zBffNaoX58rfefLdlvHC7Zg/3F771YHxEk9H+mc95+v8d2I8vv9V
j7roPHRVfncTd1f/HsyX89ZT99EFqje94Jrqb2/VmwuVXxcp3/sQT7iv7teL
le+X6D69VL4vk+/L8dGx+ttP9amgPfP31/11hfLvSnwlPweoHl1Fe/xfTXv4
GrVfq/7X6b69XvXmBvonvhvhmurvQOX7Tcr3m3W/DlK+D2a++L1FvofI31Dy
OXwr/eN7GPOFh2t/btP5G6F8up3n4/8O5edI2uNvFPuZfB4t32PUPlb9x8Hx
P1730Z2sN/7vUr25W/k+gfbwPXDWey/jx/99uh/v1/36gOr5g/L9EP3DDzNf
+BGdh4k6f4/q/npM5/9x5o//J3QfPMnz8fuUfE9SvXma59N/su7bZ4gv/qco
P6bCyfdpul+fVb2Zrvt1hurNTPl/TvV9lvJ3NvPF5/PK9xeY7/zq74t6/iXF
8zLjZ31zaOf//6oPr+o+eA2O39fley7jJd/nqf8btOe8vQkn399i/sT3tur9
O/iL/3dpj//5+Mx632P+8Pu6Xz+Q/wXy/6F8fsR+hj+W/090PhYqnk95Puv5
jPHj/3PVh0W05z74gvjj90vV969Ub76G0/8b1btv6R//37G+murv96r3P8Dx
/6Pq/U+sn+9/6kP4Z8aP/yWq97+o3v8qn78xf3gp/eN/mfbnd9W/Pxgv61mu
8/8nnPrwl+rR33Dy+R/Vl3+V75Wp4fRfIcx5WzFMvV8pTL1ZOUy9WQWO71UZ
L+tbjfH4/g9Tb9Zg/Phdk/jCa/F8/K3NeOF1mD++1w2PDa+n9lrEl/lrw1lP
HZ7P+usST/JzfdpzHjYI8360Ie3hjegf3hhO/01YX/xvSv+a6u9mjB//m7O+
xLsF7fG/Jf3jeyuttx79w1vzfHxvg9/wtowf3/9jvPjcjvjD29M/vAP9wztq
/+vDWc9O+In/neHcx7sQb87DroyffN6N+MK7K98bwOnfkOcz3x6011R/91R+
7AXH997K933oH24k3/sq3/eT7/3l+wD5PlA+D5Lvg/HZqfp7CPOFGzNe5mui
9RzK+DXV36Yw3/9wzkMz+sfn4bQnv4/Qfh0JZz+Pwk/8H038yfdjGC/+j+X5
xHsc7fF9POPHd3P5bkH/cEvVlxPk+0T5Pon2+DxZvk9hP8KnMl/4NM3fSus5
XfX2DDh+Wus8nMl6sx9nKb/P1n614fns5zmqNzXK93OZP/GdB8d3W9WXdswf
bq/1dmC++O7I8+Hz5buT8rsz7fHZRb670t65+tuN+cLdtd89VC97Ei///1c9
6qV63Vv5fKHui4uIJ+19aE//vsRfU/29WPl+Cc/H/6XEl3gv4/n4vlz53o/9
yXoL+of76368Qr6vVH4PkO+raI/fq2kPX0P84Wu139epXl5P/Fn/DXBN9fdG
+Ruo83CTfN9M/zw/SOdpMOvPft9C/Jl/iOr7UNrDt6q+D9N9Olz5fhv9wyOU
77ervtyhfB9J/PE5Svk+mv5dqr9jxGPpn/nGqV6OZz38/1/34V3sd/zdrfth
gurLPdqve3We7sNH/N/P+Mn3B1TfH6Q98T6kfH9Y9+kjyreJ9M/6H5Xvx1Sv
H6c9fp+gPfyk/D5Fe3gS8YefJp7MP5l4s55ntP4pug+nMl9N9Xea8vlZxovv
6exH2mcwXvrPVL15Tvk+i/ET32za4/d51hN+gfHi+0Xl90uMF78v0z88R/Xk
FdWTV2mPz9doD79Oe9fq71zWH56n/X1D8b+p++AtOH7eZv18/6s+vav8nq/2
91Rv3td+f6B6uED36Ye6Tz/Sffaxzvcnyu+F8v2p6sdnyufPlb+LGD8+v6A9
/CX7Ef5K/LX29xvly7fKt++IJ36+J36+/3V//sh44Z/Uvpjxsp8/M198L9F9
+gvM9798/8Z48b1U53uZ8u13rf8P+V6u+vEn7fH3F+3hv2nvVv39h/HD/xJ/
uDKtPN8KYfJlxTD5tlKY99OVw3yvrRLm+3TVMPm9mtpXZ7z0X4P54n9N4uH7
n3j5/g//9/3P+Hz/M398rwfHdy36h2sTT3zUYf74rUt7eH3Gi88NmD+8IfF2
r/5uFK4V3ljzbUI8iX9Txsv6N4P5/z/xZT+2IJ743JL5w1tpv+oxXvpvDWe/
t2E/+P6H+f4nfr7/5Xt75o/fHeR7R62/PvHF7048H95ZvnehPbwrPuJ3t3CL
8O7iBoyX8Ruy/sS/B+NlvXvC/P+f+fn+Z73hffAV3420X/syf/ZzP5jvf+Lh
+x8/fP/L90HEEz4Yv/F9COPFd2Otv4l8H8p88dtUvg+jf3w24/nw4cwfPkJ8
JD4y3lH0T7xH4zPrPQaOn2NVL47Tfhyv/G5O/zzfAs5+ttR+nyDfJ8r3Scrv
k+X7FPrH96nyfRr9s/5W9A+frnpxhvy2ls8z8RE+K7w4fDbz9cg4PJ/5ztF9
UKN6eq7q0XmsJ/7aEl/8tpPv9qpfHVRvOrIevv9VDzvRHv+dlS9dFH9X+oe7
qX53V373UL3uqfy+gHjDvcITw73D88IXyvdF4j6ary/zJd6L2Z+s/xLWE/+X
sp74uwyO38tVX/rpvBSMl/79dZ9ewXmI7ytVXwYo369S/Fezvvi+RvXlWuX7
darf16te36B8v1G+Byrfb2K8+L5ZPEjzDVZ9vEXrH6L6MFT+boXjd5jyfbjq
zW2Ml/0cAfP9T37y/U97fI/UfTpK8Y/WfTpG9Xaszv845fv4cPfwnaovd8n3
3dSr+J0QbhC+R3yv5rtP5/V+3ccP6D58UPflQ6pHD2s/HsFH2ieqnj2qeveY
6s3jqjdP4DPxPokfvv9Vbyap3jyt+j5Z9f0Z5fsU1hOeqnyexvrDzzJeeLp4
hurZTOXLc7rfZuk+ns16+f6H4/cF+X5R5+Ul1bOXVe/naP5XlO+v4ofvf92v
r+t+nat8n6f68oZ8vynfb8n32/QPv8N5Cb8bHhSeL35P98f7qo8fsD9Z7wLi
i58PWS///1c9+Vj78YnOy0L2J/0/Vb35TPN/rvq+SPX9C+bj+5/+8f2V6u3X
yr9vVM+/1X35nXx/T//wD/gJ/4jf8E/ixdrfn1lf4l3C/FnvL7oPfmW9fP8z
f/wuxWd4mfL9d9X7P1Tfl6u+/Kn6+Jd8/y3f/8j3v/JdeTbjhVcIU59XDFMv
Vgrjb2X6h1cJV3pWf1cN1wuvJl49zH6uEaYerhmmnq7FfPG/dph6vQ7xZj/W
JZ7wejwfrsX46V8bjv86zJf564b/+/5nPr7/Ff+GYe7PjRif7398ZP2b8Hx4
U/neTH43l88two3DWxJfeCtxPdaT8bemPfFtA2e928Lx8z/iyX5sh6/43V6+
d+B5/v9PvOlfH47vnWC+/+nP9z8++f4nf/n+Dw/i+1/53oDxs/6GxBveQ/73
lP+9mC+8N/kc3of9DDcS76vx91O+7E88Wf8BcPwfyP7z/S//B7O/4UN4Pv4b
s5/p30T+D9X+N6U/3//MF25Gf77/5f8I+T9S/o+S/6PZ3/Ax8n+s/B8n/8fL
d3PGD7fQ+C1pT3wn0J71n6j6cJL8ncx64vcU7cepPJ/209if9G9Fe/yfrv0/
g/HjuzU++P7X+T2L/OL7n+f5/ld9P0f1oEb1/Vz5Pk/1pq18t2P/w+3FHTR+
R9XH85VvnZSfnXUfdFE976r7oRvPh7szfvazB37iu6fqzQWqN72U773xx/e/
fF+kfO8j333l42LV90vk91Ll82Xsd/jy8LxwP3Gh/eyveK/Q+b5SfgYQP9//
xJP9uFr16Rq1X6v+1ynfr4cz/w2Mx/e/6uVA1sf3v+7Xm3W/DuL58GDVl1uU
30Pkeyjxh2+V32HhxeHhjH9B9fc23ccjlB+36z67Q35G6jyMUj6PJl/jewzz
p32s+o9Tvo9XfblT9eUunde75XuCfN+jentvuFbWf5/q9/3y/YD8Pii/DzFe
/D6Mv/AjrDc8Ufv3qO6fx5Rfj8vPE6yH73/dz09pPyap/Wn1n6x8f0b1ZYrq
y1TWH56GP77/VV+m8zzf/8rvmaovz6mezJLv2crn5+X7BeIJv0j+hF9i/Rnv
ZeZLfHN0f70iP68Sf87Da8TD//9VX+aqfZ76v6F696b2/y3l+9vK93eUP++q
vsxXvr+n8/++8vED4gkvYL74+1D5/BHxhj9mvPAn+Awv1HifKr7PdB98rvq7
SOfhC+Xzl/gIf6X2r9X/G/KF73/WH/6O/OL7P8zfU35Qfv+o++0n1ZPFqic/
q34sUf7+wnzhX+XzN+INL2V9vaq/y/AX/l3j/aH4liuf/uT5+PhL+fo3fpPP
/5Bf4X/VXpmeX77/w9yfK4apJyuFqScrh/G9Cs/z/c/zfP+HyefVw9SLNcLk
75r0D69F//DaxB+f64Qbh9cNtwmvx/jhWsSf8Worvjr4yPrq0h4/6zNfeAPm
4///xBfeSO0b4yv9N8EH3//h/77/GY/vf/neguf5/uf5rG8r4g3XCxfhrcMz
wtvIz7bEF3//Y/7wdowX3p79C+9AfOEdNV595cNOYd5/dyb++NiF8eNv1zB/
f9mN9cT37ozH9z/xhBuGqSd7MF7m31O+95LvveV7H54PN2L88L7kV3g/5ouP
/ZXPByh/D2S88EGMFz6Y/QsfQny9M676N1F8h7KfWV9Tnf/DiDfcjP58/yu/
j1D7kewH3/+qJ0ez3sx/DPvJ9798Hyffx6t+NFf9aMH8WX9L1YsT5OdE+T1J
fk8mf+P3FOIJn8r44dPUv5Xq2emqR2fo/LfGT3ydyXh8/yu/z1b9aqP+55Bv
Gb9G+X2ufJ+netJW+dNOvtvLdwf57ijf58t3J/It/jrLdxf57Ur+hrsxfrg7
8YR7qB71pD3xXyA/vXQeeqt+X4gvvv+V731U3/vqvF3MfvL9L9+Xqn5fpnpy
uXz3k+9C9bm/fF+henEl84cHyPdVjBe+mvMavobxw9eSf+HrdH9cT3vWcwP7
Fx83ql4MpH/4Js4f3//K90Gq74OJj+9/+R6i/B6q/L5VvoepXg/HR/g2+R0h
v7fLzx3kS3ikfI5ivAurv6OJJzyG/AyPVf9xqkfjtb47df7vYv/j627txwTW
y/c/4/H9r/p+n3zfz3rDD6g+Pqj78SHVj4eZL/yI6sVE+X1Ufh+jf/hx8iX+
nmD+8JOMF36KeMKTOB/hp9V/ss7TM1rfFJ2HqcrXaeR7+Fn2Pzxd7TN0v8yU
7+dYb+afpfoxm+fDzyt/XlA+v6j6+5Lqw8vyO0d+XpHfV+X3NXyEX2d94bnE
F56n/XhD+/+m6uNbxBs/bxNv+B2ej893ld/z1f4e+Zj+7yu/P5DvBfL9oXx/
pPz+WPffJ/K9kP7hT1UfPmP+8OfyvYjxwl/I75f4uaj6+xX5GP5a+/WNztu3
uo++Y/z4+p58Dv+gfP4RX3z/q32xztPPuv+XaP9/ke9fld+/yfdS1ddlyu/f
iT/8h/wul98/5fcv+fyb8cL/sL7wv+LKjFL/Amb/V6C9Gn8B42fFcO7DAuZ9
aaVwfBcw52XlcOpNAXP/r0L/Khcw+b1qOPW7gDm/q4VzHxYwvlcn/rTD5OMa
9I8fuEH8rcl4aYcHpX2t8Ni0iytrh9ukHaa+rUN71gfzPrEu8cYfzN9X1yPe
tMOcl1r4TTtMfamt/a9d9l2pU/ZdwNSTuuHU76Ju2Xdl/bLvAqZebCC/cJH2
DZk/7fDCtG9EPGkXVzZWf5jztgmc9cHUo03L56GAuR820/mAuV83Z33pv3nZ
d2UL+md+mPq4Zfm8FjD5s1V5PcVW8ltPfmHyd2v6p31r+duG8fpU2+HGVa5s
y/hpF1f+p/4w9Ww7OPHDnP/tiTf+YN5XdlB+w9yvO6o/TH7XZ7/jv37Zd2Wn
su8Cnpj2nVU/di77ruxS9l3A89K+K/3jB24Qf7tx3tMOF2nfnfHTLq400P7A
3A8NGT/rayg/e5TPQwHz98A92b+0w7zP7qX6DlO/92Y/M//eZd+VfZTfMPdj
I+V3o7Lvyr7lelHAycfKfuV8LuDuad+fep52eEbaD8BP2uGFaT9Q/eGct8pB
5XwqYN7fDibe5CfM988h7F/8wtyvjdUfpr40Kd+XRZNyPJVDy74LmPuxaTmf
iqZa32HK78PKvivNyr6LZmVflcPLvgt4cdqPYPy+1XZx5UjtD8z9cRSc9cHc
b0cTb/zB3J/HqL7AvE8eq/4w3+/Hqb7AvJ8cX67nBUx9ac58aW+u9bUo15Oi
Rdl3paXqR8uy78oJZd8FXC9+TyxzIa6cpP5w8qFysuonzN8zTinXowLme/9U
4o1/mPv7NPWHqe+t8Bf/rcrxVE5n/xIfzPvJGbo/YepLa9Xf1mXflTPJp7TD
1I+zGC9+4cbxe3aZC7hF2ttof2Dul3O0Ppj35xr8xB/M+8u57G/8w/z99jz1
h/nebKv6DvN+0E71Bc77XKU986cdpr50KN+XBUx+d1R+diz7qpxf9lnARdo7
sZ9pF1c6s960dy7HU+lSvq8KmL9XdC3XiwLmfu5GfPHbTe3d1b972XelR9l3
AZPfPZXfMOf3AuU3TP3uJb+95Le3/PaW3wvZ77TDC9N+EeOnXVzpQ/xphzlf
fZU/MOf/Yt2PMPfzJexf/MO831xKPqb/pRr/MuU3zPvh5eV6UsB5H6z0K/su
+pV9VwrOe9YPd4+f/srf/mVflSvKvgu41sXV3yvZzyoXcIO0D2C9aR+g/b9K
9xOcelS5mvjiD+b+vAZf8Q9zf19LPqU/zPvLdTp/MN8/15frSQFzfm9Q/YZ5
/7hR9Rkmvweyf2kfKP83yf9N8n+z/N8s/4Pkf5D8D9b6Bsv/LfJ/i/wPIb74
HyL/Q+V/qMa/lfXHP0x9Gab4hsn/cPkfLv+3yT9M/o9Q/o+Q/9vl/3b5v0P+
xZWR8j9S/kcp/0fJz2j5Hy3/Y5T/Y+R/rPzD5P84+R8n/+Plf7z83yn/d8r/
XarvMPl/t/Ifnpf2CarvE+T3nnK+F3DjtN9b3q8C5v3pPt1fcP5eV7mf9cUf
zPvpA2XfBczffx9U/wc1/kPlel/A9eL3YfI18cHcr4+U77MCTr2vTCznewHn
Pq08WvZdwMnXymPKb7hF2h9nPWmHu6f9ifJ+FDDvp09qfTDvH09xHuMP5v9F
k8q+i0nan6flH+b7aTLjx/9k+X+mfN8WMO/vU/CXdjjv65Wp9I9fmPfDaeX9
KGDeb55V/YCp79PL+1FML+9HZYbOxwz5nyn/M+X/OfmH+X6aVa5HxSz5ny3/
s+X/efl/Xv5fkH+Y/H9R+Q9TX19S/sOpN5WXy/W+gHl/nKP6Mafsu/KK/MPk
/6vKfzj5UHlN/l+T/9fJr/iDyf+58j9X/uex3rTD3C9vsD/xD/P9+qbqP0z9
fwt/aYep/2+r/sPU/3dU/2Hq/7uq/zD1f77ye7725z3VL5j6/77qP8zfRz9Q
/sLk/wLV/wXl/ah8qPsb5v79SPcvzPvnxzyf+GD+fvOJ7l+Y9/+F5fUWMO8/
n5brUQHz/vNZuR4VMO8/n8s/zP27SOdnkfx/If8w9+OXyl+Y/P6K+OL/q/J+
VL4m39If5u8L37D++If5+9m35XpUwHx/fVe+DwqY78vvy/dxAXP+fyifhwLm
fv5R9zPM/fyT/MKcj8U6PzD18Wedb5j6vET+l8j/L8p/mPz/Vf5/lf/f5P83
+V8q/0vlf1n5PiiWyf/v8g+T/38o/2Hyf7nyf3nZd+VP1ReY+/kv3d8w+f+3
8h8m//9R/YGpP/+q/ov//4Kv/uIfxv8KYfzD+F+R5xMfjP+V6J92GP8rh/EP
k/+rEF/aYfJ/1TD5D5P/qxFf/ML4X738fAHjf40w/mH8r0k88Qfjf60w+Q/j
f+0wf9+H+f/sOvK/jvyvy3yJD6b+r0d8aYep/7XK6y1qlX1Xaoe5f2uXfVfq
MF7a65R9V+qWfRcw9X991pt2mPfPDcr5VMD//f+feOIP5u/TGzF+2sWVjZX/
MPfvJqw//mG+fzdlPYkP5v1nszDvP/D/v//8H7Bj/Hg=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.},
  ImageSize->{432., Automatic},
  Method->{},
  PlotRange->{{0, 8759.}, {-514.5, 454.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{175.18, 175.18}, {19.37, 19.37}}]], "Output",
 CellChangeTimes->{3.6046730568521285`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.604673075534197*^9, 3.6046730949713087`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"MaxValue", "::", "argbu"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MaxValue\\)\[NoBreak] called with 1 \
argument; between \[NoBreak]\\!\\(2\\)\[NoBreak] and \[NoBreak]\\!\\(4\\)\
\[NoBreak] arguments are expected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/argbu\\\", \
ButtonNote -> \\\"MaxValue::argbu\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.604673088157919*^9}],

Cell[BoxData["454"], "Output",
 CellChangeTimes->{3.6046731206877794`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", 
  RowBox[{"wData", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6046731282712135`*^9, 3.604673142459025*^9}}],

Cell[BoxData[
 RowBox[{"-", "7777"}]], "Output",
 CellChangeTimes->{{3.6046731379307656`*^9, 3.6046731430170565`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"wData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "10"}], "]"}], "]"}], "/", "10"}], ";"}]], "Input",
 CellChangeTimes->{{3.6046732984609475`*^9, 3.604673330967807*^9}, {
  3.6046746798859606`*^9, 3.604674684087201*^9}, {3.604674890966034*^9, 
  3.6046748938802004`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6046733347550235`*^9, 3.6046733445105815`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1:eJxcnX98l2UV/hcREREtI0MjW0a0jGwh0SLCiaQLiSYiISJORJyIOBFx4sQB
AwYOGDBgjAEfxhhjjDHGGIPIlpEtI1tGNo1sGRkZ0VKyZWTfH5zL1+t69w+v
47nvc59znXOucz/P84E+Pf3BCff0SEpK+uqVSUn/78+L/+u6tnzz//3fS2Mz
4j/EnzfFn70zrvl//zsofXLGz0/83/8VS9//onxC8oCMmf/vf9XjQh54cf+b
0qdc/LNA8pXxp9YPgv3BF+29pvNTL9q7Rvqr4O8Q7L8a+rSM/x/vZp335Yvy
bdIPhT/XxJ/fjj+HXfRnsOSvXPyzVeuHY/1Xw77k9Iv+P6zzvpbh+I+A/PWL
8mVaPzLOk/yNi39m6PxRgZfkawMvyRkRf+wvyIg/pb8u/Au54DrgPTr+u/aP
jvqQ/vqL58/U/uuR/zFhL/AoGAP/vhn2tF+y8Lsh4tf+G9xe0o2wf2PUp/SZ
ga/8zwz85N+3on4C/4KQ+0o/FvgpT/L/pohX/t/kePzfdf/f3jjtH4f94afy
WfDtd+1c1I/39QXjoz60/zsRr/TfgT4r4tE5WVHPWp/lfrWGnCH8bnY8M25G
vDf7+a03exxJE+K/RzwZE2K98A59UsitEwJv4XxL+Kv9t7i9glsifzr/Fo8v
aWL8qf0TsX+i92frRPDfra7PuDX+u+K/1fmv9VacP8n7M2NS5EP7Jzk/tYZ8
mfD7buwT/t9Fv303+Eb7pdf+yV7/GZNjnfCfHPF+K/576JWPpNscj4zbYp/w
u83tt94Gfp0SsvZPcXsFU7zfWqe4f0m3+7zJuN3jLbg91iv+kN/tr6nOxxlT
gd9U55/WqbFP+N0R+7Q/ZPVLwR3OZ613YF5Mi/8u/6d5fReEvkD4Q066M/YJ
vzu9Hwru9PnXGuvf5Y/sWB/7U7KDj2QvO/aFnJ0N/7LdXiLb+aU12+u/M9v5
IOmu8C/wSLnL8c4I/bjQZ4f+YfHgXc7vibu8v1rvcn8678L8ne71mTI97Cv+
6WEv8M6eHnZDLpjufJWI9dXCe7rPu07tF/53+/6Uu8NfnX+3z59s6AvuBv6x
fpziv9v7ofNu3HdmOP+kzHD8MmaE/ZCzZ2CezAj8Qk7M8H5sjf3qt86Q350f
9zh/ptwT9gLfjNAfjLmcfU/4K/zviXXC/x6fp633ON90hr03xR8zHd+UmW4/
I+SZwn9m7Nf50gv/mZg3kDtnOl5J97qccq/zRca9nq/sez2/BdAn7sW8utfr
sRPnJeW4PiUH+Ie8WfjnxLmKP8fxSuT4/bA1x/3p1H7hf5/jm3Jf1I/Ov8/v
v9n3of7v8/wm7otzhT/kTshJs5xvUmah/qHPnoX5MMv7ITEr/rvin4X4ZwH/
+52fUu53PDIki3/ud3wK7vd6TNwPvr/f+7Hzfq/3pNk+b1NmA//ZPn+zZwP/
2bFO+M/GfW+2x9s5G/g/gPp/APhDn/2A91PBA56fxAN+f2p9APX/gN9Pk+Z4
v6XMAf/PAf/PiX2Kf070h/Cfg/uK1ut86YX/g2FH+D8Y5wv/0L87fx9E/h/E
/NF+xf8g5s+DeL7KdbyTc71eUnLDTujTct1+Ruj1fJKF/dm5Xv+5uZ7Pglz3
ryTX7yOJsJ8U8TZI1vNAruPfHvurQ9+Z6/eVrtj/7v3pIe+f5If8vJSQlZ+0
h3x/xkNeL1kPOT9kP+Tx5T7k/V4AfclD/jyZeMjxbZB/yu9DXu/tD6HfH3L+
7HoI+Z/r/Jk81+srZW7gGfyfNhfzAXLWXK/H7LnOZ7mhH6f6nev4l8z1eZ+Y
G37G/gbsb5X/oW+fi/te7Bc/dc31eZ30sOOT/DDuYw87n6Zpve7r0Gc97PWe
/XCco/w/jOcT7C95GPNU5wUeDaGvVvyyr/gfRv2HXvejrjivr+p/nttLnufn
pczzfkybF/aU/3mev6x5/v4nex7in+fv7wpCr/4qmefzKDHP+btB9lT/8/y+
1w65c57nswv7kx5xvk5+JPpD+X8k/FX9PxLnKv5HEP8jqP9HnB9yH3H8CkIW
n5Q84v2WeMTnbcMjqP9HPD/tj6D/HwH/PeL4J80Pf1T/812fEnrdZ9JCfvd5
NWTlN2u+P39mz3c8cufj/YbOV/3LnvI/3+8/DfO931vnO77t8z2fnfPBf/M9
X0mPOn8lP+r9kPJo+Kn6D/nd/D/q+GU96vyaLVn1/6jzbQHslzzq/iceRf0/
iufrR31etEPufNSfd7oedfyT8uJ81X8e7uN5jldaHu5Hed6vWXmo/zzHPzfO
e/f+lOd8VxJ69Uciz+dRQ9i7TfWf5/loz3P+7YT9Lq1X/T/m/ZP8GPj/sfBH
9f+Y83UG9FmP+fv57Me8n3Ifw/x/zPNb8pj3a+Ixz0fDY87vrY95PO2PeT46
oe96zOs9aYHjk7wg/FP9L3B806DPgJwV68UH2SGL33IXeP8WLPD3iyUL/P1T
YoHXT8MCPN8scLzaF2D+LfD8di3w+ZD0OOb/424vBXLa445nxuN+XtbjHl92
rBc/5D6O+8/jft8veRz3H52n+n/c53Mr7LUjns7Yr/ts1+PeT0n5/nyTnO/9
npLv8zAt3+9PGfno//yIS/Hne35z8x2/gnzPTwnkRL4/rzbgvNZ874/2fH8e
6ITcJXuBX9ITjmfyE5EP3X+ecHzTQn+NvhNBznrC50f2E7Eu9LnQF+D8kie8
PxNPOH4NTziftz7h/dIOuTPkYsX/BJ4/F7r95IW4/y90f9IW4v3EwrCj/C/0
eZ290Pk6d6G/TyqI899U/As9P4mF3h8NOk/1v9Dxb4e/nbFe3/W6FjpfJT3p
963kJxH/k8j/k2FP8T/peGQ96fMx+0n3Jxf2CyCXPOn5SEDf8KTnt/VJx79d
/il+nN8FfVKB49G7wONNLnD7Awo8PymQUwvc/7QCxz+9wOshI/Stoc+UP8JT
+2P95AK8DyxwvsopcL7KLfD+z4N/BQXON0WItwT+lBV4vhOxXvxeg/MaYL8F
9loRXxv8a4f9jgKv184C56szBc4vXZGfvqHvRr6TFkW+Q997kfufvMjzNWAR
ng8WOV6pi3z+pS3yeNIX+X0jA+szF3l9Zy3y+Ccvcv7PXuTzIWeR45kbsuZn
3iKvjwKsL1I86sdFjmdZ+HuZ+En+3HhRrpG/yn/oHw59yyLMb8Ufctsin8ft
sNeBeDsXOb+fQT66gHc35KTFfr/pvdjxT17s/DEA61MW+305dTH6f7HzV/ri
iEf8udj5PXOx45+12PGfHPJMfY+QPvDNWezzJDf8vS30eYsd/4LF3j9Fcf67
z+OLPR9lix3/RKxXfdXIf91XFnu/tyz2+mtd7HzSttj5oh34dcg/5V/24z52
ZrHzYRfO617s/ZO0xPPbe4nHk7zE9w8IveoxZYnP89Qlnq+0JT6f05f4+5QM
nSf+X+LxZi3xfE5e4vft7CV+n8lZ4njnLvF85S3B8wf0RUt8vpQscbzLQtbz
TWKJ34drhI/yD39blni+Wpd4v7UB73b41yF/NN8Vv/p/ifdfV5w/WPwPvJMK
fX/vQscvuRD8X+jxpBQ6nqmFHk9aoddbemGcr/7X+YFHZqHjm1Xo+Zhc6Phl
Q84p9PrPxfl58lfvX+B/EfwvQbxlwCNR6PVfU+j4NxT6fG0pBP8D/zb4347z
OgqdfzsDL9XbmUK870A+uwu9X5KW+n2191Lno+Sljs+ApZj/Sx2f1KXO52lL
vZ7Tl3q+M5a6f5mQs7B/8lI8Xyz15+WcpZFX5X+pz9e8pc4/BUsd/6Kljk/J
UvC/7Iv/l3p/1iz1fDQAzxbg2brU67MN57fDXgfO6wReZ5Z6PXYt9ftB91Kv
76RljlfvZc6/ycu8ngcsc7xSljm/pIY9ze+0ZT5f05c5n2cs8/to5jLkfxnm
v/aL/+M88UnOMscnd5njnYf1Bcu8HouWeb5KgEfZMs9HQvY0/xFvA+JrWebz
vXWZ37fbhJ/yDzw6gH+n/NH9H/ou+NO9zPslabk/v/Veju9Byz1fA5Z7/CnL
3d9UyGnLnY/Sl3s8GbCXudz5L2u5999k2MvWfj3/LXe+zYX/ecv9vlOw3Pmq
aLnnp2S590vZcsc3sdzrvwb+NAhP8f9y56NW4N+23Pmpfbnnq2O582En5DPw
t2u511c38ptUhPtfkeORXOT+DChC/xf5PEstivj1vQz704vcn4wi9yezyPHP
kj3xf5HzW7b8Ef/Dv9wi8D/8K4C9oiLPVwnksiKvv0SRz8+aIuebBsgtiKcV
chvwbw+9+LQD8XUWeX2fQbxd0HcD/6QVPm96r8D8X4H5v8LxSFkRccTzVapk
5R9y+grHO2OFx5O5wt8/Za3weT95hdd7NvzNWeF45q7w+0le6DW/C1Z4/opW
4H3cCufvshXORwnoa+B/wwqv7xb437rC77dt8Ld9hfdDxwrvt84VzndnFL/4
H/52Y3/SSrz/W+n9mrwS9/+V+D6w0uNJXYn3xSu9vtJXej1lrPR8Za70+0oW
/Ju8Er/Hgj5npceXu9LrJy/Oe/f740qfR0XQl6z0fi9b6f2UWOn418C/BuDZ
stL5vFXnaf4LT/H/Su+3jlj/7vNfyLp/nEG+ulZ6PXcD/6SnPL7eT3k/Jj8F
/n/K/U15yt/HpD7lfJwW68W36U+h/5/y/GQ+5fFlQT/5KZ+32Vqv9z+SlX+c
n/eU41vwlM/fIslhr+Qpf99X9pT3d+Ipvx/XQN8Q5ys/LcJP/Y/42oB3+1PI
P+RO4H1G+8P/LvjfDX1SseejdzHyXxx+Kv/F/r4zpTjyIf4v9vmTBjm9GN/P
ir1fM4vd36w4X/mcXOz8kl3s/Jij9Zr/xc5XecVe7wXFnq8inFcCf8uKvf4S
xf7+sSbsnQi5odjxbpE/IbfivDbhrflf7PXRAXw6cd6ZYq+PLuSvu9j5KmmV
r++9yvXJqy7+qf4ZsMrxT1nl8zd1lfufBjl9lfdLxirnw8xVjm/WKq+3yau8
3rNXeb/myP+Qc+N88UPeKvT/Ktz/EF8J/C9bhff/qzy/Nat8PjSscn5pWYX7
P85vA97t2N+xyvm9c5Xz+xnou1b5fbIbctJqzP/VmP+r3Z8Bq/H9L/a/pP4P
eXPIaas9P+mrvV4zVnv9ZUoW/68G/8Ne9mr/vpKz2udRLvzPW438r/Z8Fq32
+i+Bf2XwJxH2xTc1q8H/q51PWyC3Av82nNcOfDtWe/10Ao8zq52PurQ+5O7w
V9/Pk9b4+4Hea/D9d03gp/vfGrefssb7LXWN+58GOX2N+5+xxuPLXOP9ngX9
5DXeX9mQc9Y4n+Su8f7Ki3jEtwWQi9Yg/+H/zDi/DP4k1jj+NcJL/B/rLxP/
Y38r8G9b4/XVvsb7oWONz49O4HVmjc/TrjVeX93QJ5V4vD1L8D6oxPHrW4L3
AyXub3/IA0rinJAHljg/pZR4Pwwq8Xymlni/Dgl7775fCFnPn8NCFt+nl3h+
RpZ4v2fgvDFar/toid8XxpVgPuG8iSVef5NLHO+pwDdb+IQ8A/nIwfrZOl/3
G+A9r8T5O0/4hJxf4v1dgPgLoS8qcT4thlxS4vO4FP6XlXi9VwgvzU+cV1WC
+7Tsx/2irgT3qxLno6YSr/cW1UvIx1CPrfDnOOq9DfifQL22a3/IJ5HvDuB/
Cud1Qj4Nf88g32eBbxf2ny9xfu1GvV5APyWtdfx7rvX+7r3W+afv2ogn8E5e
6/j3X4vnxVj/bv+v9XhSIA+CnLrW63vIWn9/lbbW3z8MW+v8kr7W8Ry5Ft8f
1nq+xgCPTMjj1jr+WZAnKl71/1rn66lrcX+FfzPgf85a56PZsJcL/OcB/zzg
mY94CpRP9T/OL4J/xcJL9+O1/v6kFPvL1no/V8BeAnIV6q8G/tchvgb434R8
tGh94HNsrdd/K/A9Lnx1H4P+BOy3I98n4W8H4jsFfDpRf6dR32dw/lng2bXW
7//n0W/dOP/CWr9vJK1zPu+5zv3pvc7X913nfJK8zvHov87re8A6v58MhD5l
nfPpoHXON6nrHK8hOD8N8rB13t/p65zPR67D708Q35h1nr9MyOPWXfzz3fdT
67wfJsLfyeucv6bC32zZ0/xX/Jr/65zPZ8PfXNibJ3t63l3n98/8dT6PC4BP
IeIrQjzF67yfStb5PC4F/mXwvwLxJVAPVXG+6rdmnfNVnfT6vgK5CfloET6h
P7bO7wetkI+vc/5pC/vqnxPQtyPek8CzQ/Y1/9c5/3TC3mnhqe9565yPziLf
XcjnedRrd/gvfrwAf5PWR3zq//Ver73XO7/0Xe98nwx9//V+Xx4Q9vX+ZGDI
774/Xu/9OAj2UuHPkPWY/2FP9TpsvfNJ+nq/j49c7/yWsd75dYzs63sE/B8H
vLLWez4mwt/JOH8q4s2W/+p/xJcjvMKf2ZBz13u9zwP+efAnH+cXrPd6KQQe
Reu9XorXe7+UrPf6LV2P9yXr/f5cITzV/9hftd77tWY9+n+9908D8tEEvFvW
O/8cQ/5b1/v8Oo742iCfAJ7tkE8Cvw7gewrxd8p/9b/qV/2P888Cry7k+zzW
dyPfFxB/Uqn727MU34NK3f++pXg/XOr49y91/htQ6vfVgdCnlDo/Dir1/k0t
dX+H6Dz1P/TDSj3+9FL0f6nXY0ap529Mqd+vMku9/sZBzgp/xD8TS71fJpd6
P0wt9frNhv8zEF8O1s8u9ftUbqzX89g8xJcHfb7iVf9rfegLFY/eh5X6fC5G
fkpKvb5KEX8Z8l2BeBLQV8nfkGsQTx3kBuS7CXi3IP/HcF4rzjse8rvfY0v9
vnWi1OdtO+r3JPDpKPX5cArndUJ/GnieQb+dLcX7/VLng/Po127IF4B/0gbn
x54bLv6p/PeG3Bdy8gaPt/8G9P8Gz9fADR5vygbHY9AG56PUDej/WK/nrbQN
Hs+wDbj/y77e/23weshAPGM2OF6ZOH+c1qv/N3g+Jm5wfpi8wfMzFfFnA68Z
OC9ng9fzbMUf9nLh77wNeP6HvfwNzscF8Kcw7It/iiSr/zf4fb8EcinyXbbB
nz8qNni/JDY4v1QhPzXIbx3iaYDcBLxaUJ/HlB+9f9/g/XwceLQJz9Cf2OB8
0A5/T0LugD+ngH+n7IV8GvifwflnVX/6vgN755H/bqy/AH+SNno8PTfGf9f8
3+j56bvR8U7e6Pnpv9H5asBGx39g2Nf3kZSNXj+DcF7qRn+/NST2q1/TNnq9
DcP+dJ2n+b/R8c6AP2NkX/2/0flxHPDKQrwTEe9knDcV+7OB3wzoczZ6fmdv
9PzmKl8hz9vo9Zy30esxX/Gp/4FX4Ub/3lUk/OPf2S0GniU4r3Sj30/KoK/Y
6N+HE8CnaqPzaQ3yW7fR+7MB9dC00fm2BfEd24jnf9g/vtH7ow34n4C+HXid
3Oj3qQ7UxynUcyfq//RG56czEV9r4H92o/NnF/w7j3i7gf+Fjc4nSZsu/qn6
77nJ8e+9yfHuu8ntJ2/y+uof9tQ/A2Rf83+Tz6uUTT7/Bm3yfKTi/CGyr/6P
86/R9z/5r+9/mzz+kZs8XxmKR/2P/Zlh/83Af9wmz1fWJq/3iZu8nidDP3WT
5ytb8Yb9GcAjB/jNBv65m5wv5sV68XfeJueXfOgLgGch8CqC/8XCT/2/yed7
KfAq2+T1XIH1CZ0X66uEb8g1Oj/kuk1evw3wrwn13IJ8HIPcKnzC/nHYb9vk
fHUC+LSjPk8C3w7k59Qmnw+dqPfTyO8ZnHcW9dCl89X/Ol+/9wD+F7A+qczx
71nm63uXOZ59y9D/ZY5X/zLHa0CZ89XAsKf7eArOH6Tz1P9l6P8yn8dpZbj/
lzn+6WV+Xxkp+6HPKMP7f5yfiXjHhV79klXm9TQR8Uwuc7ynKv7QZ2u/+l/4
hZxT5vN3dpnzVW6Z99u8Mu+XvDLns3zsL1A8sb4Q+S4q83lWjHyWlGH+lzk/
lJU5n1WUOf8nyrz+q8qcH2tQT3XId4P8V/+rHiOeFsjHVN/6/w2Q/psX5eOq
n9C3xfoToT+h+ELfrnhCPgl7HcjfKezvFJ4hn0Y+zwD/s6jPLuB/HvXeDfwv
oP6TNgd+uv9v9vnWW3r1/2a8/4O+f8iq7wGbvR4Hbg7/Ap+U0F8T8qDNjn9q
nNc35CGbvb/SYn1GyMM2O/7p8i/0I2EvI+TiWD9ms/dfJs4bt9n7PWuzz7OJ
m50vJm92vpq62fkmG+tnbPb7SQ7wnb0Z3/83ez/P2+x8kqfzQ86XPuItUL7G
XPyzEPko2uz1WbzZ53PJZu+nUuEX+8s2+/2mYrPP24TiifVVyr/6H/VTh3gb
Nnu/NCkezf/NzhfHUL+t0B/f7HzZhn44oXrT/V/7df8HHh2bvd9PAf9O4RP4
nwb+Z1CvZxFvF847D/y7UQ8XgH9S+cU/1R89y73+epc73n3Lvf6Ty32+9S93
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
2en82H+n89elYU/3zwEha35fvtPrb6DWh3xF6Dfr94eQr9zp+A6K/arvwYg3
daf321U7Pb9Ddnr+rpa/mv/wd+hOr99hsDd8p/Nb+k7M/53OlyN3er2Ogpyx
0/l7NPAdI33cn26QP6HPRH7G7nQ+HLfT+3s85Cydp/f/wHviTq/vScIv/J+8
0+ftFNWX5j/yOQ34Zqs+Q56O+pyB/M7E+TnAfxb6Zzbqe47s6fkf+M/d6fN2
nvoh8J+vegl9nvwJ/QLhqfmPflyI+i3Y6ffFxcCrEPW5TPWn9//AayXqrxj4
rAY+JTh/HeyXot434rwy2CtX/Wj+K/5Yvw1yQvUVcuVOn7dVyEf1Tn9eq8H6
WtRXnfKn53/Ud8NOn2eN4Nsm8FMz8GoBvkeR72PI59M4rxX99Qz66Tj46lnk
tw319BzWn8D658EP7fIn8H9hp9+/ToJvXkS/dAD/lxH/KfDNK5h3nVj/quzr
97jy9/qL8mvA8wzk13f6fecs8D0Hf7qQ7zfAN+dRL28h/93oz7chX5Cs53/0
S1KVP1/2qHL8e1Y5vr2q/Pmsd5X3Q58qr4e+VY5Hv6qLf2oeJ4eserkE+v5h
/83A/9Iqx2NAyPpefHmV4zmwyvNzBeSUKsz/Kp/Xg6ocz8FVXs+pOO+qKs/f
kCrH/+oqxz8N+A9VfCEPA77Dq7z+04VfyCOqnG9GVnn9jZI+5Iwqn5ejgf8Y
xRf431Dl95FM2BsLeRzWj1f9hJwl/0OeIH/ivInQT0L+Jld5v04RXiFPrfJ+
n4Z8Zlc5H06vcv6egXzPRP5ykN9ZqIfZwHOOzov4chWv3v/L39DP03mjL8rz
gW8e8rMAcj7WL4T9AsUX8mLlJ+TCKue/ZcCvCP6vRLzFYV9/n2E1+rcE/bcO
9kurfB5trHL+K1P/a/6DLypQb9uER+gTwKdS/Rj6Kvkf+FcD3xrVd8i18ifk
OvhTj/UNkBuFd5zXhPOawXctqP+j6Jdj0D+t+tbzP/L3DOwfVz41/4F3G/Lz
HOI9AfyfV74jvnbU1wvoj5PyL9a/CLw6ZC/kl4H/KfjzCuq/E+tflT7OO616
1PwHPmdQv6/jvLPgv3OYD13A/w30z3nMz7eq/D7cDfzfRr9dgP13UP9Ju/y8
Hrucb3ruivND7rXL89V7l+e3T9hrDX3fXR5/v7BXHfrkWK96vWSX809/2L90
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
ziNfbwH/btTj25AvAP93wO9JewMvvf/f6+9He+51vHvtDf/1/n+vP2/3Cb2e
x/vudf/77fX5l7zX70eXyH7I/UPW/eVSyaEfsNfxvnyv893AvY7vFZBT9jpf
X4l4B0nW+3+dr+f/vY7nVXv9/c+QvY7/1Xu9/tNCPzPwHwr8h+11Phu+1/ku
HfZGCH+9/9/r9T9K6/X9H3iPBp5j9vp8vAHrM2Uv5LHAf9xe54/x2h9y1l7n
jwnAcyLwn4R8Td7r/DAF+ZsqPPX+H/hkC5/Ae/pen78z5H+sn7nX+y8H9maF
rO8Ns/c6/85B/eeinueiH+YBz/nAPw/yAtjPR/8slH8hFwDvxainQuC/DPEX
AZ+V2q/3/5BXA68SyYH/Ovmj9/+o/42o5zL4X478VyD+bTov8Ersdf6uFH6h
r1J9hlyN9TV7/X5bi/zVIT/16IcG4NcIuQn5b97r9/EW6fX8D7yPof6fRn5b
9/q8fQb648JL8x/13Ib+fQ7nnQB+zyufIbcrP3r/v9fvNyflX6x/Uf6EvmOv
349eRj+dwvpX9vp9pxP19Srm22nUy2uqD73/3+vz+nXgcXav38/Pgd+7tF7v
/3V+6M+D396C/92w/zbWX0D9vAM+T6rz+3+POn9e6lnnfNKrzu9Dvet8XvSp
c/z71nl/9Kvz+k2u83l2SZ3H01/7Nf/rvD8GxHnik8vrnA8G1vk8vqLO74cp
2q/3/3U+jwfVeT4H13n+U+v8fetVdT7vh2D91Yg/rc75Ymj4o/k4TP7p+R/5
Sa/z/hhR5+/TRtZ5/42q8/rIqPN+H13n75PH1Pl94Qb5p/f/iHes8A58x9X5
PB2veEKfJfzi9w8TZD/kiaiHSaovzX+cNwX1MLUO87/O50d2nfP99Drntxl1
fl+cKfuxPgf1P6vO+212nffbHPiXi/qci3qaB3/mox7zFI+e/7U/6jdf+pAX
Kp9fD5zlT8iL1T8jLsqF6JdlqI+iOr8/rUS+i1Evq5G/EukDr3Xoj1L0+8Y6
f39QBn4oR/9UIH/bgHdCev3+D/FW1fl8rcb6Gsi14I86yPXCK+q7QfkK/BuB
f5PyE/abgX8L6v+oztP3f/Dr03V+P2oFnzyD/BxHfz+LfLShn54D352Qf3r+
13o9/ws/Pf/X+X3kZJ3P5xexvwP4v6z6CXunlM/A+xXVR+Ddifp/VesD/9PA
9zXw5RnUy+uYP2fr/D52DnzUBb5+A3ieR/+8hfx0o/7fDv27v/+r8/vCO8h/
0j73v8c+97/nPs93r33hT+h77/N+7yN7gX/fWK/52m9f5CvwTt7n9X/JPuen
/jjv0n1ejwPg/+VaH/qBWq/n/33OBymxXveVK/c53w5C/IO1XvN/n9+Prtrn
+A/B+Vfv8/5N2+f1PhT6Yft8Xg8HHun7vB5HxHr9nnPkPu+HUdof+GYoP9Ef
o7U/5DHw54Z9Xr+Z+3xejd3n/T5O+On5f5/fJ7K0P/CfsM/reeI+74dJ+3w+
TN7n/TNFsr7/A/9pqJ/sfT4vpwsf/f4P+M5U/YQ+Z5/zzyz1T9ibLXuB5xzF
F/ySi/qfu8/nw7x9znfz9zmf5KneNP/3+bzKB54LgX+B/Av8FmN94T7n82Xo
n6J9Pj9Wov6Lgf9q1FPJPuf/dejnUtWnfv8H/MvAP+XYX4F63ob6T6j/Ql8p
+yFXKZ9hr1p6vf+XfyHX7nO+rQM+9fv8PtgA/BvBP02o/2b0U4vij/1Hgfcx
9OvT+/x+0Cr7ev5HPx+XXvMf+Lehn54D/ifA/88D/3bhG3i/AD46ify/uM/v
Mx3I/8vA/5T2Bz6vSB9yp+LT+3/Vb+hPA+/XwPdngP/r6I+z4MNzwL8L/PMG
9OfR/28Br27ZD/3bmL8XZC/wfkdy8E9Svc/bHvU+n3vWe330qnc+7F3v86ZP
vfdH33rPR796vP+v9/64pN7x61/v9Xtpvb9/HFAf+dL3/5A1nwfW+/PjFfWO
d4rkwPNK6Acp/pAHh33dF1Ox/qp6548hwudrF+WrpQ85Tf5FPobW+/1/WL3n
c3icr/mUDv0I+af3//XO36OAb0a9z8vRwG9MvfPBDcAzE/bH1vt8Gqd49PwP
vLLkr37/B7wn1jt/T6r3+p1c7/NjiuzF+qnCK/CeJv/SL8rZWh/2pgP/GTov
7M+sx/yHf7Pq/T4wu975ak6980Eu5Ln1/rwzD/bmQ86r9/vpAvRnvuLX83+9
z7sC9Pti1Hdhvd9PlkkfeBYJr9CvVP5CLla9xPrVWh/4l+j8wHud/A25FPnc
iPoo0/rQlwOfCtTftnrnywTquxLrq+p9nlXXOx/XgJ9qZT/W10kOPOqBZwPi
b9T5gVcT8tGseAO/FuEb+qOyH/aOgW+eRv234vxnIB+v9/vos6j3NuD/HOI/
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
vfAvCPMkGPkKAZ890HuBrw/4+7HvBcC/fcB7v9oT+QDwOqj8EPkQ8DmMeX0E
+B4Fn46hno6Dnyfw/knU1yn099OojzOYR2eB5zn07/OY3xfAn4vYLy4Bz8vq
j8hX9LzIV9F/rgHv61of5UP/ewP43YT+FubHbcR3B3y4i350D+/fB/4PwK+H
qI9HmJePsX8/wTx5Cj4+g73nqI8X4MdL7LOvtN5E/1rrQ+Q3yM9bxP9O7wue
79W+yB9UlvsfFV/Rf4J/n9HfvqBffQWfvgH/7+D7D+h/Yj/8hXr4jX3T8Vh8
//BY/v3psd8nYTxyT+SwHut/OI/dN8N7LP4R9L7gE9Fj+RfJY+OPrO/L+Shy
/r3IUT02P9HUf5Gje2y9xfDYeooJf2Ihnti4H8dj+RkX5+MBv/jAL4HH1kdC
j+13iTy23yb22PpN4rH1m1TkqOJ/Mo/dZ/5CvMmBVwrEnxLxppLziSqEyqlV
L3IavS9yWuQnncryXnrYz6D4iJwReGaC/5k9dt5n8dj6y+qx9ZwN+cgu/mo/
z6Gy6HPCfi7Nh+hzIx95EE9enM+H9/IrfnK+gPjfVuSC4k9xkQupXvD9W/Gu
GPrfwtAXUbxELor3iyE/xRV/OV8C+SiJ+EqBH6WhL4N8lfXY+VYO/C/vsftD
BYlP9+uKHtvvKgHfyuBvFeSnqtxfJe9VQ3+o7rH9ugbwr6nxCT611L7ItdV/
kevgfF3wvx7s1Vc+i9wA+DdEfI3A/8Z4vwn0TdEvmnns/Gyu+Oj3P/pxS8VD
v/9xvzX6VRv0u7aoz3boF+3RXzpo/iXejuB3J/C7s/orchfg3xXvdVM+ir47
8tkD/OiJeu2FeHtjPvUB3/9BPvpifvRDvfRXPOS9AehnA9HPBiG+wTg/RPER
/VDg4wL/YYjnX82f6Ifreek/IzQ+0Y9UPoo8Cv1mtPor+jHAfyzqY5zyU+Tx
6D8TPHYfm4h9YxL6y2TgNwX9Yar6I+9Ng73p2E9mwP5M6GfB/9lqX+KdA3zm
Il/zgPd8yAs0X/LeQo1X9IuQ78WopyXQL0X+lyG+5ZpviW8F9CvRv1dBXg38
1wD/tZgn62BvPfK5AfhuBP6boN+M+bkF/Xsr+v82rWc5v13xE3kH8rET/N8F
fu8G/nug34t6DkI9BGOfCEG/8gAvL/D1AX+/7j+iD0Deh/69H/P1AOrlIPbZ
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
0cCf
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 16.},
  Method->{},
  PlotRange->{{0, 8759.}, {16., 60.8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{175.18, 175.18}, {0.8959999999999999, 
   0.8959999999999999}}]], "Output",
 CellChangeTimes->{3.6046733450906143`*^9, 3.6046746870023675`*^9, 
  3.6046748962273345`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["%"], "Input",
 CellChangeTimes->{3.604673701169981*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{293., {2., 9.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"xGB", "\[Rule]", "0.`"}], ",", 
             RowBox[{"xGC", "\[Rule]", "0.`"}], ",", 
             RowBox[{"xRB", "\[Rule]", "0.`"}], ",", 
             RowBox[{"xRC", "\[Rule]", "0.`"}], ",", 
             RowBox[{"xRG", "\[Rule]", "2434.3579545056696`"}], ",", 
             RowBox[{"xBC", "\[Rule]", "0.`"}], ",", 
             RowBox[{"xBG", "\[Rule]", "10.`"}], ",", 
             RowBox[{"yGB1", "\[Rule]", "0.`"}], ",", 
             RowBox[{"yGC1", "\[Rule]", "0.`"}], ",", 
             RowBox[{"yRB1", "\[Rule]", "0.`"}], ",", 
             RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], ",", 
             RowBox[{"yRG2", "\[Rule]", "1182.0702408675959`"}], ",", 
             RowBox[{"yBC2", "\[Rule]", "0.`"}], ",", 
             RowBox[{"yBG2", "\[Rule]", "0.`"}], ",", 
             RowBox[{"yGB3", "\[Rule]", "0.`"}], ",", 
             RowBox[{"yGC3", "\[Rule]", "0.`"}], ",", 
             RowBox[{"yRB3", "\[Rule]", "0.`"}], ",", 
             RowBox[{"yRC3", "\[Rule]", "0.`"}], ",", 
             RowBox[{"yRG3", "\[Rule]", "591.0351204337979`"}], ",", 
             RowBox[{"yBC3", "\[Rule]", "0.`"}], ",", 
             RowBox[{"yBG3", "\[Rule]", "0.`"}]}], "}"}], ",", 
           RowBox[{"\[LeftSkeleton]", "999", "\[RightSkeleton]"}]}], "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{52., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 454, 32687464249912435386, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{55., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 454, 32687464249912435386, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{85., {2., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 454, 32687464249912435386, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{77., {1., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[454]]], "Output",
 CellChangeTimes->{3.60467370201503*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cloudOvercastPercentage", "[", 
  RowBox[{"[", "4405", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.604675216352645*^9, 3.604675223041027*^9}}],

Cell[BoxData[
 FractionBox["1", "10"]], "Output",
 CellChangeTimes->{3.6046752234520507`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Demand", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.6046753001154356`*^9, 3.6046753027905884`*^9}}],

Cell[BoxData["7468"], "Output",
 CellChangeTimes->{3.604675303386623*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AvailableResource", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.604675304881708*^9, 3.6046753076868687`*^9}}],

Cell[BoxData[
 RowBox[{"-", "1.1821149572148712`*^6"}]], "Output",
 CellChangeTimes->{3.6046753081748967`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"windSpeed", "[", 
  RowBox[{"[", "10", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.604675326782961*^9, 3.604675330472172*^9}}],

Cell[BoxData["4.872736`"], "Output",
 CellChangeTimes->{3.6046753309672003`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solarRadi", "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{"t", ",", "24"}], "]"}], "+", "1"}], ",", "month"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6046753338013625`*^9, 3.6046753430998945`*^9}}],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{3.6046753449409995`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"1", "-"}]], "Input",
 CellChangeTimes->{{3.6046753484522004`*^9, 3.6046753487362165`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"0.5", "*", "windTurbineCoefficientFactor", "*", 
   RowBox[{"windTurbineRadius", "^", "2"}], "*", "airDensity", "*", "Pi", "*", 
   RowBox[{
    RowBox[{"windSpeed", "[", 
     RowBox[{"[", "t", "]"}], "]"}], "^", "3"}]}], "+", 
  RowBox[{"solarRadiationFactor", "*", "solarPanelSize", "*", 
   RowBox[{"solarRadi", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"t", ",", "24"}], "]"}], "+", "1"}], ",", "month"}], "]"}], 
    "]"}], "*", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"cloudOvercastPercentage", "[", 
      RowBox[{"[", "t", "]"}], "]"}]}], ")"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"-", "404150.3920509095`"}]], "Output",
 CellChangeTimes->{3.6046753673942833`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{"1", "-", 
   RowBox[{"cloudOvercastPercentage", "[", 
    RowBox[{"[", "t", "]"}], "]"}]}], ")"}]], "Input"],

Cell[BoxData[
 RowBox[{"-", "34"}]], "Output",
 CellChangeTimes->{3.6046753745236917`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wData", "[", 
  RowBox[{"[", 
   RowBox[{"{", 
    RowBox[{"10", ",", "1"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6046756147654324`*^9, 3.604675654501705*^9}, {
  3.6046757132140636`*^9, 3.604675747838044*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"20100101 09:00\"\>", ",", "0", ",", "405", ",", "10087", ",",
      "10319", ",", "10203", ",", "175", ",", "127", ",", "98", ",", "551", 
     ",", "50", ",", 
     RowBox[{"-", "20"}], ",", "340", ",", "187", ",", "245", ",", "70", ",", 
     "379", ",", "245", ",", "146", ",", "109", ",", "260", ",", "42", ",", 
     "25", ",", "6", ",", "195", ",", "7", ",", "191"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"20100101 00:00\"\>", ",", "0", ",", "405", ",", "10072", ",",
      "10299", ",", "10193", ",", "107", ",", "197", ",", "82", ",", "537", 
     ",", "77", ",", 
     RowBox[{"-", "9"}], ",", "340", ",", "188", ",", "245", ",", "81", ",", 
     "390", ",", "245", ",", "151", ",", "103", ",", "262", ",", "43", ",", 
     "32", ",", "7", ",", "223", ",", "6", ",", "209"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6046756549317303`*^9, {3.6046757163082404`*^9, 3.6046757483180714`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wData", "[", 
  RowBox[{"[", 
   RowBox[{"t", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6046757673851624`*^9, 3.604675778588803*^9}}],

Cell[BoxData["\<\"20100101 14:00\"\>"], "Output",
 CellChangeTimes->{{3.6046757601747494`*^9, 3.604675778922822*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wData", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6046758315378313`*^9, 3.604675835243043*^9}}],

Cell[BoxData["\<\"20100101 00:00\"\>"], "Output",
 CellChangeTimes->{3.604675835618065*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6046758679249125`*^9, 3.6046758740722637`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"t", "=", "1000"}], ";"}]], "Input",
 CellChangeTimes->{{3.6046758936443834`*^9, 3.6046759175127487`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DateString", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"wData", "[", 
       RowBox[{"[", 
        RowBox[{"t", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Year\>\"", ",", "\"\<Month\>\"", ",", "\"\<Day\>\"", ",", 
        "\"\< \>\"", ",", "\"\<Hour\>\"", ",", "\"\<:\>\"", ",", 
        "\"\<Minute\>\""}], "}"}]}], "}"}], ",", "\"\<Month\>\""}], "]"}], "//",
   "ToExpression"}]], "Input",
 CellChangeTimes->{3.604675911869426*^9}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.604675912544464*^9, 3.604675919566866*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"cloudOvercastPercentage", "[", 
    RowBox[{"[", "All", "]"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.60467684492842*^9, 3.6046768756448746`*^9}, {
  3.604677194693197*^9, 3.6046772097630587`*^9}, {3.604677240258803*^9, 
  3.6046772417458878`*^9}, {3.6046772870334783`*^9, 3.604677304980505*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1:eJxcnX9clWf9//mYGZkZmRmZLTIzMlvMnGPObfecc8w5x5xzzDnHHHPMOYeK
iop6RERExMPvw+/D4XA4wAGOinAyMzIzMjMyMzJbtGzRskXmjJatr8J1Px7f
13P/9Hh13+e+r+v1fr9fr/d1Xbf65ZVvLn5lRFhY2D2Tw8Ju/+/wfwMPXn0q
dMeev/7mQfN/WH+Zeld4YNIlg8OtP/+n8R/nn7BxhHXf7588ULrWxuOtgyff
j15+0MaR1q2L43Z32XiSdc++hxL/1GPjKOsPW8e3PvoHG0+2/lhfcSoqaOMp
lo5nqnXj1tNPvt9rcLQ1/L82nmbdGuyypPt+bfB06/avnwpdNPhOa9XQfzaO
sSIS7m3v3mTju6yOf/73QtpfbDzDGrl07DcPV9nP+7bVdGv2KyPs9820fLeH
u97Gd1uLVt5+oo1nYbz3WNV/bzj9+D32fGKt+UMvtPG9lus2XWdsPNt68O4V
xx4bY/Nxn1UYeXtENp6DeNyPeDxg3Z7diRobP4h4WIodFuL3kI7H8ZC1cCiA
9nzmWkP0/N3w45gL/h9W/h0Pg+95ih3zrDEjvrF3wm/s649YwfXJ+X9Lt5//
COI931o89AKDHfOtD3asPp5aaF9/VMfreNRaMPwCcz3OqrwdvmR7fnHWvP1r
blFqX3/MKnn49v9hX38M9bBA+XcsAP+PK/+Ox5HfC8H/QvD/BPh/AvwvUj4c
i6xbwbiVYDb/T1pD6dht8/ukdSuZbhFg8xtvJQ0N2GAr3rpVnJN/+2/7/njN
/6545P9T1s3b019psPWU5r/jKc3/rqes67fLa6rN72Ll31psvZd+O+Pt+S7W
/O9abN0/+td1Kffb/Dxt3UqOW7cYbD1tDQ1/h83n08p319PQnyWqP9YSxGOJ
xr9rieWe+K3fTRllj/8Za8nQC+z5P2ON2lV86xd2vj6jfHY9Yw2VS4PN/1Kt
D2upNTS90fbvl1q3BndrhDb/S/V9Yc+q/ljPWoNP377B5v9ZHW/Xs9CfBGvg
Ntxn85+AfEvQfO9KgN48p/luPaf563hO+ex6Dnq/zBoqt3/Yv1+m8XEsQ/yX
oX6ftz68nU532fN/3lo2lNA2f88rn13Pww+Wa31Yy62hcp1o/365NSRPJ+zf
L9f3hb1gxQ9N0H7/C5bnkduCbvP/go636wXr2u3ySbDHv8IqL7v9n83/Cmvu
UMLY/K9Qve9aofke9qLybb2o+e54UfnuetEaonPEb83vE60huicbHJWIeCTq
+xMTrbihB9rjS9T6dyciXxOtodd9w+C+ROj7S4qjXlL/sF6yhi6fMzjxJej9
S5b3dnTr7Pe/pPrY9ZLme99L8NuVqjdRK7XerZWqN4krNd8dK1Xf3SuR7yuV
z76V1tDPx9n8v2x9e+g/m/+XNT7Wy1pviS9r/jhe1vxzv6x8db2sftD3stZD
WJLme1SS6peVpHqTmKR8O5KUb3eS8t2VpPrSl4T+5hXVl6hXoOevaD4nvqL5
7HhF+XS/onx2vWLdNZRQBve9Yt2u/jv22Pyvsm6r465im/9Ver+1SuObuEr7
A8cq1Vv3KvXHrlXqn32r4M+vWsuHCtjm/1WtH+tVzffEV6Evr6qful/V/O56
VfO771X0k8maX1HJ0JNk5TsxWfl2JCvf7mTlrytZ+e1Ltn5z7l+3GLP5f80a
ssPTNv+v6f3Wa+oHia9BH19D/r1m+W+n20M2/6+pfve9pvkdtlr7y6jVWj/W
avXXxNXoJ1drvrtXa753rdbx9q1G//i66knU65rv1uuqH4mvK9+O15Vv9+ua
312vK799r1vD5W/zv8YaouPPNv9r9H5rjepR4hrNH8ca9Tf3GuWra42uD/rW
YD31huZ71BvW8P9v++kbqjeJb2i+O97QfHe/ofne9YaOt+8N+Odare+otegH
16o/Jq5Vvh1rNV/da5W/rrXWUDr9y+Z/rbXz9vIk8rJ5/5vW14cEwOCoN61f
3W4vwg223tR4J76J9cab6gfuN7X/7npT+5W+N60he/29zX+KxiciResnKkX7
95gU5dtKUb7jU5TvxBTlOyUF66EUzW9nCvQkxbrVzN9izOBginXLPGof6bD5
TdF87klRfvtSrO1DAzJ4IMX62lAAbf7XWdtuh3urwRHr9P6odVpPMet0fWGt
0/4tfp3qQ+I61e+Uddbwe239WKd+4VyHfmqd9u/BddCXdaovPetUX/rWqb4M
rMP6f73qecR6ze+o9ZrfMeuVb2u95mv8euuXt9PxXoMT11u/uE3XaoNT1ltf
HRJggx3rrZ/ftoMKg53rNR7u9eoXwfWaP13rNf961itffetVjwbWo3/foPke
sUH3D6I2qL7HbND3WRs03+M3oF/boONN2YD+ZYM1RO/DZn7ODdCTDaonwQ3K
d9cG5btng+Z33wbld2CDtWUoQez8T7V+dvb2f3b+p+r9Uan6/phUzR8rVfu5
+FT1g8RU7U9TUpV/R6ry70xV/t2pyn8wVfuvrlTt13tSlf++VOV/IBXr/42q
NxEbVW+iNqrexGxUPbc2qt7Eb1T9SNyo+ZyyUfl1bNR4OHG/eyPyfyPyf6Py
0bNR9bpvo+rJwEbs32zS/j5ik9ZL1CaNZ8wmrFc36f5s/CasFzep/qRswvp0
k/YXzk1aD+5Nqr/BTfDXTdq/9GyC/m/SehjYpHoUthn6vxn6vxn6vxn98Wbo
/2blP3Ez9H+z8u/YrPw7N0P/Nyv/QbyvazP0f7Py37cZ+r8Z+49pyn9EmjWU
3k/b+Z+G+aehP0zTeohP034mMU35T0lTvh1p6gdO3O9OUz0Mpin/XWnKR08a
8j8N+Z+G/N+C/N+C/N+C/N+i9WZtUf2J34L9gi3aL6RsQf5vQf5vQf5vQf+z
Bf3PFuT/FuW/bwvyf4vyH7ZV9Shiq9ZH1FbVn5itqj/WVuT/VuT/VuT/VuQ/
sHMr8n8r8n8r9H8r9H8r9H+r5svAVuj/Nu3vI7ah/9mG/mcb+p9t0P9tynfi
NuU3ZZv1laGA2vm/Tf3Xifvd2+D/27CfvQ39zzbk/zbk/zbkfzryPx35n67r
rZh09D/p2m/Gp6veJKbreFPStd93pKP/SUf/k475p6P/SVe97klXPelLV74H
0q3NJ2pudYh2/m+3flp7e0PFzv/ten/Udq2vmO1YH25H/7Md/c925TNlu/Lt
2K79kHM79vO2635rcLvqfdd21Zue7ZrvfRjvwHbN97Admu8RO7Afs0P1PWaH
6ou1Q/Uifofmb+IOze+UHdaXhzZc7PzfYW0cMqzfmfnvUP7dO5T/4A6t364d
yP8d6P93IP934Pxkp/IfsVP5j9qJ/n+nxtvaqX4bv1P1PnGnjjdlJ/bPdqrf
Oneqvrt3Yv47VW+6dqre9OxU/vt2Kv8DO5X/MIfmf7hD+Y9w6PsjHdr/RzmU
/2gH9gscqv+xDmv4vfb+jkP1KM6h8Yp3aD0lOFT/Ex26/kp2YL/BofqT5oD+
OLT/z3Zov+N0aD24HFoPboeuv/wOrYegQ+MRcmg8uhyqR924v8eh+dCL+fQ5
1H/7Hbo/PODQ/B506H5P2C6NR/gurId3aT1F7tL9h6hd6r/Ru9R/Y3ZpvxC7
C+vHXVoPcbtUj+J3af+RsEv9N3GX1kPyLvSbu9QP0nbpesuxS+ORvUv7Iyfe
79ql+urepfth/l26/xbcpfkd2oXzxF2639y9S/WpZ5fGs3eXnpf37VI/6N+l
ejSwS/14EPEIy9B6CM9QP47I0HqIzNB8jMrQeojOUH+IyVB/js3QeFgZmu9x
uD8+Q/MhIQP7Kxmqz8kZ8NsM5TctA+fDGbofnZ2h+6PODN1/duF97gzVI3+G
1kMQ4w1lqD90Zag/dGeoP/dg/r0ZOE/J0Hroz9D+aADxGMzA/udu1avw3VpP
EbtVHyN347xut+pD9G7Vj5jdym/sbj3/snbr+Vfcbj0PiN+tfpCA9yXu1npI
3q1+lLJb/SFtt/ZLjt1az9m7tV9y7tZ4uHarX7t3azz8u9Gv7lb/DIHfrt0a
n+7d2M/erevD3t04T9qt+tC/W/VmYLeedw3u1vP4sEw9bw/P1POwiEyNZ2Sm
7m9HZer5Q3Sm1kNMptZDbKbqk5Wp9RCXqfUQn6n+kJCp+pSYqfqUnKn6lJKp
fKZlan04MjUe2bjfman66MrU/s+dqee//kz112Cm5ncoE9+jZOr5e3emxqsn
U/27N1Pj3Qf++zO1HxgA/4OZ+H5qj/Ifvkf5j9ij/Efuwf7QHs3/6D3YL96j
+R+7R/m29mj+x+1R/uP3KP8Je5T/xD3Kf/Ie5T9lj/KftgffV+1R/rP3KP/O
PZr/rj04b96j+uPfo/kf3KP6E9qjftC1R/WnG/Pt2aP627sH3zPs0XzvB98D
ezTfB/dovxqWpX4bnqV+HpGl+hOZpfoTlaX5GJ1lDT/X1v8s5TM2S/XHylL9
ictS/YnP0vVDQhb2l7K0/0rO0vxIyVK9ScvC9ztZ2k9nZ2m+O7M0311Zqjfu
LM13f5byHczS/A6B764s9eNu/L4H/PeC/74szf9+8D+Qpfk/mKX5HrZX4xG+
F/q/F/q/F/q/V/mP3qv8x+xV/mP34nvBvcp/3F7lP34v+r+9qjeJe1Uvkvcq
fyl7lf+0vcq/Y6/yn71X89+5F/qP+bn3Qv/3Qv/3ar8T2ovvQfeqHnXv1Xj1
7NX1QO9e6P9e3R/q3wv936v6M7gX3z9k63ogPBvnAdnqt5HZOB/LVv2JzsZ+
WbbGIzYb+0fZqkdx2dD/bPWjhGydX2K2nhcmZ+v6KiVb8z0tG99DA2fjfme2
xtOF97mzdX/Cn631EMzWeg1l43vabK2Hbsy3B/HoRTz6slWP+hGPAfA5mK35
HbZPcfg+fV7EPvWnyH3qd1H7tD+P3qfrq5h9mu+x+/C9+T79HjoO98fv0/Vb
wj7dn0vcp+uBZIwvZZ+uB9L24fulferH2ft0f8K5D/W/D9+n7NN68O/Dee0+
9YfQPq2PLvDfDf57wH8v5tcH/vvB/wD4HATfYTmKw3P0/ogcrafIHOyP5mD9
l6Pji8lR/mNzlH8rR/UoLkf5j89B/5eD76FylP/kHPT/Oej/c5R/R47qU3YO
9v9ytD925eB7qxztT/w56p/BHP3zRKEc/fMXXTlaD924vydH18O9Obq/0Zej
/VA/+B8A/4PgP2y/8h++X/mP2K/8R+5X/Ynar3xF78f3EvvR/+/H9xP7dT0Q
h+fF79f8T9iv/CfuV/6T9yv/Kfv1+/K0/cq/Azgb9zv36/6Faz/OJ/drP+TH
+IL7dT0Q2o8/T7Jf12Pd+9WPe/brfkTvft2P6Nuv/VH/ftWfgf2qP4OIR1gu
9D8X50G5mh+RuXoeGJWr+w3RudrPx+RqfsfmWuOGEsTWf+C4XI1HfK72Twl4
X2Ku7s8l56ofp+RqPaTl4s+35Go9ZOeqHztztT915Wo9uHNVj/y5OK/P1XiE
cnF+n6v61I3n9eRq/9ybi/PdXO1P+nO1fxkAn4O5VvJQQG39P6A4/ID+ebyI
AxrPyAPKf9QB5T/6AL6XOKD8xx7A+dkB5T/ugOpt/AHlP+EAvoc+oHwlH1D9
SDmgfKcBOw4o/9kHcB59QPl3HVC/cx9Q/v0HlP/gAeU/BL67DlhDxz9TbP0H
/z0HdH3We8Aajpsd/wPqx/0HND8GDuj6YPAA/nxjnn6/FZ6n/VBEnsYjMg/n
f3m6XovOU/5i8jQesXn4vj9P4xGH58XnqV4m5On6JzFP+5PkPPXPlDzrtruM
XGrrf571g9uv++evTPyBs/NUj5x52g+58rQfdeepH/gxvmCe1kMoD38+I0/9
uTtP1wc9eaq/vXnqD3156g/9eeoPA3m6fzGYp/oedlDjE35QnxdxUOs18qDW
e9RB7TejD+qfr4s5aA0dp4239f+g9fkhQzV8W8BxBzUe8Qe1P004qP6eeFD1
KPkgvjc9qPFIO4g/P3BQ9Sn7oMbDeVDzz3VQ/dp9UPsT/0FdvwUP6votdFDz
u+ug6lf3Qa23Hoyv9yC+5z+oetN/UPN34KD15tD/YfgcPGhtGBIgg8Ocikc6
rS8MFajB4U7VqzFO3a+IcGr8xzs1HpFOrY9JTj0fjXKqXk1xql5FO/W8eboT
+0tO9Y+ZTtWvWKfGZ44T3685Vc/m4XlxTtX7hU6t/3in5vsSp/XG0AAMfwng
d7nTnPdfMPnrNOfPBic5zfcw5v5kp/XD28M/afAap/ZTKU71h1Sn6mGa0xqO
s+E33Yk/P+nUes5EPLKdet6Z61T9cjq1XoqcqBen1ksl4uN2ar/lxfP8GF/A
qfvJQafqe7vTWjf0QsNXyGm+dzH8Hnea832Du4BPOc33LwZ343lnnVpfPU5d
L1xw6v5dr1PXb5ed+PNQTt1fveLU/aV+p+rXVaf6yYBT9eG6U/190Kn+fhPx
CctXvxmZr88Lz9d8GZOvehORbw0t30aa+Y/Pt740ZCiGr8h8c95v+JyUb/b/
DI4CnpJvzqMNjsbzpuerP8Tka381M1/1KTZf1w9z8nU9Z+VrPOblazzi8tVP
Fubrfm98vurDknxd/yXk637l8nzN78R83R9Mytf4Judbw3Ey71uTr3qTkq/+
mZqvepKWb/ZXDU7PN/3uL039A2fmm/W4uT8bz8vF+5z5Wg9F+bqf6kK+VOZr
/brztT68+eoffuRfIF/1IJiv6+/2fPX3UL7q1fF8/PmpfK2XU3hed77q6Vnk
W0++6sOFfPN9keGrF3xezjf9ruG7D/hKvlmPG9yP513NV38eyNf+6nq++sNg
vvbDN/Px97MUqH+PLNB6CC/QfmNMgdZDRIHWw/gCfC9WoH4+qQD7xwUajyl4
XnSB1uv0Av37e2IKrC8OTcDwMbNA9SO2wOx3GD7nFJh+12ALeF6B2S8xOK5A
/WEh3hdfYH1uaIFv8JIC9aOEAq3X5QWqT4kF6hdJBVoPyQXWcJzs+i9QfUpB
PFLBXxrikV6A/rdA/T2zQPcXswtUP3MLNN+cBeb7UcNPUYHquavArPcMn5UF
Zn1osLvA9L8GewvM/onBfjwvUKD9UbDA+tHtdMo3uL1A/SiEfDmOeHQhHqcQ
j27E4yzqowf1cQH89RZov3u5QPWlr0D7rSsFet7Xj/FdLdD+cqBA9fl6gerH
YIFZ7xl8s8CsPwwOK1Q8stCsFw0OL9TnjSnU/jWi0Prx7XRMNOMZX6j1EFmo
64dJhbq/EVWo/dOUQtWn6EJd700vVD2OKVS/mFmo9RFbqPUxp1DjYRVqvcwr
1PjGFaqfLSzUfIsvVH1YUqh6nlCo+b280KwPz5v6B05CPJILVY/WFKofpBTq
+iK1UP05rVDrIb1Q/dpRqOvrzELNt+xCrYfcQtVjZ6F+L1lUqPnrKtT1XyXi
4S7UfteL+PoL1W8DyLdgoTnPN3y0F6qehwrN+tvg44Vm/Wf47gI+VWj2Fw3u
LlT9Oot49xSqHl0oVH/uLdR6vVyo+tlXqPp0BfXQX6j909VC7Z8GClWfriN/
BxGPm4XaT4UVaXxGFmm9hRepn40p0n48okj7m/FFqu+RRWZ9bficVGT2swyO
KjLrP4OnFJn9XoOji1SPphdpPxtTpHo0s0j9ObZI62FOka4frCKth3lFOI8u
0v2/hUXqh/FFWg9LinBeXWQN82z4XV6kfpFYpHqVVKT1llyk+8NrinQ9m1Kk
/U1qkepHWpHZ/zB8pheZ/WyDHUVmfW5wZpHZfzI4u0j1KxfxdhbpermoyPrJ
7XT9luHXVaR6WVmk/uDG/LxF2r/6i7R/DRSpPwSRr+1Fqh+hIq2H40VaD12I
xyk8v7tI9fNskfptT5Hq/YUi1Y9e5PflIrO/ZHBfkVl/G3wF9dGPeF4tUj8e
KDLfz9v+X6R6NFik65ObRbqfFFasejSyWP05vFj9b0wx1v/Fqkfji1WPIovV
HyYVW8Pvtff/gKcUq/9EF6t+Ti/W+cYUqz7PLFa9iS3W/J5TbPZDfmHqv9js
hxg8D/fHFWs8Fxbrejm+GP5frPWZUKx6tLxY9SixWPMrqVj9ILlY+9U14Cel
WPUotVjrIQ3xSEc8HMCZxeo/2cVav7nF5ns5u/6LVZ+LitVPXcWa35XFZv/W
8O0uNvsfBntxv79Y+6NAsdZbEONpL9b6DBVrf3S8WPfDu4rVD06B/+5i9YOz
4L+nWPXiAvjvBf+XwXdfsfrFFdRbf7H2E1cx3wHwf71Y9X4QfN4E/2Elyv/I
Er0/vETraUyJOc8274so0fGML1H+I0vUDyaVaD5FlagfTClRP44uUT+YXqJ+
EFOi+98zS/C9cYn685wS9QcLeF4J/L9E9XNhifYf8SXa7ywpUf9MKFG9X15i
9v8M34klGo8k3J9cov3QmhLVu5QS7X9TS9SP08B/eonmkwP8Z4L/bPCfW6L9
kLNE878I/LvAfyX4dgN7wb+/RPv9APgPgv928B8Cn8fBfxf4P4X7u8H/WfDf
A/4vIP97wf9l8N8H/q+UaL/dDz6ugv8B8H8d/A+C/5vgO6xU9Wlkqa63wktV
P8eUmu/l7PV/qfYn40u1f4ksVX2ZVGr2+wyOAp6C+6NLtX+aXqp6F1Oq/ejM
Uj1viC3V/ak5pZpPVqn68bxS7UfjSrUfWliq+hxfqv3QklKNR0KpxmN5qcYj
sVT9IqlU45+M8a8p1f4jpdSc1xt+UktVv9NKzf624TO91JxPGOwoNfuzBmeW
mvMKg7NLdb2QW2q+LzDvd5bq+qOoVP3AVar1UFmq9eAuVT/wlqof+8FHoFTr
IViqftCOeIRKtT86Dr67SnW9dQrx7y5VPT1bivovVb+9gPztBd+XS835jsF9
pWZ/1uAriEc/nne1VPuhAYznOuphEPVws1T70zCX9qcjXbo+CHfp+mCMS/uj
CJfGY7xL+8dIl/ZLk1xaH1G4PsWl/X60S/fzp7tU72Nc2q/PdKmexLqU3zku
s//XY+ofeJ7L7McaHIfnLXSpHsVjPEtc2P9z6f71cpfGI9Gl9Z3k0n4jGfFY
g3ikuLQ+Ul2q32ku1at0l9aLw6Xri0y8P9ulep/r0vxzujQ/i1ya3y6X2d8z
fFa6zH6HwW5gr8vsDxrsx/MCLl2vBV2qf+0u9YeQS/XyuEv7hy6XridPuXR/
qxt8nEU8ehCPCy7tn3pd6h+XUS99qKcreH8/8umqS/VmAPl53WW+FzD8DbrM
fp/BN11W2PDATf2XKR5ZpvEIL9PnjSnTfimiTPuj8WW6XxRZpuOfVIbz/zKt
hyllWg/RZerX08vUr2PK1C9mlql+x5Ypv3PK8OdPyrD/V6b6GFem+8kLy8z3
K3b9l6m+LynTfE8oM/tNBi8vM/7/c1P/wEmIR3KZOe82eE2Z+nlKmeZDapn6
c1qZ+kN6mfqDo0z3LzIx/+wy7f9yy9SvnWWq10Vlup/hAr+ViIe7TOvHW6bn
G/4y1ddAmfY3wTLVh/Yys59t+AqVmX7X8Hu8zPQHBncBn0I8usvMeZ553tky
c35t3teDfLhQpnrUW6Z6dLlMz3P6ylSPrmD+/aiHq2Xq1wOIx/Uy1adB1MdN
1EdYud4/slz7t/ByPT8ZU476L1d9GF9uzuMMjixXfieVGz08Z+ofeEq5Wd8Y
HF2u9TO9XOMdU65+MLNc959iy3V9Mqcc5//lup86D/OPK9d4LCzXeMSXazyW
lOv6LgH8Li/X9V4i7k8qV31MLle/XVOu/XlKufYvqeVmf8nwnVZu+jHDZ3q5
OY812FFu6s/gzHKjjwZnl2v95Jab82vzPmc5/L9c+yNXue6fVpbrebS7XOvB
W6714C9XfwiU63lPsFzXE+3l+P6vXP3ieLnqVRfuP1Wu/U438ulsufptT7n2
KxfKzfrC8NWL/L5sv/9npv6Br5Sbfs7c31+uenQV9TZQrvsZ18t1/T2I/LlZ
rnoaVqH+PLJC8y+8Qv1hTIWuhyIqNP/HV6geRVYo/5Mq1E+iKrQ/m1Kh+zfR
Faq30ytUj2MqzPrN8DOzQvmLtcdj+J1TYeJtsFWh+T8Pz4ur0PpaWKH1F1+h
648lFdoPJVSo/iyvUP1JrFD9SarQ/aTkCu1P11Tg/A98plZoPqchHukVej7k
qND+IBPzya5Qvc2tUD12VqheFIFvV4VZ/5819V9h9NRgd4WpX3O/F8/zV2j/
GqjQfitYoec57RWa/6EKzf/jFZr/Xcj/UxXaH3VX6PrzLPK/p0L94ALi0Yt4
XK7Q/ZC+Cu0PrmA+/RXm+xQz/6sVqi8DFaof18H3YIXZn/mpqf8Ko7cGh1Wa
+Zn7R1aaejXPC6+0hu+z+/9KXR9HVGo/Or5S+7PISu1PJ1WqH0RVaj1MqVQ9
iK5UPZpeqXoUU6nxmFmp8YitVH+Yg99bldrfzKtUfY+r1PxbWKn5GV9p6tHw
t6RS+U2oNP3gGVP/wImVxg/N/UmVWh/JlerfaypV/1IqtT5TK1Wf0ip1Pzu9
UvXVgflnVqo/Z1fqeU9upfqjs1L1qqhS/dqF+FTi927kh7fSfJ9oxu9H/gUq
Nd+D9vsNX+2VZv1j+AxVGj0wfB8H7kI8Ttn5Zp7XXan+fbZS18c9ldoPXahU
feqt1H75cqXqa1+lnq9dqVS/6Ec8rlaqXg1Uqn9cr9T+abBS+9mbiGdYle7v
jqzS/iK8yuzXGb0ZU6V6HVFlnmf4Hl9l8svwGVll+pOfmPoHjqoyfJj7p1QZ
PTDPi67SeE+v0v42pkrX2zOrtB5iq8z33/b+XxXO/6u0X51XpX4RV6Xr6YVV
+n1qfJXGY0mV7ocnVKmfLK9SvU+s0v45qUr7yeQq1Zs1Vaa+TH6mVJn6NXyl
2s8z/KZVme97DU63+THYUWX0wuBMPC+7yvR3hv/cKvUfZ5Wut4uQP64q3c+u
rFK/cCP/vFWqB/4qXU8HEI8g4tGOeISqsP9XpXrXVaV6f6rKfA9kxt9dZdbP
Zv5nq9RPe6pUTy5Umfo3fPZWmf6x29S/na8G9yEeV1A//VXqL1erdH08gPFe
r9L9osEq3f++iXoIq9Z6GFmt+xnh1br+GVOt/h1Rrft946s1HpHVqjeTqlXv
oqo1P6ZUW8PjMuOPrtZ+cnq16kNMtek3DF8zq01/YviNrTb+bfAcYKva5KvB
86pVj+Kq1Y8XVpv9ctv/Md4l1erPCdXqD8sx38RqnP9Xa/+UXK36tKZa1xcp
1ZrPqdXa36ZVq3+kV8P/qzU/Mqt1/ZNdrfmXW61+6aw2+WTytwj8uqrN+fKP
Tf0Du3G/t1r1yF9t+gXz/kC1rteCGG97ta5PQtWqp8ertX/tqtb15alqXU93
V2v/dLZa1xc9iMeFauz/VaufX65Wveur1vXlFeRXf7X2N1eRnwPI3+vV5nsi
w+9gtfk+xuCbwGE1Go+RNVo/4TUmn0y9janR9XNEjY53fI36Q2SN6tOkGtWn
qBr16yk1qk/RNRqP6TVaHzE1Go+ZNRqP2Br18zk16rdWjfrXvBrNr7ga7W8W
1mj/Em/Pz/C1pEb5Tagx53GnTf0DJ9aY809zf1KN1kNyjdFLE+81Nbq+S8F4
U2vUH9JqtF9Kr9H1jKNG15eZNaZfsM//EY/cGtUrJ+JRhHi4alRvKmvUb901
1nAe2ud/Ndpf+mtUbwI1mu/BGvN9heGvvcacLxh+QzVm//VHpv5rzPd/BnfV
mPMJc/+pGvPn4czzumvM/rKJ99ka1aMejPdCje6v9tbo/vdlxKOvRv3iSo32
T/01uh66ingMIB7Xa1SvBmtUb27ieWFu1c8RbuwHuNVfR7nN/r6tD25znmn4
G+1Wfse4zXr81DAeCxzhNvvf5v5xbnNebZ433q396wS3rpcj3doPT3Tr/sUk
t/bPd2C+UW7Vp8luXU9Mcat/T3Wrf0e7NZ+nuVVfpru1v7oTz4txq37OcGt/
OdOtfjjLrfkZ6zbnOYav2W6z/2T4nOM2+4eG7weALbc5bzb3z3Vr/cxza/86
3631GOfW9fICt9bDQrfq0yK36lO82xrOQ8PHYrfq8RK3+uNSt/pFglv9e5lb
1xfL3eofK9zqP4lurdeVyK8kt/rhKrfqdTLyfTX4XeM26z+D1wKn4P71bnM+
ZJ6X6lZ/2eTW9UaaW/vhrW7tV9Pd2j/vcOt+hsOtfp3h1v4p0636lOVWv8hG
PHLcuv+Ri/jkudV/nBhfgVv9rsh+v5l/iVv904V8L3eb/Q/DZ6XbrAd/OIyr
gd1usz9i7vdAj7xu7ad8bvUDv1v3m5qgnwG3rp9b3Xo+EXTr/sph1EM7+OpA
PYTc2s8ec6t/H4denUB8u1CvJ926/jyF/DsNfeiGfpwB/2fB9zm3WY8b3AP+
z7vN9x7meRfc2p9edOv+Rq9b9ysuQY8uu815h5nfW9CjPujR224977wCf3gH
/tDvVr9+F/VwFfg9t/r/gFvXV9fc2t9fh9/ecGu/Mgj+P4C+3ATfHwKH1Zr9
cHP/iFrN/5G1yv+oWuU/vFb5H12r65UxtZpfY2tVbyNqtT8aV6v8jK/V/dYJ
tarfkbXqpxNrtb+ZBHwHnh9Vq/xPrsV+ZK3W/9Ra832L4T+61pxHG/6m1Sq/
02vNfojBdwLH1Gq8ZtSqns2s1f52Vq32A7G16sezazX/54D/B2o1/61azf+5
4GdererPfPAfV6v6swB8LwReVKv1FV+rfrW4VvV1Sa32O0trtZ9PqFX/XFar
erO81uy3GrwCOBHxWlmr/WlSrfr9qlrd30uuNftjhv/Vtdq/rUF+ra3V/cSU
Wu3/1tfqeX9qrer1plr147Ra9eOtiEc68I5a9RsH8iUD88vE/LNqVZ+za1W/
c5DfubVmv/Ck8f9asx9irjsRr4Jac15knldUq+uBklrdL3WhXstrtR+qrNX1
QXWt9hvuWvVjD/jx1lpD/2v7sa9W+1N/rfpxU636QQC4FXoXrNX15OFaXe+0
g/8O8B+qVb89hvw+Dv5PgP8u8H8S/J8C/6drtR/urtX14Zla7Z/P1mo/dK5W
94964Afnwc8F6MVF+EFvrfrxJdTDZcTnLdRbH/Ll7VrdX7hSq+vbd6AP/dCP
d8H31Vqzf2vwe7XmfMPggVqzf25+fw3xvF6r67sbtdoPD9bqftQH8OObyK8P
oUdhHl0vj/DoenmkR+thlMca/p19PuhRfxjt0f3WMR7Vq7Ee9Z8Ij453nEf3
v8Z7dP4TPNqvRHo03yd6lO9JHrP+/sEwvsNj9kfM9SiP2S80eLJH4znFo34z
1WP+PLmpx2iP1us0j/bP0z26f3inR/UoxqPrgxngZ6ZHz/9nedQfYj3qD7MR
jzkerZcHPKp/FsY716P9zjzMf75H+5U4j+b7Ao/ZbzJ4ocesxw3/i4DjPea8
ydy/2KP+scSjerfUo/1AgkfrdZlH9Wi5R/evV3jU7xI9Wg8rUQ9JHl0vr/Ko
PiV7tF9ajXis8VhD/2vXy1qPrkdSPNrvrPeYP69k5pfq0f5+E/hJQ75vBb/p
HrP+M3iHx6zHDXagPjI86g+ZHu1vszy6v53tUT3K8age5Xp0PZ/n0e9jnKiH
AtRDkUf7pRKP6rfLo/sX5YhHJeql2oPvzzzaT3s86rdezN/nUb32I9+bwG/A
Y87XDG71mH7Y4KDH7N8afNhjzivM89o96scdGF8I/B8D/8fB/wnoUZdH/fkk
+D8F/k/DH7o9up96xqN+fRbXz3l0fdjj0X7uvEf3dy54tL+8CL3uRb5fAt+X
PWa90jWM3/KY/sDgPtTH26inKx7143c8uv/RD718F/O5Cj16D343gHq4hnq4
7tH12w2Pfg8ziHh84NH13E1c/9Cj/U5YnfrtiDrdzxxZZ74PNfk+qk71IrzO
rL8Nn6PrjP4ZPKbO1Of3h/HYOpMfBkfUmX7B3D+uzuynm+ePr1N/n4DxRdZp
PUzEfCbV6XrmjjpdL0TVaTwm12k8ptRpfUytU/2OrtN4TKvTfnY6rt9Zp+vF
mDr1sxl1qjcz61QPZtVpvsbWGX83/M2uM/E/MYzn1Bn/MviBOqOfBlt11nAe
mN/PrdP6mYf3z69TP4qr03pdUKf1sLBO/XlRHc5P67T/WFyn64clddq/Lq1T
/U6o0/XEMvC9HNdXIP6JdepnK+u0v0yqUz1YhXxPRj6vBt9r6ox+fm8Yr7Xz
w1xPQX2sr1N9SsX7N9WpH6TVaX+8tU73i9Lr1B92oB4cdapPGaiHzDr1i6w6
1e/sOu2fcsB3Lq7nIf7OOl1fFdSZ7xlNvRdBb0rqzPrb8ONCPpfb7zd8V9r5
cnwYV9vjMdiNeHhQT16831enfuCv0/64CXoUqNP929Y6XT8H67T/OIx6aK/T
84UO6FOoTv3iGPg+Dv06Uafrla463c88Cb09Bb05jXztBt9n6kx/bfg9a+fP
d4fxOeAexON8nVlvmudfqNN+6iL8qBd6dAl6dBn18Bb8oa9O/frtOt3fvoJ4
vIP66Ec83kV9XEX9vIf3D2D81+p0PXQd+X4DejIIPj+w/eWY8X97Pt8x/l9n
zg/N9TCv/n6E16x/zPNHerV/GuVVPwj3an822ovzf6/GY6xX4xHh1fOlcV6t
j/FerY8JXtXvSK/uf0/0qn9M8mr/ewfeH+XVep7s1f5jilfzcarX1JPJ12iv
0U/D5zSvySfD93Sv2Z8KGf/H9RivxmOGV/VqptcajpPhf5ZX1xuxXt2/m+3V
/ak5Xq3vB7zmz/8bbHnVr+d69fvUeV7Vi/le1e84r55HL/BqfSzE9UV4fzzG
v9ir/ccSr/rpUju+Jl8TwOcyr9Fbw/dyr+mvOo3/2/M1ONFr/ND8fiWen+TV
fmqVV9cbyV5dD6724vzfq+dpa1EPKcjH9V71i1Svfn+xyav+nebV/YOtXtWr
dMRrh1fXLw6MP8Or/Xim16w/jB5kIV+zwXeO1+wXdxj/t+drcB6uO/H7Ajy/
yKt6V+LV9bPLq+vBcq/uT1V6VV+rvdovub3q1x7Ug9ereu2DPvm9+v1rk1f7
qQDi1erV7zuCGP9h1Hu7V/20A/ka8pr9IpPPx7zmfNjwe9yuf4NP4HoX6uOk
V/3iFOJ/2qv9b7dX+9MzXt0/PevVfvUc5t/j1fOF815dD11APVxEPfRCny55
1b8vI15voR77vOq3b3u1v7kCf3zHa9YzJl/7kc/v2s8/avzfa85zDX7Pa/pF
gwfs/DP8X4OeXYcf3EB9Dnp1P/sDr+4P3oQ/f4j5h9WrHo2o1/3HkfVaD6Pq
tR7C65Xf0fXq12PqNV5j6/V8O6Jexz+uXvV2fL3pfw3/E+z3G/4j6zWfJ9Yb
/2s3/l9v8s/gO+o1HlH1qk+T69Wvp9Rr/U2t1/VBdL2uD6bVa/88vV77izvr
dT87pl6/55hRr3o0s17rYVa91kMs+J1dr/UwB/F6oF73F6x63X+cW6/roXn1
2k/Or1f/jKvXfF5Qb9bPhu+F9WY9d8T4P67H4/eL8fwliP/Sel1vJ9Rrv7as
Xs8jltfrenJFvfZHifXaH62sVz1KQj2sQj0kg9/VqIc1uH9tvdZjSr2ur9bX
q96m2vVk9GBTvepNGvJ7a73ppwzf6fXG3w3egesO1EtGvepRZr36cVa9rrez
67Vfy6nX883cel2v5dWrHzjrdf1cUK/9SRHqoQT14EI9lNdr/1qJ+6uRD+56
9TNPveqtt1712Ae98SOfm8B3wM7Hw8b/640+m+tBxO8w4tter+uLjnrth0Pg
/xj4Pw7+T6D+u8D/SfjBqXrdHzsNPrvB/xno0dl67W/P1Wu/31Ov68vz0NsL
0PuL0Ite5POletNPGb4v15v+xOC3EI8+W58N/28jvldQf+/Uaz/aj/G/W6/r
s6v12l+/h/ofgB9cgx5dr9f9sRuIxyD05QPo0c16XW99iPGE+XS/foRP9Xak
T/vDUT7N13Cf8jnaZ9ZHh4z/+0y/bvBYXI/A78f5VI/G+zT+E3y6XxTpUz+e
6FM/m+TT/Yo7fFr/UT71g8k+3b+Y4lN/nupTf4j2qT9M82k8pvtUz+70aX3G
+FRPZ/i0/57p03yc5VP9iAWfs31mvyho/N+Or8EP+Ey+Gmzh93N9Wk/zfOoH
8326Po7z6f7IAp+uzxb6tB4W+bQ/ivdpPSxGPJYgHkt9un5L8Gl9LEM8luP3
K3zaryX6dP9ypU/7vyTk4yqf6kky+Fxt89Fm/N+Ob6vxf1xP8Rn/Mb9fj3pI
9en6bZNP+7E0n/ZrW32qR+mohx0+7Y8cPl2vZfh0/yLTp+vnLPCZjXjkoD5y
8fs8n/Y7Tp/upxVAb4p8qs8lPrMfbPLV5TP9oOGz3Gf2L1uM//uMnweM/+O6
G7/3oB680DufT9fffuhRk88a+l97/R5APbT6dL0ZRD0chj61Ix4dqI8Q4nEM
enXcp+dZJ5AfXajnkz7tP05Bb04jX7uR32fA91mfWT83G//H9R78/jz84gLi
fxH12evTfuGST9fvl316nvYW6r8P9fC2T/uTK9Cnd3zav/b71L/f9al/X/Xp
ftR7Pt3PH0A9X4PeX4ce3IDeDIK/D2w+DL83bT83/H+I62ENWg8jGvT5Ixs0
/qMadH0W3qD5M7pB/WxMg853bIOe50Q0aD2Ma9D+ZHyD6tOEBl1PRzZoPzux
Qfc3JjXofsgdDbp+jGpQv53coPs3UxpU76c2qJ9Gg79pDZrv0xtMfJuM/+N6
TINZ75nfz8DzZzZo/Gc16H5fbIM5/zD5M7tB/WBOg/Z3DzSo/loN6s9zG7Qe
5jXo+mF+A77/a9B6WNCg+zsLEc9FDbq/E9+g66vFDaq3SxpMvRo9WNqg/pnQ
oHqyDHwvbzD9e6Px/waznjLXExGPlXh+EuK/qkH3i5IbdH28ukH7iTXIt7UN
ut5MaVB/Xt+g/WEq+NuEeKQ1qD5tRTzSG3R/eQfyw9GgeprRoHqb2aB+m4V8
z25QfckB37n28/3G/4GdiEcBnl+E95c06PrP1aB+XN6g6/dK5Fs19MiNevCg
HrwNun7wNahf+xvUr5sQjwD0rRX5EYSeHm7Q/ru9Qf22A/keQr4fA7/HG0w/
1WD8H7jLrj8Tr5MN6g+n8P7TDbp/2t2g++FnGsyffzF+cLZB9yvOQY96GnT/
4jzq4QLq4SL0qRf1cAnxuIznvdWg/WZfg/Y7b0NvrzRof/gO9KIf+f5ug9kP
MfxfbTDrJ8P3e8ADuP8a6uk6/OAG6nMQ+fNBg67fbyLfPoQehfm1Hxzh1/3U
kX6th1F+1ZNwv+rTaL/GY4xf62usX89TIvy6vhlnv8/wP96v/c0Ev+pFpF/5
m+g3+uwz/u83fl5v/B84yq/xmIznT/GrH0z1az8U7Vc/nuZXP5juVz2606/9
UYxf9y9m+LUeZvo1f2f5VU9i/apPsxGPOX71mwf82i9Yfq3nuX7V23l+1eP5
fs33OL/qyQI7nob/hX6zXvEa/weOR7wW4/lLEP+lft1fTfBr/S7zaz+33K96
tMKv+3eJfl0vrPTr+VqSX9dvq/w4/0d9rEZ9rPGr36z1635uil/7nfV+1dtU
v+r9Jr/qexr424r8TvcbPawz/g/sQLwy8PxMxD/Lr/1Qtl/XKzl+7edy/apH
eX4933CiHgr86g9Ffl2/lUBPXKiPcsSj0q96V+3XfsHt1/Mpj1/3z7x+1Xsf
9MYP/pqQ3wFbLwzfrcBB3H8Yz29H/DugjyG/9kPH/NrPHUe9n/DrfkWXX/vB
k34rbPiC8X/4w2nUQzfq4Yxfz3PPor7O+bVf6PFrv3Per353wa9+eBH89IL/
S+DzMvh+C/nfh3p5G8+/Av7f8et6pN+v68V3/bpffdWv6/v3/Np/DECPriFf
r0OPbsAfBuHXH/h1f+OmX/vfDzG+sEbV0xGN6ncjG7W/HNWoeh/eqPyNblR+
xzSafspj/B84otHsT5l4jcPzxzdq/U1oVH+KbNT92YmN2g9NalS9vaNR/SCq
UfujyY26nz2lUf15aqPqUXSj6tG0Rq2H6Y1aX3c26v5mTKOeV81oVL+b2aj9
yKxG1ftY8Dcb/M5pNPlQa/y/0ei3uW4hXnMbtR+a16j1N79R/SmuUfvRBY16
XrCwUfV2UaPuF8U3qh4tbtT1wpJGrYeljVoPCY3a3yxDPJYjviswvsRG1dOV
drwM/0mN2o+salS9SQZ/q8H/GvC/Fvyn4PfrEd9U8L+pUffn0hrVv7Y2aj+U
3qh+vKNR/djRqP1pBvI1s1H1Owv1kI16yGlUf8htVL/Pw/ic4L+gEet/8F8C
/l3grxz8V4L/alx34/ce5L8X/PuQ/37kfxPmFwD/rY3qx8FG9YPDjeoH7dCj
jkbtj0KN6s/HUA/HUV8nML4u8H8S/J9q1P2B0+C/G/ydAb9nwf855H8Pfn8e
/F8A/xeR/73I/0uY32Xw/xbyvw/5/zb4vwL+3wH//eD/XdTDVTz/vUbdPxxo
1POma426H3y9UfvxG43a3wyC7w/A9007H9zG/3E9rEn7oxFNGt+RTfD/Ju2P
w5u0fxvdpOuBMU3aj45t0n4ooknPb8Y1qV6Pb9L1wYQm1aPIJpz/N6k/TMLz
72jSfjmqSc+bJjfp/teUJu1HpjZpvkY3KZ/TmpTv6U3Gv2qM/+N6TJPWw4wm
je/MJq2/WU3an8U26X7V7CbtR+c0aT/0QJOuj60m3Y+Z26R6Ma9J62F+k/aT
cU3qzwuatD4WNmm9LWrSfi0e+bQY+bakSf1wKfI1ocn0g4b/ZfbzDL/Lwf8K
XE8E/yvBf1KT1t+qJu0Pkpt0Pbwa81vTpPtDa5u0H0oBP+ub1A9SUQ+bmrQ/
SmtSfdqKeKSj3nY0qV85mnR/M6NJ/TazSfv7rCbVm2zkc45dr9XG/5uMn1QZ
/0c8nIhfAeqrCPVX0qT+5GrS9Vh5k36PV9mkflDdpOtPd5Pu13lQD94m1W9f
k/75KD/i0QS9CjTp92OtTfj+D/l0uAnr/ybt7zugNyHwecweb6Xxf3s+Fcb/
EY8u1MNJxPcU6u809LEb+nkGfnAWensOetQDfs4jXy8gHhcRj17E4xLwZcT7
rSZdb/U16fr+7SbtP65Ab95BvvYj398F31ft+ZQb/0d8BvD7a4jvdejRDejj
IPTzA8zvJvTowyZd/4Q1Kz8jmtUfRjZrvzqqWdfP4c3qF6OBxzRrvMc24/u/
Zu3vxjWr3oxvVj4mNGu+RzYr3xObTT6VGf9vNvrtMv7frPGIatZ4TG7WepjS
rPGf2qx+HN2s6/VpzapH05u1P72zWc87YsDPDMRjZrPuX8xCPGIRj9nN2u/M
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
hed9GXgyxvMV8D8F/H8V/E/tVL35Wqfme7T9PqMvX+9UfZnWqfn+jU7rNhuR
Iw3f0zv131v+Zqf+e9h3Ih7f6tT6i+nU+r0L850B/r8NfmaCz7uBZwHfAxyL
592L983GeO7rVP2ZA/7vB/8PgP8Hwb8F/h9Cvs/tVP1+GPk+r1P//eVHOq2h
x08y/x78fMTjUdRfHMb/WKf2dwvAx+PgayHwE+B3EfCTuD8e+Cm8bzHG8zT0
ckmn9jvPdKrfLkW+PQu9SYDePNep/57dsk7V7+eR78s79d8ff8Hmt3kYr7D5
NfF4sVPXz4kY/0ud2t+ttPkxfvwy+EkCf68ArwJ+FTgZz3sN71uN8bwOvVxj
32/89g3o/Vrk25ud2s+kIN/XQd/XQ783gO9U8LvRHm9gGG/qtL6+/ODJ96MN
3typ/p7Wqf3xFujrVtT/NvCTDv62A+8A3gnswPN24X0ZGM9u1Gsm8n0P8j0L
+b4X+p4NfdkHfcmBfu8H37ng90CnlZz/t/QH724dxnl2vrcM44Od2k85Mf58
1HcB8q8Q/BSBv2LwWwJcivtdeF4Z9KYc46lAvld26nq2CvlejXyvgZ+64ae1
0HMP9LwO+e0F3/Wd1pJbL7+V0sPYZ+d72zBugL75Mf5G+HET/K4Z/ATAXwv4
bQVuw/1BPO8Q4n0Y4zmCem2Hvx6FvnYg3zuh5yHo+Xfgl8eg599FPh8Hv9+z
4234P9FpeW+p16/rDP4+9K0L4/8B6vsk+P8h+DoFPn8Evk/j+o+Bu/G8n+B9
ZzCen6K/OYt++mfQm3PQ959DX3qgL7+AvpxHvv/Sfr7J9wv2eA2/v7Lz49Aw
vgj8a9RbL8b/G/jxJejvb5Gfl8Hf78DvW8C/x/19eN4f8L63MZ4/Qi+vQO//
BH97B/X+Z/hpP/z0L8j3d5Hvf0W+X0V+/63TmjcUcMP3e7beG/x3vH+gU/c/
/gF9vYZ+45/g5zr4ex/4BvC/gAfxvH/jfR9Ab/6D/uYm9Oa/8LcPUe//Q76H
hazbatEz2fD9fyHrJ7fYmPgtw/eIkPL9kZDyPTKkfH80ZA3L/+FhPAr4YyGN
d3hI6/XjIa3v0SGt/0+E1A/HhJS/T4ZUP8YCfwr3R+B5n8b7xoU03z8T0nwf
H9J8/2xI9WZCSPXmcyH108iQ9i+fD6m+TAypvnwhpHoyyZ6P4feL9niPDOM7
gL+EeEeFtD/4cgjn/yHdT/xKSP1wCvj7KvidCvw13B+N530d75uG8XwjpOvX
6SHN92+GNN/vDGH9D75jwPdd4HsG8vvbyOeZIWt315lbbzT83h2yvjJEePsw
nmWPx+B7QqpnsciXe0PqB7NRD/eFVI/ngL/7Q6ofDwA/iPstPO+hkOrNXIzn
YeT7vJDq+yMh1df5IfXTR0PaL8aB78fA9wKbH8P34yHTvxq+F4LfJ0LWD9+P
vhXho8N4UcgaNxygYfxkSPvTeOTLU8ivxSHdv30a/CwBf8+A36XAz0JfEpDv
z0FvloXUn54P6X7B8pD2ky9AX1eEtH95EXwngu+XkN8rwffLIWvDUAANv0ng
9xU7/p3DeFXIOlz194bTjxv8asi6/t8LaX+Zat6XjHx5Dfm1OqT96euohzUh
rP8Rj7XAbwKn4PfroDfrQ+qvG1CvqRj/RuT7JuT7Zsw/DXxvgZ5sRX5vC5n+
0fCdDr63h8z6LTSMd4SsxcMJNox3hqxbP749oWHsQL7sQn5lwO92g59M1MMe
5HPW/+vaLOO1KLgg/oiKqKiAjYGBndj6iq5iYWI3dkuIooiii4kKFq0SAlIq
tt7t59LdISkoSHen795nz36Yv1/8jeveuzs7Z86cs3uB3wffbfA8PyjTfPMh
9PBRme4L2sLf20HvH6PeP8H9f4r++Bn8+3Pw3R58dwC/HcucdRX03+NluFPO
n+HO+H1d0I+7Ql9flOk8/yXq4Sv4RTc8j+7APcB3T/jb13jevaCH3sgzfXD9
35Q5abhJL9HyYl/ovV+Zc27pH7v//uB7APx7IPzjW/D9Hfj+vswplVtDP8OD
8no0/AN+34/Iuz9BXz8jn/4Cfn5FPfwGfn/H8/kDfJdB7x6et4/+GkDvIa4/
Qj6PkQ+T/Pfb/Reh73Loe3D++4zvIWXOlRWPe7bxPRT8DsuvP8jw8DKndcd6
qaQNj8DvGwm9jCrT+Xh07heWT8egH44Ff+PA73jgCXheE1FPk9D/J0MPU8p0
PzMV/j4N+Xw68ssM+Pmf+fUbHzPLnEqlhmv8z4K+Z0Pfc8D33DJn0nElxWR4
XplzbEX1rzT8F57vfPjjAtT335gP/oE+F4K/ReD3X/C/GMeX4Pyl6LfLkM+W
Y35agfy+skzn/VXw29X57zd/WQM+1sJf1uW/z/heX+bUKQnW+N4AvjeWOS9U
lF/TKMOb8vsxvBnPd0uZ7uu2luk+cBv8dzv0uQP5fCfqYRf4/g/HC56ev5un
flfJ03rc3VO/38NT/ezpqd9U9jQ/7uVpXqziKR97e5ZHTO/7eM6ClhUCMv73
9dRPqnrmf8bvfp7VY5zh/T2nWhYgMnyA5/SqkNNUe77VPNVLdU/ru4an/nug
p3nkIE/r4WDweQjwoZ72j8Nw/uGe1ltNT/VwhKd+f6Sn+jnKw/zvqd/U8rSf
HuOpvx/rqb8fB76P99RPaoPvEzyndPpWwyd6Tul/fz3J8Eme1tPJnuaBUzzd
/53qaf2f5mk9nO6pX5wBPs/0tF+cheNn4/w6nu7rz4EezvW0X50H/ZzvaX+9
wNN+d6Gn/nIR+L44ry/j+xLP6t34/p/nlFdUz3rT+6X59Ri/dT2n9O9CMcOX
eU7/4TekCjF8uaf9wsH1XuFpP7vS0/mmHurhKk/789Xwj2s89atrwfd1OL++
p/32eujhBuj9RujnJg/zf14/pvdbwHcD8H2rp35+G/R9O/R8B/i907P8Zfiu
/HoN343neY+n/eheT/et93ma9+4HPw+gHh6EPzXE83gIxx/G+Y94uk941NN5
6jFP883jns6rT8Dfn4Ten/I0Lz4Nf3kGfv4s/OS5vN8Yn897zpaKah5quJHn
9KxZcQPlGW7sOdeVGojhJp7246a43hc8zc/NUP8vwo9egl80h3+/DL5fwfEW
OP9VT/NXS9Tja57Or697Os+0gt7f8DQ/von6d8F3a/TLt8D32+D7nVwPxu+7
ntOlcQWjht/znIqwWr/q4Ay/D79qg+v9wNN91Ieo/4/gR23hR+083Qd/DH1/
guOf4vzP0G8/Rz229zTPd/B0H9YReaYT/KYz9N7F07zYFXr/Av7yJfT9Vc6X
4W7gu7vnVFzt5JsM98jvx/jvifr8Gvrqhfrv7en3AX3gR994ur/oC333w/H+
OH+Ap/uogZ7uK79FvvkOfv897mcQ8sYP8Pcf0U9/gr//DD//BX7ya64nw7+B
7989p+JtQ3qBGf4Dz7MMedSDvnxP3xcE4CdEPo/AZwx9J55+/1HE+eWe7i8H
e7q/GeI5Uyrs5GLzm6Gezq/DkN+HI7+PQH4cCb8ZBb8ZDb2Pgb+MBd/jPNun
Gh7vOSX51RiS4Qnwr4moz0noZ5OR96aAn6nwi2non9PRL2bg+J84f6an76dm
YZ6aDb+ZA/+cC73Py39ePv8jz8yHHywAP3/DX/7Jr8f4XQh+F+V6M/yv55Ts
eobhxZ6zpl9FAdjPWwJ9LEUeXYb5cjn6wQrko5Xon6ug79U4vgbnr0W9rUO+
XI88vwHz00bczybofTP635bc34zvrXm9GT/b4OfbPacUHyYa3uE5pXK+3fjd
mevX8C7PebN0wUMz/B/8quBrHtjNV31V8jUP7e6rPvfw1Y/29FXPlX3t13vh
eBVf89XevtbbPr7uD/b1nZL7jDT+q/rqN/v5up/Z39e8d4Cveq/mq79X91Wf
NXzV+4G+6cH4PchXfR/smz8a34f4zoTSuGn4UPy8w3ztR4f7qq+avubtI3zV
55G++tFReB5H+9qva/mq92N83ecc62u/Pc7XfHm8r35T29f3Gyf4mm9O9NVv
TvLV30/2dT46xVd/P9VXPz/NV3853Vd9n+Gbfxg+03deqYi3cw2f5Wv9nO1r
/qrj6z7wHF/991xf8+B5qIfz8TwugL4v9HV/eZGv+epiX/vtJb7Oh//zNd9c
6us8VdfX+fIyX/Pk5b7ToMKu3za+HV/zzBW+5T/j50rf8ojhetD7Vb5zUqng
jN+rwfc1vlOr4mqPHpbha1E/1/na/+v7+v7yel/z3g3woxtRDzf52h9uhr5v
wfEGvs5Xt/q6z7nN1/nwdvjNHb7uD+6Enu7yNU/e7Wt/vcfX/nqvr3nxPl/9
/X7o/QH4y4Pgu2GuH8MP+dofHsb1PYL7e9TXfvwY/Ohx1MMTeB5PQt9P+bq/
fBrnP+Nr/n0W9ficr/nmeV/zTSPoqbGv/bWJr/NqU+j9BV/zTDPo/UX4y0vg
u7nvNCkJxvDLvnNoSXCGX8Hza+HrPPAq7q8l+vFrPuZ/+HUrX9+HvAF9vwns
op5ao97e8nWefRt+846v+eZd+M176K/vQ+9t4O8f+E72usL4/hD+8pFvedpw
W+i7Xd4/h2f447x+DX+CevkU9fgZ6vlz9OP20GcH+HVHX/NqJ+SZzsBdUE9d
UW9f+Doffom89hXyTTfkm+6+zk89fM2TPaH3r/O8ZbhX3v+Nr97guw/4/sa3
fG24b57XDPdDvfRHPQ5APQ9E/X+LPPgd/Pp76HkQ6uMH4B9RTz+h3n5GvvkF
ee3XvN5M77/Bb35HnvwD+a8M/u5B7z74CuAnIfiOcr5GZDj27X2P4cS3fYmd
X/R1Hij3dR84GP14CPLgUF+/Xxrm6/5uOOpjBPBI1NMo1NtoX993j8H1jfV1
nhqHeh6PPDkB+W8i+uEk6H0y9D7Fd0rxprbxPRX6nga+p/tORTUfNMjwDJz/
J/Qw09d91CzU/2xf911z4Ndzoed5qI+/gOf7uu9YgHr7G374D65vIfL8Il/n
13/RXxcj/y1BP1wKvS+D3pdD7yt8p2HpPxi/K/P5xPAq3ym9bVpteDXOXwM9
rEX/Wof6X488uMHXfdhG6HkT6mMz8Bb4/Vb0223ww+24vh3orzuh9124v/+Q
ZwqB6n23QPNLpUD52j1QvvcI7HoN7xmYX4zMcOXA5hXDewXqT1UC9b+9Aye7
LruffQLNG/sG+v66aqDvt/cLVM/7B7q/OQC4Gs6vHug+p0ag+ebAQPvrQYH2
14MD1fshger90ED3A4cFqvfDA+2nNQOnovpbLDV8ROBULg3Yxt+RgbOrotzq
GL9HBU7fCnk1M3x0YP5huFag9XFMoHo4NtD58LhA88bxgfaD2oH69QmB6vnE
QPv1SYHWy8k4/5RA6+3UQP3mNFzf6YH21zMC1fuZgfr7WdD72dB7Hej9nED9
/Fzo/bxcL8bv+eD7gsDpXnH6haMyfGGgfnRRoP3+4kD3IZcEmjf+F2g/uDTQ
/Xtd6PmyQPv15cBOoH52RaDzx5WB7m/qgf+rAs3zV4P/a6Cva8H/deC/Pvi/
HvzfAP5vhN5vCpybs4ac4ZsDm2eN/1vgTw0CnQduDXQfclugeeN26PMO+NGd
gfbnuwLd39wNfA/OvzfQ/fF9gfr9/fCbBwLN8w/CTxvCbx6C3zwcaH99JNA8
8yj84jHw9zj4fiJwNlXc/kbDTwb2/tn4fwrP6+lA57lnAu1fz6L+nws0Dz4P
P2qEemgMfTcBborzXwh0f9kM/ehF+M1Lge5rmsNvXoa+XoHeWwQ6n76K/toS
en8N/fR18N0KfL+R69Xwm/AnN9B82xr96y3o7+1A8+A78KN3A82P7wW6r38f
x9vg/A/Qbz+E33wU6LzSNtD9ZDvo/WPo/RP010+h988Czeufg+/24K9D4FxT
atDGb8fAWVWSp+FOuZ+OznBnPJ8uqL+u0NMXge7nvoQ+vwr0+45uge7nu4Pv
HjjeE+d/Hej+shf6Ue9A37f2gd98A733DZwRFeuth+3++gXOk6V/jO/+yIMD
0B8Hor9+Cz//Dnx/HzidKujZbnhQ4JTk+4bx/wPq4UfU30/oXz+j/n8JNI//
in7wW6D5/Xfw/Qf8pizQ988e+q0f6DwVQB9hoPuyCP01ht8k6K9F+E05+B8M
fx8C/Q7Nr9/wMOh9eJ7fDY/A/z8S1zMKeXl0oPuUMfCHsegH4wJ9PzIefE9A
vp+I8ycFus+ZHOh+akqg+8qp8Ptpgb7/mB7ovmVG4JTo7ZfP/8g3M9FfZ4H/
2eB/DvicGzil8q1rfM8D/3+hPubjehYE+n7t70Dny3/gDwuRVxYF+v7gX/j7
YvjNkkDf1y6F3y1Dvlwe6L5yBfx+ZWD7O+N7Ffx+NeapNZin1mKeWge/Xw+/
3wA+N+Z6Mr435fwY3oznswX+txV5eRvqf3ug7zd2wI92Ir/vgr/8B70XQp0v
dgu13iqF6ve7h+o3e4TqN3uGqvfKodb3XqHyXSVUv9k7VL3vE6re9w2V76qh
+vt+ofK9f+iULrfemAwfgOPVQs231UN9v1MjVP0dGKo+DwrVjw4ONR8dEmp9
HBqq3g8LtZ4OD3V/WTNUvzki1P38kaHmm6NC1fvRoeabWrjfY0LV+7Gh6v24
UPV+fKj+XjtUfzkhdErjSCXj+8TQKV3eu4ZPyvkxfDKe/ymh+uepoebR00J9
X3Z6qPPBGaHWw5mh7i/Ogt7PDrWe6oTq9+eE2o/OhT7OCzU/nw+9XxCqv18I
vi+C3i8G35eA7/+B70vBZ13wfVnoTKv4dVXGZvjy0Mns3o47oearK3A/V4Z4
/x9qHrwq1P371aG+j7om1Pn5Wjyv60Kn9O88X9UPdZ69PlQ/vCHUefHGUPfp
N4XqpzeHOj/dAr4bhLqfuRX+chv4vh1835Hry/Cd4Puu0DmhZHiG7w6dVqUb
NHwPfv+9uJ/74Lf3hzp/PoB6eDDUea0h9P0QntfDofb3R+A3j0Lvj4WaJx8P
NT88AX95MtT56Snc79Oh5pdnQu2fz4Lv56Dv5/N6Nz4bge/Guf7GZbhJ7td2
vCme9wvwy2ahvp94EX70Evy6OfT8MvrFK6G+L2kRan9/NdR5qiX0/lqo88rr
oeb3VqHmxzeg9zdDnX/cUPNIa/THt8D329D3O+D73dBpXiLI+H4vdIaV/vzc
8Pt5vzPcBs/7A/jlh6HOkx+FOv+0BX/tUA8fg+9PQt0nfIp6+izUPP95qPNr
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
6Rlukth+xXDTxL7Hsf//BfhRs0Tz0Yvg5yXUQ3P498sJ5n/ovQX8/VXUW8tE
8/Zr4Pt1+Hcr+Mkb4PtN8O3Cn1uD77fgF28n9vd9ht8B3+8m9n2g8fteYn+v
YPj9xN7XGW6T2Pxp53+A/vEh8sBHie6P2sIv2iWalz5GfvkEev8U/v5Zonnw
c/DdHvruAH13BN+d4NedE/sezO63C/jtCn6/AD9fJpanjb+vwGe3xL63Mdw9
se9ZDfdIbH9juCfO/xp+1Av31xv13yfR+eUbPI++ic77/RLdb/WHvw8A3wMT
zdffwh+/Q3/8Hv4xKLG/3zD8A/ziR/D7E/j9ObHvyQz/ktj7IMO/JvZ9jeHf
EpsnDf+eWP6ekeE/Evs+x3AZzvdQTz7uL0A9hNBrhHwSIz8lOF5EfykH34OR
R4bAP4Yizw2DfoZDzyPgvyPhD6PA72jwMwb8jgW/4xJ7P2d4fGLffxiekNj8
Y3ginsckPP/J8McpyMdTE50Xp2HemQ59z8DxP5F3Z0Lfs8D3bPA9B3zPhb7n
of/9Bb7nJzaPG14Af/g7se/5DP8Dvhcm9j2Z4UXg99/EvmcwvDix72cNL8Hz
Wop6W4Z+tBzzyArkvZXQ8yrkl9U4vgb1tBb9fx2e/3rwvQH63gi+N8FfN0Pf
WxL7vtzwVvC7DfxuB787wOfOxN6XGN6VOIVMaBn+D7hQlPPdFMvz360o+chN
sfBTqSj90E2x5KXdi8K3m2Kplz2K4jduiqX/71kU/3ZTLPquXBT/dlMs9btX
Ufqhm2Lhu0pR+HZTLHrcu2jf69nxFGfzvB3fpyh8uynO9pPG775F+74xwy5w
oWrRvo+y81Ms/rZfUfqBm2LJE/sXJe+5KZb96gFF8Rc3xVIv1YrS390Ui79U
x/OvrnwXaijfborFTw4sin+7ByrfhYOUbzfF4hcHg98UZ/sT4++Qos33xm+K
s/nfjh9atHnfjgMXDsP5KZZ6O7wofummWPyoptaDm2LpD0egPo5QvReOLMr+
xD1S+S4cVZR+6aZY/PForVf3aOinlt6PWwv8HgN+j4F+jy3aftH4ORb8HVe0
/ZcdT3G2L7fjxxftfbodBy7Uxvm11Y8KJxQlv7onoP5PLErec1MseeUk6DvF
0l9PxvknQ9+nFMW/3VPgj6cq326Ks/dzdv2nwT9OU74Lpyvfboqzfazxc0bR
3v/Z8RRn79/s+JlF26fY8RRn8/7M7PhZRXtfkWEXuHA2nk+KS/897w91itL/
3Trg5xytB/cc1XPh3KLMQ26KJc+eB38/D/59flH6pXs+9H0B9J1i6Y8XQt8X
Qt8XqV+4F6keCxernt0UZ/tG4++Sou3Ljd8UZ/sXO/6/os3/djzF2b7Mjl+K
8y/VeivUVT25ddWPCpcVZR/iXqZ6LlxelPzoXo7+6uB8B/5yhfZL9wro+0rl
270S/bGe6smth/u7Cvq+Cv5xtfLtXq18Fa5Rvt0UZ/sVO35t0fYxdhy4cB2e
z3XoH/WLMj+49dHfri9K/nOvR/+8Af6SYsmTN+L8GzWvFG6Cv9yEfHKz+rl7
M/zlFuSPW3B/DdRP3AbQ963wj1uh79uUbzfF2b7Fjt+u2AUu3IHz71A9FO6E
f96p/aBwF/LfXeonhbuLsm9x70b/vgfn3wN/v7co86F7r15P4b6i/b2BHb8P
+eR+9M/74S8PwH8fgD8/WLR9rfHzIPyjYdHeh9jxFGf7LTv+kGI3xdl+zI4/
jOfzMPrLI7i/R5CfHy3Kvs99FPnlsaLMS+5j6jeFx3H+49pvCk/A359APngS
/vKk5rnCU8h/T8FfntZ+6T4NfT8DfT4D/T6rfLopzva5s7LjzxVt/5VhF7jw
fNHeN9n5z6N/N0I+aKR6LDTGfNMY/blJUd4/uE1wvCnOb4r8+wLmwxeg72bQ
dzPU74vQ94vw75fA70vgtzn4bQ5+Xy7aPtH4TXG2z7XjrxRt/2XHgQstirav
tOMtUF+vQj+vov5boj+2RH9+Dfn9NeSb1zEfvY6f3wr6boV8+Aby8xuaBwtv
Il+8if7oFu37Tzue4ux9hvHTGvptrXwV3lK+3RRn70fs+NtF2zfa8RRn+2I7
/k7Rvs+w4+/g+b+L/vSu+lHhPczv76F/vo/8/j76d5ui/X2end8G+eUD1N8H
mH8+RD78EPX7Efz7I+SPtvDnttB3u6J9f2D8tAP/H4P/j8H/J+D/E/D/Kfj/
FPx/hvv7DPx/Dv4/B//tNU+67cF/B/DfAT+/I/JLR/hLJ1xfJ/DfGfx3Bv9d
wH8X6L8r9N8V/H8B/r8A/1+Cf+DCV+D/K/DfDfrvBn66g//u4L8H9N8D/PcE
/z2h/6/B/9fgvxf47wX+e4P/3uC/D/y9D/T/DfSf4uz9tx3vC3/vC377qd7d
FGf7eDveX5+X2x/5aQD61wDd1xUGYj4biHz6rfLtfqvzbOE7nP8dfv736vdu
irPvKYz/QZiPBqG//qD9zP1B/b7wo+rd/VH7aeEn5dv9SfVa+Bn6TnH2/tqO
/1K097Wzs+Mpzt5/ZLjwqz4P91fk099wf78hf/yOfPi79tPCH9gf/IHnUwb+
yzA/ecg3Hvj3sX/xkd8DzJeB5vVCiPwXIh9GyDcR8k0M/4jh74k+DzfR51Eo
oj6K4L8c/JeD/8HgfzDmpyHIl0PA/1DwPxT8DwP/w8D/cPA/HPofAf2PgL+O
hP5Hqt8URiEfjkJ+HA3/GA39jwH/Y6D/sdD/WNVDYRz4Hwf+x2N/Ph76nwD+
J4D/iZhvJ6K/TMJ+fBLm18nw/8nw/ynYz0yB/0+F/0+F/0+D/0+D/0+H/0+H
/8+Avmfg+fwJ//oT/j8T/j8T+9FZ0O8s6H82/H82+vMc9O856L9z0X/nIn/O
Qz6Yh/3NX+i/fyH/z0f+mY/8swD5ZwHyz9/IP38j//wD/v9B/12I+lkI/heB
/0Xoj/9Cv/9C34uRPxcj/yxB/lmC/cJS5P+l2J8tUz9yl2H+Wo792XLMlysw
f61A/a/UenBXoj+vQn9ehf68GvyuRn2sQf2sgT+uRX2vhT+vA//rwP966H89
9L8B/G8A/xvB/0bwvwn8bwL/mzH/bgb/W8D/Fuh/K/S/FfrfBv1vg/63w1+2
oz/vQP/eAf3vhP53Qv+74D+74D//wf+B0wav/KdY+N+tXPlPsfBfqVz5T7Hw
v3u56j/Fwv8e5cp/ikX/e5ar/lMs+q9crvpPseh/r3LlP8XCfxX9/90UC/97
lyv/KRb+9ylX/lMs/O9brvpPsfBftVz3+ymW97P7gf/9wP/+5er/KRb/P6Bc
/T/F4v/V9H7dasp3oXq59t/qynehRrn6Rw3lu3Cg8u2mWPz/oHL1pxRL/jxY
9eSmWN//l2v+SbHspw8t1/wPXDgM+k+x9N/Dy7X/pljm35rl6o8plvxzRLnm
nxTn+ef/Fnt9nA==
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 8759.}, {0, 0.454}},
  PlotRangeClipping->True,
  PlotRangePadding->{{175.18, 175.18}, {0.009080000000000001, 
   0.009080000000000001}}]], "Output",
 CellChangeTimes->{{3.6046768611524487`*^9, 3.604676877657278*^9}, {
  3.6046771997234845`*^9, 3.604677210497101*^9}, {3.6046772423469224`*^9, 
  3.604677305442531*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6046771882268267`*^9, 3.6046771884968424`*^9}}],

Cell[BoxData["firstStage"], "Input",
 CellChangeTimes->{{3.6046825566226854`*^9, 3.6046825576217422`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6046853862805324`*^9, 3.6046853871245804`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"wData", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.6052216819407206`*^9, 3.605221702412892*^9}}],

Cell[BoxData[
 RowBox[{"{", "8759", "}"}]], "Output",
 CellChangeTimes->{{3.6052216907202234`*^9, 3.6052217028379164`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6052214083830743`*^9, 3.605221410473194*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"[", 
   RowBox[{"r1", ",", "r2"}], "]"}], "=", 
  RowBox[{"StageMinimize", "[", 
   RowBox[{"100", ",", "initBatt"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.605221465349333*^9, 3.605221485186467*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Syntax", "::", "sntxb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Expression cannot begin with \
\\\"\[NoBreak]\\!\\(\\(\\([\\(\\(r1, r2\\)\\)]\\)\\) = \
\\(\\(StageMinimize[\\(\\(100, initBatt\\)\\)]\\)\\)\\)\[NoBreak]\\\"\
\[NoBreak]\\!\\(\\\"\\\"\\)\[NoBreak].\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.605221489207697*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Syntax", "::", "tsntxi"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\\\"\[NoBreak]\\!\\([\\(\\(r1, r2\\)\\)]\\)\[NoBreak]\\\" \
is incomplete; more input is \
needed.\[NoBreak]\\!\\(\\\"\\\"\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.605221489283702*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Syntax", "::", "sntxi"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Incomplete expression; more input is needed \
\[NoBreak]\\!\\(\\\"\\\"\\)\[NoBreak].\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6052214893587055`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$re", " ", "=", " ", 
  RowBox[{"StageMinimize", "[", 
   RowBox[{"100", ",", "initBatt"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.605221550329193*^9, 3.605221559825736*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6019.100777555626`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xGB", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xGC", "\[Rule]", "40789.859518264806`"}], ",", 
     RowBox[{"xRB", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xRC", "\[Rule]", "2364.1404817351918`"}], ",", 
     RowBox[{"xRG", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xBC", "\[Rule]", "10.`"}], ",", 
     RowBox[{"xBG", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGB1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGC1", "\[Rule]", "42670.71358821998`"}], ",", 
     RowBox[{"yRB1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yRC1", "\[Rule]", "2295.2864117800195`"}], ",", 
     RowBox[{"yRG1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yBC1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yBG1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGB2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGC2", "\[Rule]", "42720.35679410999`"}], ",", 
     RowBox[{"yRB2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yRC2", "\[Rule]", "1147.6432058900098`"}], ",", 
     RowBox[{"yRG2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yBC2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yBG2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGB3", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGC3", "\[Rule]", "43452.178397054995`"}], ",", 
     RowBox[{"yRB3", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yRC3", "\[Rule]", "573.8216029450049`"}], ",", 
     RowBox[{"yRG3", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yBC3", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yBG3", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6052215601397543`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\"\<t\>\"", "/.", "$re"}]], "Input",
 CellChangeTimes->{{3.6052215623148785`*^9, 3.6052215978089085`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "rmix"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Elements of \[NoBreak]\\!\\({6019.100777555626`, \
\\(\\({\\(\\(xGB \[Rule] 0.`\\)\\), \\(\\(xGC \[Rule] \
40789.859518264806`\\)\\), \\(\\(xRB \[Rule] 0.`\\)\\), \\(\\(xRC \[Rule] \
2364.1404817351918`\\)\\), \\(\\(xRG \[Rule] 0.`\\)\\), \\(\\(xBC \[Rule] \
10.`\\)\\), \\(\\(xBG \[Rule] 0.`\\)\\), \\(\\(yGB1 \[Rule] 0.`\\)\\), \
\\(\\(yGC1 \[Rule] 42670.71358821998`\\)\\), \\(\\(yRB1 \[Rule] 0.`\\)\\), \
\\(\\(yRC1 \[Rule] 2295.2864117800195`\\)\\), \\(\\(yRG1 \[Rule] 0.`\\)\\), \
\\(\\(yBC1 \[Rule] 0.`\\)\\), \\(\\(yBG1 \[Rule] 0.`\\)\\), \\(\\(yGB2 \
\[Rule] 0.`\\)\\), \\(\\(yGC2 \[Rule] 42720.35679410999`\\)\\), \\(\\(yRB2 \
\[Rule] 0.`\\)\\), \\(\\(yRC2 \[Rule] 1147.6432058900098`\\)\\), \\(\\(yRG2 \
\[Rule] 0.`\\)\\), \\(\\(yBC2 \[Rule] 0.`\\)\\), \\(\\(yBG2 \[Rule] \
0.`\\)\\), \\(\\(yGB3 \[Rule] 0.`\\)\\), \\(\\(yGC3 \[Rule] \
43452.178397054995`\\)\\), \\(\\(yRB3 \[Rule] 0.`\\)\\), \\(\\(yRC3 \[Rule] \
573.8216029450049`\\)\\), \\(\\(yRG3 \[Rule] 0.`\\)\\), \\(\\(yBC3 \[Rule] \
0.`\\)\\), \\(\\(yBG3 \[Rule] 0.`\\)\\)}\\)\\)}\\)\[NoBreak] are a mixture of \
lists and nonlists. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/rmix\\\", ButtonNote -> \
\\\"ReplaceAll::rmix\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6052215799508877`*^9, 3.6052215983459396`*^9}}],

Cell[BoxData[
 RowBox[{"\<\"t\"\>", "/.", "\[VeryThinSpace]", 
  RowBox[{"{", 
   RowBox[{"6019.100777555626`", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xGB", "\[Rule]", "0.`"}], ",", 
      RowBox[{"xGC", "\[Rule]", "40789.859518264806`"}], ",", 
      RowBox[{"xRB", "\[Rule]", "0.`"}], ",", 
      RowBox[{"xRC", "\[Rule]", "2364.1404817351918`"}], ",", 
      RowBox[{"xRG", "\[Rule]", "0.`"}], ",", 
      RowBox[{"xBC", "\[Rule]", "10.`"}], ",", 
      RowBox[{"xBG", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yGB1", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yGC1", "\[Rule]", "42670.71358821998`"}], ",", 
      RowBox[{"yRB1", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yRC1", "\[Rule]", "2295.2864117800195`"}], ",", 
      RowBox[{"yRG1", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yBC1", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yBG1", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yGB2", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yGC2", "\[Rule]", "42720.35679410999`"}], ",", 
      RowBox[{"yRB2", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yRC2", "\[Rule]", "1147.6432058900098`"}], ",", 
      RowBox[{"yRG2", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yBC2", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yBG2", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yGB3", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yGC3", "\[Rule]", "43452.178397054995`"}], ",", 
      RowBox[{"yRB3", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yRC3", "\[Rule]", "573.8216029450049`"}], ",", 
      RowBox[{"yRG3", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yBC3", "\[Rule]", "0.`"}], ",", 
      RowBox[{"yBG3", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]}]], "Output",
 CellChangeTimes->{{3.6052215799518876`*^9, 3.60522159834894*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"new", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", 
    RowBox[{
     RowBox[{"Dimensions", "[", 
      RowBox[{"wData", ",", "1"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Print", "[", "i", "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"firstStep", " ", "=", " ", 
     RowBox[{"StageMinimize", "[", 
      RowBox[{"i", ",", "initBatt"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"new", " ", "=", " ", 
     RowBox[{"Append", "[", 
      RowBox[{"new", ",", 
       RowBox[{"firstStep", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"initBatt", " ", "=", " ", 
     RowBox[{"initBatt", "+", 
      RowBox[{"(", 
       RowBox[{"xRB", "/.", 
        RowBox[{"firstStep", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "+", 
      RowBox[{"(", 
       RowBox[{"xGB", "/.", 
        RowBox[{"firstStep", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "-", 
      RowBox[{"(", 
       RowBox[{"xBC", "/.", 
        RowBox[{"firstStep", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "-", 
      RowBox[{"(", 
       RowBox[{"xBG", "/.", 
        RowBox[{"firstStep", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"secondStep", " ", "=", " ", 
     RowBox[{"StageMinimize", "[", 
      RowBox[{
       RowBox[{"i", "+", "1"}], ",", "initBatt"}], "]"}]}], ";"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.6052216041312704`*^9, 3.605221606343397*^9}, {
  3.6052216405633545`*^9, 3.605221650732936*^9}, {3.6052217082812276`*^9, 
  3.6052218261289682`*^9}, {3.6052218730646524`*^9, 3.605221935228208*^9}, {
  3.605221978237668*^9, 3.6052220375580606`*^9}, {3.605222145640243*^9, 
  3.6052221629912357`*^9}, {3.605222205833686*^9, 3.6052222194374638`*^9}, {
  3.605222264879063*^9, 3.6052222793138885`*^9}, {3.605222605599551*^9, 
  3.6052226163581667`*^9}, {3.605222647735961*^9, 3.6052226537193036`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\($Failed\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.605222760914435*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ToExpression", "::", "notstrbox"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(DateString[\\(\\(\\(\\({\\(\\(\\(\\({\\(\\({\\\"20100101 \
00:00\\\", 0, 405, 10072, 10299, 10193, 107, 197, 82, 537, 77, \
\\(\\(-9\\)\\), 340, 188, 245, 81, 390, 245, 151, 103, 262, 43, 32, 7, 223, \
6, 209}\\)\\), \\(\\({\\\"20100101 01:00\\\", 0, 408, 10076, 10301, 10191, \
125, 209, 77, 540, 50, \\(\\(-20\\)\\), 340, 186, 242, 70, 379, 242, 148, \
102, 262, 43, 47, 7, 218, 6, 215}\\)\\), \\(\\({\\\"20100101 02:00\\\", 0, \
411, 10075, 10303, 10193, 142, 223, 43, 534, 59, \\(\\(-20\\)\\), 340, 186, \
239, 70, 379, 239, 146, 100, 261, 40, 45, 6, 234, 7, 201}\\)\\), \\(\\(\
\[LeftSkeleton] 46 \[RightSkeleton]\\)\\), \\(\\({\\\"20100103 01:00\\\", 0, \
406, 10068, 10304, 10190, 134, 210, 71, 531, 55, \\(\\(-9\\)\\), 340, 189, \
244, 70, 392, 244, 150, 103, 262, 42, 38, 7, 207, 6, 196}\\)\\), \\(\\(\
\[LeftSkeleton] 8709 \[RightSkeleton]\\)\\)}\\)\\) \[LeftDoubleBracket] \
\\(\\(8760, 1\\)\\) \[RightDoubleBracket]\\)\\), \\(\\({\\\"Year\\\", \\(\\(\
\[LeftSkeleton] 5 \[RightSkeleton]\\)\\), \\\"Minute\\\"}\\)\\)}\\)\\), \
\\\"Month\\\"\\)\\)]\\)\[NoBreak] is not a string or a box. ToExpression can \
only interpret strings or boxes as Mathematica input. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ToExpression/notstrbox\\\", ButtonNote -> \
\\\"ToExpression::notstrbox\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6052227610384417`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\($Failed\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.605222761094445*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"DateString", "::", "arg"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Argument \[NoBreak]\\!\\({\\(\\(\\(\\({\\(\\({\\\"20100101 \
00:00\\\", 0, 405, 10072, 10299, 10193, 107, 197, 82, 537, 77, \
\\(\\(-9\\)\\), 340, 188, 245, 81, 390, 245, 151, 103, 262, 43, 32, 7, 223, \
6, 209}\\)\\), \\(\\({\\\"20100101 01:00\\\", 0, 408, 10076, 10301, 10191, \
125, 209, 77, 540, 50, \\(\\(-20\\)\\), 340, 186, 242, 70, 379, 242, 148, \
102, 262, 43, 47, 7, 218, 6, 215}\\)\\), \\(\\({\\\"20100101 02:00\\\", 0, \
411, 10075, 10303, 10193, 142, 223, 43, 534, 59, \\(\\(-20\\)\\), 340, 186, \
239, 70, 379, 239, 146, 100, 261, 40, 45, 6, 234, 7, 201}\\)\\), \\(\\(\
\[LeftSkeleton] 46 \[RightSkeleton]\\)\\), \\(\\({\\\"20100103 01:00\\\", 0, \
406, 10068, 10304, 10190, 134, 210, 71, 531, 55, \\(\\(-9\\)\\), 340, 189, \
244, 70, 392, 244, 150, 103, 262, 42, 38, 7, 207, 6, 196}\\)\\), \\(\\(\
\[LeftSkeleton] 8709 \[RightSkeleton]\\)\\)}\\)\\) \[LeftDoubleBracket] \
\\(\\(8760, 1\\)\\) \[RightDoubleBracket]\\)\\), \\(\\({\\\"Year\\\", \
\\\"Month\\\", \\\"Day\\\", \\\" \\\", \\\"Hour\\\", \\\":\\\", \
\\\"Minute\\\"}\\)\\)}\\)\[NoBreak] cannot be interpreted as a date or time \
input or as a date string format. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/DateString\\\", ButtonNote -> \
\\\"DateString::arg\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6052227611824503`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(DateString :: arg\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.605222761214452*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ToExpression", "::", "notstrbox"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(DateString[\\(\\(\\(\\({\\(\\(\\(\\({\\(\\({\\\"20100101 \
00:00\\\", 0, 405, 10072, 10299, 10193, 107, 197, 82, 537, 77, \
\\(\\(-9\\)\\), 340, 188, 245, 81, 390, 245, 151, 103, 262, 43, 32, 7, 223, \
6, 209}\\)\\), \\(\\({\\\"20100101 01:00\\\", 0, 408, 10076, 10301, 10191, \
125, 209, 77, 540, 50, \\(\\(-20\\)\\), 340, 186, 242, 70, 379, 242, 148, \
102, 262, 43, 47, 7, 218, 6, 215}\\)\\), \\(\\({\\\"20100101 02:00\\\", 0, \
411, 10075, 10303, 10193, 142, 223, 43, 534, 59, \\(\\(-20\\)\\), 340, 186, \
239, 70, 379, 239, 146, 100, 261, 40, 45, 6, 234, 7, 201}\\)\\), \\(\\(\
\[LeftSkeleton] 46 \[RightSkeleton]\\)\\), \\(\\({\\\"20100103 01:00\\\", 0, \
406, 10068, 10304, 10190, 134, 210, 71, 531, 55, \\(\\(-9\\)\\), 340, 189, \
244, 70, 392, 244, 150, 103, 262, 42, 38, 7, 207, 6, 196}\\)\\), \\(\\(\
\[LeftSkeleton] 8709 \[RightSkeleton]\\)\\)}\\)\\) \[LeftDoubleBracket] \
\\(\\(8760, 1\\)\\) \[RightDoubleBracket]\\)\\), \\(\\({\\\"Year\\\", \\(\\(\
\[LeftSkeleton] 5 \[RightSkeleton]\\)\\), \\\"Minute\\\"}\\)\\)}\\)\\), \
\\\"Month\\\"\\)\\)]\\)\[NoBreak] is not a string or a box. ToExpression can \
only interpret strings or boxes as Mathematica input. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ToExpression/notstrbox\\\", ButtonNote -> \
\\\"ToExpression::notstrbox\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.605222761255454*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ToExpression :: notstrbox\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.605222761291456*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pspec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\($Failed\\)\[NoBreak] is \
neither a machine-sized integer nor a list of machine-sized integers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/pspec\\\", \
ButtonNote -> \\\"Part::pspec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.605222761345459*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
pspec\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.605222761380461*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData["new"], "Input",
 CellChangeTimes->{{3.6052220408712506`*^9, 3.6052220410362597`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{293., {2., 9.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
          "4779.45085443699`", ",", "5952.46522149686`", ",", 
           "5042.920932640805`", ",", "6038.808037322988`", ",", 
           "5052.376823472641`", ",", "10094.328774545724`", ",", 
           "11190.407463632648`", ",", "9993.333386315964`", ",", 
           "5427.733768680733`", ",", "6009.798451573341`", ",", 
           "4984.568192510445`", ",", "3810.8485875585748`", ",", 
           "5252.61970742944`", ",", "4053.1368293133323`", ",", 
           RowBox[{"\[LeftSkeleton]", "8731", "\[RightSkeleton]"}], ",", 
           "5207.793060434118`", ",", "2893.5132705847864`", ",", 
           "3653.108691616222`", ",", "5598.323803081379`", ",", 
           "6064.050710477583`", ",", "5199.476138548761`", ",", 
           "8469.994858496582`", ",", "8116.507303682683`", ",", 
           "10449.387052066706`", ",", "11121.713732500655`", ",", 
           "9303.255521884466`", ",", "6463.960493249184`", ",", 
           "5836.316545420188`"}], "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{52., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 166, 32691122876089261248, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{55., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 166, 32691122876089261248, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{85., {2., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 166, 32691122876089261248, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{77., {1., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[166]]], "Output",
 CellChangeTimes->{3.605222041573291*^9, 3.605222075520232*^9, 
  3.6052222287079945`*^9, 3.6052222704743834`*^9, 3.6052227690038977`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["firstStep"], "Input",
 CellChangeTimes->{{3.605222045885537*^9, 3.6052220480736623`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6045.499275291948`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xGB", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xGC", "\[Rule]", "43161.859518264806`"}], ",", 
     RowBox[{"xRB", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xRC", "\[Rule]", "2364.1404817351918`"}], ",", 
     RowBox[{"xRG", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xBC", "\[Rule]", "0.`"}], ",", 
     RowBox[{"xBG", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGB1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGC1", "\[Rule]", "39511.859518264806`"}], ",", 
     RowBox[{"yRB1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yRC1", "\[Rule]", "2364.1404817351918`"}], ",", 
     RowBox[{"yRG1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yBC1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yBG1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGB2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGC2", "\[Rule]", "43075.92975913241`"}], ",", 
     RowBox[{"yRB2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yRC2", "\[Rule]", "1182.0702408675959`"}], ",", 
     RowBox[{"yRG2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yBC2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yBG2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGB3", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yGC3", "\[Rule]", "43746.9648795662`"}], ",", 
     RowBox[{"yRB3", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yRC3", "\[Rule]", "591.0351204337979`"}], ",", 
     RowBox[{"yRG3", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yBC3", "\[Rule]", "0.`"}], ",", 
     RowBox[{"yBG3", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6052220484756856`*^9, 3.6052222338012857`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"firstStep", " ", "=", " ", 
   RowBox[{"StageMinimize", "[", 
    RowBox[{"i", ",", "initBatt"}], "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"firstStep", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.605222061785447*^9, 3.6052220873829107`*^9}}],

Cell[BoxData["4821.12915443699`"], "Output",
 CellChangeTimes->{{3.605222065291647*^9, 3.605222087796934*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Append", "[", 
  RowBox[{"new", ",", 
   RowBox[{"firstStep", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6052222480240993`*^9, 3.6052222568536043`*^9}}],

Cell[BoxData[
 RowBox[{"{", "6045.499275291948`", "}"}]], "Output",
 CellChangeTimes->{3.6052222572776284`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["new"], "Input",
 CellChangeTimes->{{3.6052222590637302`*^9, 3.6052222592287397`*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.6052222598477755`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"new", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6052224215630245`*^9, 3.605222437969963*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1:eJw9kwtQVGUYhldGEbQGEDQ0dJBhkIQMBELuLwvsBZbL3lgUbQnC8gLkipWE
sJgtOpIiqRFFok6KcoeNi9wWlotDIQhROYGTBEyhjEty0STKxv/zzJw585z3
fP//nvf7/o3xKZJEIw6Hk/Ds/v/5/DIEDCcFfmByrQbsBepf2Z79Z2ctYxPk
Tt437bUk3Ry9Bm3FHrN6xlYQHeTrFSGkW2NHs/1U4w96xjaw0dfuuXy0k7Et
Hpo6Trw+1M7YDoHmdqG8o7SfPTbHX5qRXiB2QMHKxWmdEa3viBOvKVwczpcw
3gwLr6WaHistY2e8nHezbgaVjLfguCTD01nVyNgFce7G3R6GFsau0KU6DXgO
k5+tuP7lQlvKkmbGbpgb8L5ec6GDsTvKxxYu979gD8yeySrd1NDE+E3Izvlt
NFKSf08YD3b1pe8n3ob0W61Cq6fEXth/pLE0qLWasTdkSY+3Ll9Tx9gHofkj
Wm0JsS+UTe6PP0oi9sMBoffwgBOxPzLr/m3qsaT8A1DosSL+aj/5BY4UtsS6
ObU+ZzXQ45tXP9LWwPRABHvethUMsPXUgdCEt0tLcyl/LkK3bI+78g1jNRcb
Xk32qcqh/INgJ7inLDlL9UHwWDT8WHaY8g9GmUZluhDE9lMHY/c6445Da8lv
CB6odKNx5FcdAuVcQeUhLvnnoWIopWQ8qI3pPCwVXZuK6SP/fNjYF3QsnGB5
qvkoiq8Umg9Q3gIYzkzMjRxgrBZgUSwJN56k/IVIHk976bQX+RdiQrgvv1tP
/x8K5/sbTj4pJz0U02qH36V8yj8M3DdWX3X+up3pYVC6+n3K9+hiuggB7ywT
XDG7wXQR0qyXjQZ20TyGQ7qvtCXHkc2vOhxdWacTNHLyF4GnDWHJNznFTI9A
bmO3xcXh75geiZaw91ZYLpC/SJjzfvWZyKH6KOz9XFA1voR9jyh4tcxHTKRT
P6Kg8p8/p+ln/dBFQV9xMU4QS+dXDM9PvnBQnmQMMYo1GalNT9h5UYtx5+93
V/V9xfLViWFQL/9n5QT5k+CutsisV8X8QYKfOzNn5DvJrwQzZsUBmTVUL8H6
ya4H85GUrxSPxfEmDYVUL4VO5DczyKd5lEKVwwv66zD5l+Lbg/k7fttL+cpw
Vm/RybvD+gMZZt9/W1HoQv2QIXGqWndrN8tfJ8Op3G2xeUNlrF4O419qL31f
zRhyDGWMflaUSvMkh82mR8fMOqleDrf1DZpHq2n+oqH1qkm3HWfnD9FI/Lj5
lPd5yj8ayrtvtbm0snnXReOnKO5csJDyV+BG9s7ayjWUvwIfWq/zn71H9QqM
pa29nTXG8tYpkODruks+XcXqY7Dqj0Eup4r5QQxUVSbZ4hfzHoPj0+UPy0Us
T90z5riPmO+qw39SFNs0
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 3072.3914664902236`},
  Method->{},
  PlotRange->{{0, 99.}, {3072.3914664902236`, 11370.558753632647`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{1.98, 1.98}, {165.96334574284847`, 
   165.96334574284847`}}]], "Output",
 CellChangeTimes->{3.6052224398420706`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dimensions", "[", 
   RowBox[{"wData", ",", "1"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.605222642975689*^9, 3.6052226439927473`*^9}}],

Cell[BoxData["8759"], "Output",
 CellChangeTimes->{{3.6052226415386066`*^9, 3.60522264439377*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "new", "]"}]], "Input",
 CellChangeTimes->{{3.6052227744652095`*^9, 3.6052227765723305`*^9}}],

Cell[BoxData["8758"], "Output",
 CellChangeTimes->{3.6052227769883537`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"new", "[", 
    RowBox[{"[", "All", "]"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.605222831779488*^9, 3.6052228403689795`*^9}, {
  3.605222882742403*^9, 3.6052229090689087`*^9}, {3.605222977487822*^9, 
  3.6052229985390263`*^9}, {3.6052230661918955`*^9, 3.605223067799988*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1: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
P0+Kueu/jtwez/koUlj7nw9ziaZyUylCV3TRbH7P8b8UG3aXfl7F+QUrpTgz
SNXJri3nq0vRtmpPt6i75E82UgwZdNfwZjfOX5XiW5dTE9z4e8D2Uux57z13
+z+KZ5ykWG+0zCE7I6YVu0rREtlYmNvJvhW7S7Hu6P2Xz6+4tWIvKe5a6l9+
UZLUin2lGLQ1a0miI/VPgBQrzZwmZw8mewVSBJX+ignl9VC4FD8/qP69dpnz
4aVweNl5a/fZZG+8FO3xZnwUf89KKMXBfgXzlSrIv8RS/PXKbfc6h8e/FF9j
zO7YPqTxna7or1Lh2S8c/2RIMXrvGxcbfY7/pTDYPnzDQv5eS44UhX1XR/0Y
RDhXipGCJQY9i/h8XcGPmteZhkrC+VLYNxnvngyaPwulmC0ObdHdxPt/UsRb
9tes+ET9USJFksuIUyv/UPlFKTSDbNyHqlC8WS6FkvjKdLE1+fN1KZpv1HS2
DCQ+q6SY3pim11jk1YqrpVi20k4ypprGS42Cr3OP61UMaX/6sRTmW0dWFj3k
/C0pyv+6F40+xPv/UljuPH5vw3NqT70UXXI6ZTs9Jf4bpBCftFqincTnf1Kc
dzww6Vk78v8mKTp213lwxZnHvxSvek2zCc0g/n9LMQCLZf7dOf6XwcRjTeeT
nH+lLMPwQfuzN00g3EmGPBejMdv5ex3dZLAM3jpZR4ewqgwDJ5srqXlx/C/D
g4R9i+8M5PsCMqRuqzy2J5Ts1VQ8/1AvNDybv/cpwzSJ/8tSDxqP2jIs7yA2
zrCn+FxHhshDuRq+w4NbsZ4MJTM+1u06u7YV68vQOyVqQp/BYa14kgzlpzce
ntZC87OBDIHFaoeeH6T4x0gGmcR47UEDikchw+mvZ9Vn8/2GeYpyi/9eHrnE
5/8yXPkYsKCBv2dsKoNKSmZlPynpv5kM+d5/R9/oQ+1ZKYPYfMyvHu4c/yv4
PbhnRcdfNJ/ZyDCzTX2fSZ/4+zgy3GmD35OWE9/2MhS43F6ow/dfnGTYrpXb
ZQ3vF7nKEHsut0CX//6CuwzGsdv+pq0j+71kMP00IOwqf0/XV4Z3j/tfftqR
7AuQwe/tkiVdOvD9NxkOD1KPNs0me8IVuJt8gVstxZvRMlxb1rLpvntgK46X
IWhP2+QvFX4l/4eFMlg4db47JyOgtVwsw/FEq6n7Jvu1YpmifMbirDn1tB5I
V/T3/NjeD+9Tf2TI0PTzw60+f4jvTBlQad5bnMnfU5DBfYjDaneeX3MVOONv
zB9ljv9laJ/wveT6bvKvfBlClaJN5/flfFsZth1wWLqf318kgyDp7ZnsRv4e
u6I/ivOTbhzm/T8ZtuTs25hnxPcxZDg4tXDkpRWEr8uwb2ZF/JHpNJ9UyVBk
0rPfg/7Ef7UMCSs1giO7EP81ivZYdQ1+u5ne/1iGEz3yF12ZzN/nkmFc5OfP
U1eTP9Yp+n/1pa0xS4n/eoU/dtb9deZjRCtukOH2J39hp/lWrfw3yiDVnH3d
SU7joUnB/4ORvWrbWrSWt8jQdXq3Xxkl8tby3zKseVe9wcWLxlebNLyYOLHf
j8V8/peG3LMmkVPUef8vDa8Dg9XV+H5otzT87m3f28CP9//TkHRzVfYMvl/U
Ow2zZ41truX71hppGLG0bdtntvR+zTRMWOfy9d1o3v9Lw4OcVz9PDuH4Pw1b
GxpVnuoTvzppONcY6fg3iMaPXhoej1owrlCXntdPQ+cbg5yi/3L+Txryt3X5
NXIE7/+loV3HdQdPhRHfRmmQ/S76bHOL7x+mITzkmdop/t7QvDRkTjxZ5WW7
txWbpMFC6VVEyvuQVmyaBr9nQcIxiZat2CwNn4cJHk1v2tiKV6bh6ByVT73X
RrZiqzS4OO6D6VuKP23SMFdr8NBRjrSetk1Dp/bOT/LvU/32afAZcrh6YiXf
Z0jDyfOi8UH55P+uafjhe/Sj+gre/09D3OSbT7eJ+PwvDWGVy3Xnz6X3+aYh
dn7fqbEdiO+ANPj2nWfuwvm4gjSYXk/4rDGU5/801G28OPCzkNf/aYjYePOs
22/qj/g0fOlT1d5vMn+vJg1qnt3uGzuQv4vTgHUOhq/P0/tlaSga6/Bp1Xvi
Pz0NKqtmCNUSyf4MRf8tXbjOSIv0PzMN3a1nfTE6QfF8ThoGO8Za+4/zbcW5
aai6VvXszkKTkv/DeWkwTn2zTqo1o7U8Pw1Pzs/+N6pM0IoL07AxQvWO5Sua
j4vSMHLv8thhunSeVpKGNSXmorO8P3QxDd+vqAzPu0j2lyv8r9+FDtcWkr9c
T0Pb/i+j7qjz9/bSUNJm3NcE/l5ydRqmTD4eormM8zUV7en9d0l8BPXH4zRk
7OpWlnOT728p+mPJ4JPWEtKjOsV4dDk4TDWE8/nScC/XxUg8kPhvUNT/oDIw
iL+336jwd6+353beovKmNJz+fUM8MpXzvdOwy6q7zzjm/3cadpgrv2ss5e9/
yKG27O7eb/dovassh0FDudbvebSf0EkOb+uFxr8mkP53k2PYtbSj7VTRilXl
mLXi4aM/KStbcW85vsRMChnc0acVa8ixUvndiwfnaf2rKcf0vb//QyDFt1py
OKzffuNOC/mPthyTv8u/TObzGB05Nnb0zD2uSfbryRF0XuXa+ibOL5dj/s99
73TLaLxMkmOk6c9bhbzfYiDH6hpnu/2PiW8jOWoGqbl2k/P36+R4OT3Da1QO
j385vs7/uFW/N9VvIkfDhf/uB7Qhfk3lGKcy0U9YSdhMjkePZoW9vUTPr5TD
Zpr5Y6t7tH6ykmPOMrfeK09TPG0jh2Ru6tq3I/n7oHL8/dEQX8/5gfZy6BXU
qsy+QXrhJMfYRe2dg229W7GrHCddi6IDCzeV/B92l2Nuo5NaQW+3VuylwL32
Ra947dH6vK8cE65qV/pb0notQI7OAwt1rxwh/RfIsbZxQ3mn69SecDl8Zz5U
v/uL2hMtR+3rX52DIsj+eDnSHVp6DfpA/Avl6HBpvv5xvq8uluO6kvWYPnY8
/uXo27ldwtbu1L50OUqHaY0rX0XjLUMO86f/6auM4vW/HL03vXhsvJv3/+RQ
j9rvu2AP4Vw5ArfNvf12MY2XPDlOL6nomch/DypfjjuNsxxWuPF9Szm2tp3W
524w2V+k8BdvlXOFvL5RzIvdV7l5+/bg/T85nCb17Xb/CflruRyfLvuelpnZ
teLrcriOWypd8Diole8qOb4teuj8+mJSK65W8Nc19/OZ0sWtz9fIkZi4flq7
gbReeCyH3XiPeXYg/amVo+jxsPDs7nz+J0fIhAZRzAdqX73CvrMLphxYRe1p
kEO0v/RYFf89pkbF+Nn4rwjvSY+a5Hi/6PASl0d8/ifHqfy8TcvUOf9HjiVD
cr0K2vD5/07sVtf1eHaP5/+d+HmjZ8+q37z/vxNLQ7uOOBzK5387sel+zluz
fPq96k4EnJ4g6exO9vXeCZtzQ/aoZZJ+aeyE2tCcM41i4ltzJzqnHegz9gDn
/+1E/82xZ2LP0HpIeyeSTgZY7/5J8bzOTry+m2f6raNnK796O6FjKS1wSYlv
xfo7oRc19ujcQ6GteNJOXFBZPzY7wr4VG+xEwv+j6drjqXq+dhcJSZJKEpLo
K5WkkqSVJCFJKhWSJEmSJEmSJElSCeXc7+eQSpIKyS0JSUgS0l0S5Z7qnd97
1v7z+ex99pl51lrPmlkze/aOh+ZPonB+bJ4Kx559Ojn3KuodpMKNo4bOKyZg
/4juLfOlCX8aYH6ySYWkjI4Fjm2o//bk+Ycrd34bQv93TIWTrLH1dW5YH3JO
hashR+nfaqj3lVNBtclrlP9bav9vKkxebX9p0zPEHqlwy+hSO53aX+WVCplR
329uj8b5lA/5/aXzKffy8bpfKozk/GCvqUH/CEiF44qM2O4sxEGpEPV+5fvL
YWiPkFT4MGTt/9cO+Q8j/N26Y9lfQ+X/VAj3+29rnSPyH5UK55Vf9qj3bJPi
mFSYv1h90p/B01I+41JhL+dg3ZHk81KckArdv2O816ScleLEVDhw4sWJYJNg
KU5JBSNeb6DHLZwf01JhX8jjy7pTcX2MlQq361clSA6h/vBSwTLpo4H1Omr9
PxXGtyfL2N5CnJ4K2eqTXQK2IN+3UqHXpbuyUh7zbxbxl1HssWEm1P4/wqfb
7tiiJGr8nwr7Nx5b/Y4a/xSkwtTkfkeTC3i9OBUqNPofLaX0vywVYnR5tBsH
EFekgsyZTZuqvlLnDZPnhZne/cFBXJsKE56FlI1YTp3XlApBT+JyDitQ6/+p
cPD2OrDzp87vSQX7fSqv03cgHx9S4fLmiturbHG8+SUVGn/8VElyviTlsyMV
JnbdHpZvQ73pSoWPT/OZOTtjpbgnFUwE3c/lXxyT4oFUyCpcNjSiI0r6vOFU
+P4ic9IPP5yPjaBB881f7EAt5F+GBhX2z4//2Ui9D0qDxwNzx42hU/N/Gnhr
6xV/ps5jVqZBTUNf6/GVVP2fBj+ML24LoPRajQZ7aDfD65So/T80qH+xd/C8
B2JtGviaHS3Lp/KvLg3idvdu/U19X2sODSwN3pe4W1H7f2jw8Y55hRZ1npkR
DcYbPAkvH416Y0IDl+j4pZX+mF9MadDn2WHpaYjtN6dBWZiKzC9D6vxmGlzW
dwmRuY3rhVY0OOa84fNDtxApfzY0iLw3vvIGF/m3p0H42JCdTNfLUuxIg5/1
67ov2qI9nGnwWuyX2LIU9ciFBlXLHqw94YzjI1caTGp7EVe5ANcHPGjwMOGf
iQa13uNFg1En3UO0TlDr/zRwrY5b6jIH49ePBo55uQsaPqEeBdAgS2bGP1VK
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
X5cPkiamcfy5OP/S58NfCxXP8FjUn7l8yMvSZrdf5fr/fDha2uGyiOX6/3y4
xJO5PdsOjxvxoflFROdziuv/8+GVSvOkz1vxeqZ8iFd2S+vYyPX/+XD+19pl
/Ybc839yXCE5xmY11//ng3dC0J/Adpy/L+HD4/ztkY8PIl7L+JA15sW5wmWI
tzW5npq0slMOxoMtOX+xsfget/7Bng977/cKTtxGvFbwYYNd16W6xZhPHPkw
RhA2EPgN9WMlH6LfOu7tjkB/uPDBQFMkvVkC+e9K8L66a5xgBPp3NTk/eM/j
1uO4v4A7HwJUY4pm2ocNjseTDyO3mF4I24j9xXV8WDjrZeomPdQfbz6sCpR/
Y22DerGB8OfBlM6WPYivLx9KTn5YL3LF/LuRD+nGI/1m1SO/N/PBtrq/crsh
/j6ADxdls46sWc31//ngtLBLX0Gb6/+TeCq97nvpBff8nw9BHRrhl6Jw/61Q
PqhE/QsL11MeHE8YH25Mm6K6biaOdycfvi01u+0hh3qzmw8XIr2qzVehPyL4
cDK6zTpgCvI1ig/tw1IXa5Yi/tHk//0Pvz8xA/NnDB/ezQoU3UlH/Ynlw7Km
Q+MrWMQ/juD5s2110X604/ngtionxe4i2gf5kH/l0LXgbNzPPIkPIU1SKb5P
8X3yFD7wMvU0RsQi/ql8KHSZrc9qot6k8WGraYbkqCeIdzofDqtbqo+7zvX/
CZ7+Uy4OnYX4nyDjLbu7/6suxsMpPszb7rJCgatPT/OhPmZc8CVuPXQmHyZs
FjxfOQTxz+LDlTnC+8Vc/ymbD5d1axRzlnP7/xE+38rttPHA+vkCH55s/qcx
EI78y+PDd5/NH6rWoZ1P9Gf50zl5itz7/3xYGXF8Xos9HufzYSnv7pjWFK7/
z4cDoQdjzNURP4r4n+RfwT2sdxg+eDLXk+0eoJ6I+XC17/waA1OMjytETzrD
RT/M8fg1PlSPd/H1D0H+X+cD2/mhfK9p5OB4bvDBZrFi0pFM3P+xlA/J5+cM
vzMD+X+LD+ZfWpSWnUL87xA9V4oNcTZHvMsI3s7UkcR5aN/jw5fj4XHeoxDv
Cj7EjTTuMZBAu5Lo+fn5vfunoP8e8UEmLvOl6R709xMSrzWKJ5WSuef/5P/P
u4Udd0H+V/PBeUuU0zBNt0G7hg9KPPdOn0Dkfy3x35IuU90KxPsVyQe6rclD
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
qMB4KKPgVM3ypvE78f2XcqJvaoaRD12R//coOF3UMtnTAPG//z//6Rj+jMN4
qKDgXOOpI5Zcf+EBqccsYs0+zEP9ryT3v3ZmXnAC5ueHFLjXGgbcNsLjjygY
/u2MltFrrBceU/DDcklwfA7y/wnJ3zv3Jk5aiPg/pcDX6IAgbS3iX0WBaqBv
kt4i5OszUl8vSIFptoh3NQXXLZ9/D+LWmz+n4KvDeeOVPdz+NIR/yTdT7V6j
/YKMX/y2yu4Y6n8twXNf5d1CM+T/SwqeTKkeZr8L659XFBTNdtQu/4Trg19T
sP7amBvWBpjf3lBwfIf5cfvlWN+/JfMn55OXKmZh/fmO1GuW3XdeZKJ/6kh9
LL199lXufdB6Mh/QO/Gs6CTG03uif4mzdi2JwnqmgYJ3I50/+eSi/YHUC8MN
Ap82oN40UpBxe590nyHi3UTqVcm03IcKaDdTIPNTM7b3Je5X1ELi9Z4w3dsT
828rBbfbqCdmH1B/PlLw+US56mMzrEc+UVAlaMk9Pwnz7WcKpssJdyVYIv5t
hF+PtKfuuIL4fyF6YTTD8EEh4t1O8tvRZveYJWh/JfVYyauD729hPHVQsKl3
s4jNx//rJPoY6nXaeDf3/h0FJodH5s53RP3/RsHGB0XTva3w+Vc3BZlnt/i4
DCDfv5P5ZftK8z4ntHuIP+a5Hma5901/UHDg4ixls5vcen0K5Bpfj44di/XP
T6IHLyv/Db2H8fCLgu63B4xeVCH/+0g9/zowf7g54vubgqDL7YbbrNEffyiI
eebcco1bj9JPwSqTmBFb32O99pfER1fwzHFV+PxxgIK8Hd1zzPOx3vhHwTDz
sAs5WsjPITR4ilTf/K3HfDmUhj+pwy5b5ZcN2sNo+DtryduHSuiP4TTkpj1Z
a/gF7RE0MLGsjf53xF+Chgt9Z6OfSeD1R9Kg8Dx9y3rueZskDZuuHqZ+tWM9
NoqGDbvbP31icH8QKRqql6Te++XHzf9pqB+eNcM/APkuQ8MRubfs+LjcQVuW
BvvNcomh/WjL0bCgtcbuggW33wANTb+FeXIuiO9oGjLFeoffH8b6fgwNPY6S
smmX8PhYGsLO677v60a9V6AheuiMtgWn0R//0RB35vei313oD0UahLdOpmcN
RfyVCF4eSyWFCtj/UabhcIfwjqUL7vejQkOQ2eolZ/nc94tocNmyeeufbYif
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
2Fimj41fd6vfFLitTDeu+r3K/wV9tZNpeuXn8c+Hg5/2Ms2N7aOT9AN6MJFp
zbgvto02Qe8dZNKyeWY07wFwR5kifeSi7ETw2Yn5DHT2Lz4G3FmmJI8RaZ9a
QT9dmL9/K/ReLkC7qUx9G61vsdgb4zHj39u4P59XivhmHU0a8kk3tQ+u100m
5eXmR2KfYT+iu0wDeufK1uXwc3OZUv8VNh61MqSW/x6sp+eru515gnrfQqbz
8f7DxjXF96wsZWq05mLaVAn+25P1uyhe+3wq+O/F+g4znBpfH/ruLZOu16/C
nWGYDyuZWthtVhUGgt8+MgU0WqDx1xe4r0x/o4yL9AyyanE/meopLnUqug8+
rGW6FXF84jN/8GEj0yxN83fDr0Lv/WUybz7If1QN2m1lGtIyxqTRA8zXAJl+
6YkuZuvRPpDnp9sazT0j4deDWE+JVSVJjsB2MnlHrSoJNML1B8vk+erGmpre
4H/If/FsbpDWE5hkeu6e8yBkJH4/lM/35uwHpxXYr7WXqVfR1FcnflTL/8PD
ZFq1truBx2jsjzqwfroNuHC7HP/vcLhMYZ+XfTZ3w/yNkKnlkx8l+urn/UbK
VFx9U69lV8TfKI7v4mqX88GY/9EypU9639roBfo3RqaCoakjjNeDb0eZhn8a
YzBF7fdOMt2t3+R36m3E91iZPuXMnWoxBfM3TiZ5ctt4gwqcf7xM7XJidDv1
Bb8TZHrY6cCv+roY/0Tuj9bKAx7vwLczn6/evYFLvwO7yPTZUehuvAF8T5Lp
xVuP7l/bIr+48vjHXHCrbozzTWZ/sfh8fkEZ+uMmU1vTE6J9CPo/hfuvf+zp
o37q9b9MRzNjd7a7Dz/ykMl+7fGPu5qp3//n/g9PGLlZO6EWe8qkfWm92xD1
+5deMk2b2zR/+288bzyNr9+4z6/dg3G+6TK5HDl9drr6fugMmXa9eHX5bXvE
40yZDljs9RiagfrSWyaV73uzpGT014f93GH35WEtMZ5ZPF/6Zr+DZ0P/s2Xq
0Ortgc39sb6ZI9OxVue/azxHvpkrk3DdWl7oAj7nydT8i3NsjTbGP1+m2KZz
BuUaAi+QqUfp4/F1StX3/2VysPv4xSMSeJFM4+SpylfLwf9imYZOsCu68QPj
9ZXpq+HVSU7VyE9LZPo9tZfZ1y7Qi59Mbw6o3rrGYTz+MnW9kD63eBD6FyCT
k5dH+8/14N9LZVp9b26Q0VjwH8j8aWzq7Kn+vtEymeIHLe07eBX8NUimnNjF
7aI2AAfLZBivHZ4xDPwv53zU3q3kZTb4X8H5JuWFxcB5qOdDZKJR3Q4HeoL/
UJmGxf2s8e4NfsM4/rybmt/TBv/hMk24lWeftB7+tlKm6sfFc39JGM8q5ttJ
yl+tfl5OIVO2TTvr/iXQ82r2y5bKwcVf0L6G/ULn09yET8BrZfqmm3L4Vnuc
fx3nq6HF0fopaI+Q6fSEv886qd/HWS/TaK1b9+YaIt43yLQkIef0FDuMZyPX
H51P/rw0C/xHMj8HXq7+0QnHRzHfWVZ3XceC/018/gHZIw6pvw+ymf3gZeCl
durvQ22RafMiS8+D+fD7rTKlbX82ucV2xP82mW4PUqWZKsDfds4HkRFBy9uB
/x0yDZ44wW1+NvQSLVOFZCots0f/uM45Zu4XceET4mMX/y7g2N9l88H/buY7
I7MoIA/n3yPTxB5j9c4+Af97ZdJ82Mr9rj30GiNTn4nD+31dg/Huk2mQiZPG
9Alo38/xbN0gZN8w8H2A48fdsKmmF9pjZdofdjbqdl20H+Txzoxe8KUhcBzX
B8+XGXcOBt+HZNoW8fLkXwPku3iZ3t6492yTHuLhsEz6I+MunlV/vyVBpkJn
u3472gMn8vjex7WuVIDvJM5P0we0fViJ+1tH2A/3nW07MAHzk8z+Ucf3h8Nc
jC9FpsvBU+3fNML1j3I+mDigfKUl/P6YTLvnq0a0LwT/qTKNicpr2dMR/KbJ
tHFJbutJJ3B8ukw2CYdX3eiSXYuPs76snhesCMd8nWD/LA8cklUI/k/KNErr
kbaqGP05xfHUtSKkbBf4Oi3TVKnO5KwWwGe4/ijKWxet5vMsx3NWVc4E9f2D
DJm+fMid5mkKfzvH+fTVt03SAfz+vExrK+b2rJ4G/jNlelLRXGHmhfi+wPNf
ubPF083wg4syWdY/pWE8EOe/xPWSb0z5YPX/N1ByfZUc2Uz/KfgVZAoKjEm+
6Ip6QpTpamgjPeduiBeJ/eR986DL6vpDlqnuwKMmXur1kIr7k9zgZMRyzH8W
x/OI6A2JNYgHjoNJM303bp4C/nNkMr0w8Gur8dD/ZZlCHB+vGFCA8VyRaWnD
9fN678TxV2UauC3AeO5FXD+X9dVea8z2LPjNNZkWb1ZUr9ADX9fZ33++H2Su
fp4uj/UXXqeR1y31/X+Z7KoqsyJygPPZv5Luddypju+bMvkfs6985Ax8i/1+
mnbFiz0Y322eT/txfoPV9y/uyBQ4eezCrp+BC7h+nOV69sQO+NVdzm9RSYnL
ZOTXe1yvHW+/P7wS88E6fTJz4veENfCbIpmiV16fdMgC9cV9rp8bZ57QHYL+
Fst0v+cAX311vf9AppKPQ1M2NMP1H/L8mh0f3rYIennE+c++s6eeEnw/linq
zpLsZW7ZtfiJTP/eHu38biL4fyrT+x/p+y5aID5KZCrq2uC8Qu3nz2Q6pNio
PHNWvf6XyWptn4tOeehfaS3/C3sDv5Dp4ruJLlqTwedLmTLb6OU0+YH2MpmC
f53v4PEa+BXz3ad4cwd78Pea9fPl6ZJtAdBDOcdLjq+BoRP6/0amZkciKkaG
Y3xveb4bVe8w+4z8/Y7XR6UafU88gZ7fc7zsfmFmJIP/DzKdKepU+fYH9P+R
9d93S7P+IeD/E/vR4WE0+hjG+5n9uON7yXQQ+PnC46vOfXr0DvivkGnekSMn
26rrnUrun/vRBaUr0d+vnC+Cu6e/PQL8jfk63mTqBA/gKvbftm5ascbg4zvX
XyM7mrRrDPyD81dAXtS+Y8Bcl7SN6lHndznwT86/q8/EdvyB+Pwlk06VRa+w
O2j/zfFn3Dnv9HPgPzIlTE/X6bcefP9l/Z+ZE1e3Efzkn0zugzsOPOSA+K2R
aUHB5AKHtehvHRVt1pK6TyuoHb+CsfmGn6eChyF/aaiot221azs8f6dgbOOy
77jfTPCvqaJBN2I6HgqrnS8F4x7ne0y3mYD50lLRl1T/rOKutf1VMN6fNe/q
ycXQg7aKovoP+1fqjHbGbmMX/Q6sBv86Krr/bHz21361/VUwXmWY/2/nupza
9roq2r1o2r6nb9HO+Oe2UwvPN0L/dVX0t3mbwA6DcH7GhbZTYhSrwa8ejz/k
zPXpNWhnfCHjb/dhttB7PRWddvcOcvKr5VfB+Mi3c37HP4Hv+iqqdnyiGtQB
7YxHVAkl7wPgb/oqeph3c9nD0bX8Kxhvft+naRMv8N9ARUMXTurZorA2fhWM
+12z0bEbAX8wUP33/b8r+6h2/0TBODrU0l3XBvm4oYp63dG7r8T3GxWMr7lb
X7J4iPE1UlF67OfFxqEYH+O3d9u+O/Ye42usolcxi+v98K29noLxchfTV/3N
oZcmKgq2uPN+2n7wyzhuq9fdmer7X4Yq8o+17TN8Qe18KRhfaT64JF59f7Ip
t4/RzK2Jw/UZ/9Xv5fB6Nq7fTEVrdaPlquHgj/HDvS1COx4Dv81VZK/7UnOa
mn/G/v1ur5tvgHzSQkWLt9z2cdCs1buCcfKr1pG3ZkP/LVU0qUedGyNNwT/j
c3XnJXauAv+tVPSrU+SBP1PAP2PNEYOeeRwCf61VlF0W2XJNQu18Khhnxk7s
qXML/LdhvTT+kHMW/w9HwXjGhpKaufrY7zJS0bKhppGb99WeT8HYXOPW0Oe3
MT5jFfVv5q7XzxnXZ/y3zeTxe/dj/ttyPDTqd9rAB/wyNu11rmmdDdB/OxWN
NI5dat/ycm0744HlKX02NsT526toXMH1N3rTwR/jw0VWdC8Q7SZ8/m22iUvV
/DHeP+PFsj7/0N5BRVsC7IP+dEI741Gmfc1tTkDfHVX07uTRdv2/4fyM7S/3
mfctXb1fpKJKvS9GD9yhH8YO/6r1y2xR33XmcbVdOzo8vNYPFIxT+rk0Dd8A
/ruoqEOwc7kHnq9WMDbdZrTOUf29WVM+/sSp5fd/IT4YNzh89Ow5D+jLTEWK
rRs/W46u9QMF42x/oxOXjkKfXVV0udLn7IbL4J9xarHX9e+G0Ec3FSXumvg2
6nwt3wrGVcfsR762gj91V5FAfZb6NAf/jP97/uTHMcSHOespPHBtjl9tfxSM
73b0ORnbA/z2UNEe1xbuG/E8iILxr5Mm4e8dwZ+FipptiTa58QD8Mv5+IqVt
nrrdkv3BN/PS79s4nrHh6JwHF9Xr+54qmn5lg023LfB3xsOTc/YtvwD99GJ+
y7w9G4RBX4yPL/LppWyE/NKb4+tYh/1H14J/xhNGHn6T9Uz9fUz2x93U81tZ
bb5VMF47qn7H+YboXx8VNY34mB17C/1jfN+upsHg5fD/vipq1PuNMtKpVg8K
xqby/DZrnMFfPxXpj/o45oMv+GUsbV83YewU8G/NftXBouOJl5gfxqbTCkpu
O4FfGxXN8e7b/Dn2fxSMD3460vK1K9r7q6j46IYu63+BX8anruYabbih3o9j
P1267Vdr8KlgHN/rRFNXXfA7QEWNh7mKCzTBD+OTn0rSlzxG+0D2547O+X8H
w18ZN9z08uGHZPA/iOfnk22ds1i/KxiH6Om9C40HP7xOLssYnl0SiP4zvjv6
ffXNQtQ3g1XUPF9v0l4l8jPjX3MNvqeUQf9DeL4XnGwzAfvdCsZdxzpb9lHv
LxPnn3q3trx8CP0zts5Whua1RT05VEXbXrh92N0b/DN2DZvablpgLa5jryId
w4ScD8nQF2ODS/rV43Jx/mEq+jfMKsRaF9dnvEgemhMbAv4d2M9nNbuS7w5+
GTsrmvZd8xv8DWf/cFw8vineh1Uwbtwl7cJztb+PUNGTI71btKxTW98pGDdJ
i1nXpb36fSPW8z6yfmidXdvOOGhqRusnfdH/USrKKNvbJLEN9M+YclTBL9T1
6mgVuVzv/SDKF/wy9rFOsGngivpmjIrCWzqXuWyqzQcKxk11ppiPzQD/jjyf
02qiTv+D/zA+/fzY/ifLUY86qaheavuVoQ+hD8amR5t0uvy9tr91xqro/Pqd
F47FgX/GnfakV0duh37Gqci912PbRj3QzjjJa/i1s+Xwt/Gcr1u0Cd2i9n/G
83ddSh92CvxPUNGJAzE3LxP4ZXzHMm/PzI3gdyLXd28/LmveEu2MT+WXnrt4
V/1+FMdDVo9GE7QxPsY9nD5fi6wP/l34/Hnj3i48X1vfKxh7Tl5o+WYc6otJ
KqrJOfOxeAn8n7FdsXHnAyL678rXmx4d8xfrVwXjJU+ChHsd1N9XUdGaPn8j
NTdhfhi3/+JQl3wRv248r/4n/qTI6B/jw7k/PNa7Qp/sIw4DO/V2HQj/YXwh
68SpTX+xPnBnvTkNz8zzBL+Mp2+e0iooA/rxUNGjj1GLG65AO+OCnEfdr8bi
/FNVdHWbo0t33E9RMA5rZv13WgL491RR7OCB2vvKMD7Gy6YNjanajf57qajd
9LF9v1UgPhgvcq6zvsVx8D9NRa/pxQ9dGe2Mf7/U0l99Fe3TVRRaZ3jA44rs
2nbGFH20m2cC9DNDRVqtH5kOS6zlW8H4wlbzIxME9X6wij4GaUwNxv6UgvGu
11P37L0H//FW0bFBVcf/lcP/GD8w7/R2U7L6ezGs36TfUw9VYXyMDd1+xn+Y
Bn3M4vqs18rd+m0Rf/9hAyErcBj8ZzbHx5Q7OUnv0M448FOi4rM/+J+jok1X
F93Zj/1nBeNFBe8MNRtjPTlXRc9WT119Gu8PKxiXWfW88cpa/fwZx0vcgrqD
1Pwxznl4dGTP3uj/fPbHF/ajPEMxPsah0cOKj/RCfcJ176m8eXcn34G+GF9Y
0mHQBTeMb6GKWvco/9Yaz6cqGH/zbTHh1yn0f5GK3vt7uI04iOMZazfW7pmC
+aizmOv9C4X5nReDP8Zznj3oeLkH/MdXResSKstS8T6xgnHohSGv1y9B/5dw
Pde5f5vn3Wv1rGDs8OnbitSr4MdPRfOi3ztbOiD+GP/65/ztYQj04c/rh/tp
m9dB7wrGy0Lt7VfaXaltD1DR9ifF5922op1xivVyH8/7OP9S9o9+jWZNAd8K
xisN5WaPIsFPIOvRa9KB/Xj/QMG42558p+JTmJ9l/9VnF0yL7oN/xv92di4d
of7eQZCKdtilWKmU4I9x2UBh7mQt1M/BKsp9MzEuyBL1AeMK0bt3qD78Z7mK
LC21LndYBf0w1ntrEqhsh+uv4PWl3+Txoyah/me8auYmf5/BmP8Q1muQQXr+
DfDPOMrffVLxWtRPoSpyevTdu2tv8M+43olJaUfU74Nw3XXm89eOl6vRzliz
UfLwsXXBf7iKIqZvERJnIT8zTu7T2jnHEvyv5PXM0PbVHnm1WMG4vX3splR1
/KzieiHloVEmnkdT/If/VBp0KsD4FDzetAPDc/A8qoKxh2vOgD9P0L6a17Nr
R8Qu7YvjGed3vmmQfFj9fqCKRtseyW7VFvmLsdah1OxRPdXvC/5Xn3a0aagH
/hnXWelzUjsD/K9jf2u8J2XUefDPWOfDqEqbOPhnBNfHvZ5/Ea5g/cjYZ+fW
ulUh4H89663cums87pcpGJscNx1y8Trywwaud/JGBvtloX+M2z/eaVai3u/d
yOu1vmmpIwvhL4y37Zs4JxF6qRPJ6+WTWZ8e9gS/jP+mrMlYgnxcJ0pF+54O
1E7/jnbGoSYLChefgv43sZ8MUaweiO8JKRgnmXX7lumB/L+Z65e7JRrHriA+
GKdfafW1gy7426KimVdKrfoL8F/GS072zlr3Bvxv5XwzKHadSRjaGd/VUaTe
24H2bSoasyulT4+dqM8Yv9KaOXjZc/R/u4oGFzx/um4+9MfYwPJ3QEUw+N+h
or0dDiy5hfc1FIy/NYkaWlVX/X0kjg+TsCVWr2r3PxWM3/VfWvPgItZnOzk/
apb5WU8A/4xf7ktwrl8X+tz1X/04z3zObvDPeE9Mb/c69cE//z1+WsHI4Lbg
l7HlKcsCWyPofw+vf4PPNprfGPHBuGvEU49z6vXXXq5X77ZoFWgBfv/DFicN
pu5XP3/J6+/qV4tHpWB+/sN/RrXuqvanfTwfj9aI71PgL4wX2ZgedFLzv5/5
TmsbuRv3vxSMv0f32GvfE/XfARUZtzvQqAzP7ykY59q2+DxB7Z+xKtKY/dv+
+SHon/Grgfcj5yxH/w+yvmwXNPZrCf0ztuxXKMSsw/njVHRxX9up1/4hPhlb
lv0x8WmB+uIQ+7O+8+vmMvhn7Ppl27BDOdBnPI/v6bOXH0OR/xk/numemNwQ
/B9mfV4dV//xMPg740/aHdyHPoZ+Enj8ZzUCZrTD/DDWcv3bJOcp9JuoohcZ
7zptOgT/ZJxw76JLrzHgL0lFPxbMHTN3I/hlTONmB55W79ce4XyvLY4vH4F2
xuMSG+SfWoj2ZG6Pk5JKh2N8jD11qp8uNkV8p6io/kXL18Jw+A9jz60zjU8J
4P8o51O9HRt2bsPxjLXHl1dUdwM/x1Rku7z5n8EO8EfGM/L72hqo17eprNed
jS62V/PPeKyl3rVuCvhTGsfX4qhqVTfEF+NxrWce0nKH/tM5H17c82e8K/TP
WFprO23mXPB/XEWZmlM1C8dCH4wXvBqpijND/0+w3u4kGATNgP4Ze6fph1Ez
nP8krzfmvMnMQz2mYHwhbEHpl9bo3yn2y/nlDluaQL+Mtc6MOvFzAebvNK+P
9+ZMfNgH/DDuen/zr8vq73+cUdGNebm/K3TQzjhszON/RU1w/Fn2p0cbRtyv
QTvjFrl7vdvehH4yeL3hFZj2bzXGxzg8uJ+q0gbHn+N8/97k8bAe0D/jwL3e
r0/+Qv/Pqyjm+c6r7U6Af8Y7nBrudT4P/Wfy+v3YvTNLfMA/Y88BnfRVG9B+
QUWHIrVvdfsM/hmvTk6VHKCXOhfZP1t0m6HzCvpmHK3d8JbHKPB/SUWlNplF
9+3RztgmLXvMiBisH5Rc/689fbDNJvDP+N3PS9KmyeBPYL2pPsijm0DfjCfW
OWR2pDXaRRVl6Tzt6puB4xlv+9Kxy+pVaJdUZLb4qsVlfC9Ewfj18aTblUbw
B1lFawefGld/OfTP2MT61+/xZ9F/lYqMznisv/oN+YGx7V+TiVsHwH+yeP38
6t83UwH+z3hxipOqi/p7Jdm8Hr2XYxC9DPs/jPsnneix/Zf6e2Gc70JKBPsA
zB/jhp5xV32Wq+8fcj75d3fchT2oPxk33RExw9sL9e8VFfkP8lpq7Ql9MO77
b5WFtyP6f5Xr1+czFUoF2hkfCQmY2OoLzp/L86e1vOKXPfyfcfbFsbrCQPB3
TUV+GXsqdc6Bf8aXq2a8ebgN7de5Hr6XWZT6Ce2MR6SFpA3oBX3mqUjhd25a
iSf4Z3xg0nHN+L84/gavH0OHeKe9gv8z/u1QSo/DUP/kM58n/piPSkD/GW/X
21uUlYTz31TR12bhC4I+gT/G/qEmE7O6qt9vVlGVHVXNGoj1L+M3Ters1LKD
vm/zeNKCvBzrgF/GKxdNr5MjoX93VGQ+cPvhT8/Rzjh763XrsLzs2vYCFT3s
P3B3qAv6x/jp4PY3JxwFv3e53t1e+CbpKNoZK3T8MrdtRPs9bm9z4lElno9S
MP4XFH/w+GfUl1x31fWdrbd5LfTNuN31kbYqHfSvSEX2m/r190G+VjCe57B5
+a2J8P/7fPyxTZ2d8HyWgvG0yMk1DdXvVxWraHLgQU+tqdA/4/XTbb7194F+
HjDf6QW/BsWg/4zH9hjutW0erv9QRSc0VU834XkXBWMHo3b7o4qg/0fst/5T
Zrb+gPqTcXSnXWfGnoT+H6so1SonszIFxzP26ztrhO4p+PMTXj9UnOw6wg/5
l/GDmtFDfG3V93N5vTCdrusrkH8ZG/a9GdcsC/0v4fzbu7/ZixfwL8ZTCtbO
XqiH45+xH/3cZHalDPmX8aodvwK2P4Z+nrOeuub1P4j9NAXjz+3mvi3DerZO
qYoOdrEw1l+H+WMc9d12p9AC+uTr/vCzM5/0Hscz9j5u+vyu+v2zl+zPLj9i
qhqDf8adyu+cmTUZ+i/j8ZvrTPzZDvwzPkyHvc9Y4PqvePzziu7l4n0sBeMR
n07er/LD/ZXXKtr57csuO7wPomCclFSc1Fn9PGQ5+6VzxxupTcA/44Pd/3Sa
+g76fKOiLVO+7SiaCP4Zf6/JzHdvCf9/y372pXD8smHwd8bKkQdfxp5E/nrH
/misWVoagnbGfaw6tkoKwv7JexVtzU1IGXwT/DCWD5q2/3AZ+v+gooDsid0N
1Ps/jGOXGelknUf7R9afi61i2Eccz/hS1dTt99aAn08qGuXonjL8EOKD8dtZ
co2ofp+T89rC8ZLfUT/wz9hp4qRno7pCP1/4+jbKiv69wT/jVUbX3mq6wX8r
WM9Dtz21UPsP435FfZq0/4bnHSpZj7pfU7clIf8yflLZ6qmNJ/znq4ra/Bxv
vOIK5o/xv/JuN/Z/A//f2P9XzrKqtIZ+Ge99Y91z3EHwX8XrBzo8sbUx+GX8
c43/lNTR6P93Fd2yuhSTsg7+ylhr9u7z/mr+fqgo7lqKZbYn+GMcM1B2D/qK
+K3m+vBr455n5oM/xnNaRFbp5OL4nyoqD1r7u8UvtDN+eORW9aS+6vfzefy9
9zk2d0Z9w9i0QciqW5eh/9+cr0rPdyiNAP+MN744qnv+BuLzj4p6hlm3d/cF
/4ytnm14l7cU+fcv54smnoH+b8A/47KwLlX+Fojff1zf2b8Ti/G8o4JxY8vf
Y6ZbY35quP4K9KkyCkX/GK8s6NK3TQ9cv04WxeZUnZfagX/Gzt3uvhm5Gu0a
WRTV7/erhl/Qztgy4onQdjv418yiL9rWDrtcMD+MV2toTvqwX/2+QBZlrV2T
Vz0W/DPW0P++ODIf/dfOoik9ts55l4Z2xm76heMWdYW+dbLoVpdjz6L2gn/G
WTnLSu3Uzz/WzSK960HPNs9GO+NpI7rs2abOv7pZ5DPeo1PEQvDPeF7ahTb7
1fWbXhYlfZzY4+Jj8M/42eb69cwPY/7qZdFsO+cGJwn8M97n1ykvVVS/n5BF
fmVDj9kNQPwyfpxw8XpgHfi/fhZZFd1W9A5C/cm4w3qvHhajoP8GWfT69o/S
3dPBL+MRDY3OpkdC/wZZdOf86k/ZlfB/xj53ZpV3WQj/aZhFrSnljEk8+Gcs
ZHvZB5+Efhpl0fEq9/yJ3cAP48Ak+VrwafS/cRbFae8ZPxHvaygY7/OSHFqo
99eaZNGRkcsjTWfheMbaLw/32fsO7YZZtHz9tKmXDRH/jAMPtYu9p/5eYNMs
OpgnGG4KBf+MK8OMn7W8i/43yyJ5WFLCmJmoPxlXBYasqBgOfppn0Zi+mnVv
uIF/xhM+z7lR9wDuP7bIogYBi5NtonD/l3HJoOwy5xL19xaz6HqC5+8Gp9B/
xo4jbcpWqL+f3SqLwioi3GqiwD9jh6CUktUZuD/dOossGn+IOj0P/DPu233P
1McXoJ82zNeHLxnx5tm17YxHnHvxomoI9G/EenvZrt7E/PP0f752ESc=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.},
  ImageSize->{1036., Automatic},
  Method->{},
  PlotRange->{{0, 8758.}, {-10874.739287840333`, 12202.777371586928`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{175.16, 175.16}, {461.5503331885452, 
   461.5503331885452}}]], "Output",
 CellChangeTimes->{
  3.605222841035017*^9, {3.6052228872716618`*^9, 3.6052229094879327`*^9}, {
   3.605222978298868*^9, 3.605222999091058*^9}, 3.6052230684070225`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", "new", "]"}]], "Input",
 CellChangeTimes->{{3.605222919879527*^9, 3.60522292325672*^9}}],

Cell[BoxData[
 RowBox[{"-", "10874.739287840333`"}]], "Output",
 CellChangeTimes->{3.6052229236107407`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cost", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bat", " ", "=", " ", 
   RowBox[{"{", "initBatt", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"t", "=", "1"}], ",", 
   RowBox[{"t", "<", 
    RowBox[{
     RowBox[{
      RowBox[{"Dimensions", "[", 
       RowBox[{"wData", ",", "1"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], ",", 
   RowBox[{"t", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"firstStep", " ", "=", " ", 
     RowBox[{"StageMinimize", "[", 
      RowBox[{"t", ",", "initBatt"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"cost", " ", "=", " ", 
     RowBox[{"Append", "[", 
      RowBox[{"cost", ",", 
       RowBox[{"firstStep", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"initBatt", " ", "=", " ", 
     RowBox[{"initBatt", "+", 
      RowBox[{"(", 
       RowBox[{"xRB", "/.", 
        RowBox[{"firstStep", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "+", 
      RowBox[{"(", 
       RowBox[{"xGB", "/.", 
        RowBox[{"firstStep", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "-", 
      RowBox[{"(", 
       RowBox[{"xBC", "/.", 
        RowBox[{"firstStep", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "-", 
      RowBox[{"(", 
       RowBox[{"xBG", "/.", 
        RowBox[{"firstStep", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"bat", " ", "=", " ", 
     RowBox[{"Append", "[", 
      RowBox[{"bat", ",", "initBatt"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"secondStep", " ", "=", " ", 
     RowBox[{"StageMinimize", "[", 
      RowBox[{
       RowBox[{"t", "+", "1"}], ",", "initBatt"}], "]"}]}], ";"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.6052235918789635`*^9, 3.605223735027151*^9}, {
  3.6052237740213814`*^9, 3.6052237766805334`*^9}, {3.6052239614451013`*^9, 
  3.6052239890036774`*^9}, {3.6052243400937586`*^9, 3.6052243505253553`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"cost", ",", " ", "bat"}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<COST\>\"", ",", "\"\<BATTERY\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6052242293724256`*^9, 3.605224233575666*^9}, {
  3.6052242648844566`*^9, 3.605224323244795*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{
       RGBColor[0.24720000000000014`, 0.24, 0.6], 
       LineBox[CompressedData["
1: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
ssfDA5dzPB122nH89sC5YQETs9Lo+UIPxAaoHdL/zfHUA/NtCkIeZhHf+R5o
Ph+fftaS5zcPaD+qNzRTpv6u8sDWSqWJxn/YXw88dTl/V/si6anZA6/93Z0e
j+L444kPCwqPTHpP/qp6Qq2vkd7BQ+SflidGzeq9cYQmxSd9T4TYX7q3OZD4
hycWvG6sUJpO/ll5YtO53yr7tvJ49cTXIZ2L37ejfMTDE6/3Ldix/gPxI/DE
oaY9Z1d0of4WeuLpkpxPHqMpvmR5orrzxHbhj0nf+Z4YkVs99X2XUvLfE5vP
LvQ8eI3aq+R41KAg8Vx6XoMnfP27rSqzJn00e8Kiy9ArFf+r12zFqOBIhzM2
xJfqVmTnjw43mkJ8am1F7AGb/J8rqF1/K3J9Dz/1GcD58lacaLhpbvWO2q22
wnfhTt95pRwvtmKPt6tef84fPLZiSvkR46E8Hwu2wmTLzaVXl7D/W1F1vqTH
EBXyL2srhpx8ITRppeflb8U+FdGohBTOL7dCt4t7d/0NxH/VVkwvv3tfOYDn
Wzk+Y6eXOp/00rwVHrstHdyfcPzxwvTJalM3X6Pnq3phSXHv4KRing+8cEPW
Z8yBQax/L9iVtxrMziL9wAvzBoa7xJxl/XvBfaLRhvE96PcOXrjQ1Xh4ySyy
x8MLz4aOGBAVxvmjFwrebrIrWEJ8Cb1wK2FR7EPmL8sLupnvN+k0E873gubr
DyP6z+f45oUTWro9Ndex/r3wtizbuX0/4qfBC7stW+Z0AvHf7IX68itNs5yv
kv/eGDr5XnigLrWrekNl/KvIvm7c/97Y/yVKq9N30pO+N6b80qzvE0DrL3ij
b9aL7OSVFJ+svKG4RVnw7DDrX46/ZVqM/kz8e3hjeqISEjdwvckbzfMnHb8W
QvcXeuPy3LLLtfasf2+8qla4ZT+4lPz3Rgd/leepq2l8lnij8dnwPz9CiP8q
b3zpf8e26B/3vzdG2R6yjpNSPGn2hu7jPu0FXC9Q2IYHJYfr0q9w/NuGz4Xn
3yoWEt9a25D5csrUb92JD/1t8nxjft+vRpwfbcOgZXkVAS7UbrUNN62MV6bu
I38dtsH+snkn/QWs/23on/r20zYL4l+wDX2unntu9ZT1vw0Pf2hOquX5I2sb
6vptrz4kZf1vQ8m7cJfKv6z/bbh60m/QMQ3W/zZ8eH5eajyG/d+Gf1bJg4qk
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
h2e+K+zP+8mJON171b9px6g/bRORM2fyFAOeTx0S4WIyxVPpMsUn10Q87ns2
Lj2R6/+JCOo6Ktknjvj3TcQMNc+a86wXQSJumdV47xvE4z9Rnj80He7dmfd/
EtGvcG5k+EpaT8kScX9T864Oylz/kT/v9PqDI7gel5uIgmmhsWczaP7IT0TD
2/rsu/x+YFEikna0pGXyfl1JIoyj6z77K3L8l/t3xjQgkOeLqkS0e9RPTZHf
H6lNhMLOowoLOL40JMI86qTh2V6c/yfCNPjwu9ezOP+XX682r/NWMfHbkghD
vZ1NId04/iehw0Szox4V5K9yEu4dfNBYHE56VE3CG8Hm4IsfuP+TcPT6pGOj
2vP7OkmY0r/L+nmJxK9OEu588GtSdyGsn4SHje0a5xTw+E9C6t/tZ57w/I0k
WF582OviHeLLLAkfb976pbSe93/kz69s+BTA9XHbJJTvn/hfH15/OSRhsKPj
Qh9+P9U1CS4bVL+eGs35XxLM1J3Oj+D30XyTsPnuxMVDpnL8T0JDWtGszF7c
/0nQ0DlespOxMAlrclU6bH5O/SdLwqPCwOWPeT7OSsLM1qf/XhUQzk2CesfI
VVv5vFF+EuKevm4+87S0DRclYdiTLe9H/OT3CeXXlx6bsDqU/K1IwhfzLXMH
d+P6TxL6h+tYX5jJ8T8JTZN15/UeSfG+IQmz2k2fdm80zcdNSdh4Zefc8+60
H9achFMHj5ttHnugDbckYYW1ispcV+JfQQiNr7Mf3XhB+a+iEFtXd/fsdJ/r
QUL8ThAPtosi+7sJ8Xp0B1utaXxeRgi7BRo7n3wgrCbE1E5rg3wOER/qQkT2
Lpg1YjTxrSnE/qjBMZKnvH4Uojq7Y+HgCGrXFqKDt5beku+EdYQwsBhXMoff
H9YVQvBpyZmOwzm+CDFy260H7fl7BIZCXEstObKS66lGQuSOLA9yFBGfxkKM
bXL62zua39cUovsfnQKnr+SviRCn4q8rR3wnfZsJ4RqjV/X4EenXQgiroLra
I8/3tmErIYTTa/esnUh8W8vx61vu42dntWFbIWw1Or97WEb3sxPimMO9UaNj
aHw4CJHU3P3Drmoar85CaLe+ab/DnuuZQiid8MouXUTxx12Iw3EmxXsZewhh
oXulo8kY8sdbiAunvmZZ8fl8XyE6HZqME4coPgYIkdUpdu4OEdc/hEi9fGpU
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
ypr3Z2USXFh1583HucR3ppxvTz+lL/x9yCwJ9NOccp6WEL85cvsNbg5be4b3
U+X8hCx36OpI7XkSnOw7516zK5+vlPdnxF2pdTeKpwUSKDZflPbj+bdIzv/t
Z/tFtTQez0ng0m/pTNP/+P1ZCQxExj5l/P2yMgksV7SUjBFS/1VIkHryQYqO
BuUvlRL8+s9fuukC8V0lweso3zf751O8qZHzO1Zg4/CQ5odaCdKH9a1bEkL8
10nQdG5cJ2f+nlyDXD8Ns5Lqjej5jRL0clXpebUX8d8kwb4Bbrv/6XH+L4Fn
uYtnsznhZgmWx6qXXvSj+PNVfj/jUZU7tMnfFjm/N1ra+aoQ361yPYc/vn5/
Cr//JIVVwu1fAaxvRSmeNlR1EYh5P0AKvaR9PVS7EZ/dpAgwsTA1vUrXq0px
PPjI7rVnaP5Wk2KtLPv2dAPiT12K0u1ze+wOIf1rSvHtuOmXmw3kn5a8/eHo
v77GhLWleBk9MmSqBp8nlOJD/wtvRnWnfF5XiqquNu+EysS/vhTL7aZWawWm
tWFDKW6Ezi95243ajaSIL9BO0D1B/WcsRYjNWZXASMpfIcUeA4OjrUd5/S9F
j+AV4sDuNB7MpBgQsfrYTnXqHwsphl+qe7P+f9+7kGKL5qFvRX1K27C1FIsa
BSkBr3i/SopylfDNFzsS/3ZSOI1J2D84gr8nI8XAvXf/i1Tj+p8Ukzsq3sr7
yet/Kfpq3modWEjt7lIkdFX6l3yT97ek6N9RMuL+N8Lecn/aK/bIHMLzvxT2
BkYbTh0i/gOkuNT+6WXVf3z+QYq92SWxscdpfRAuxYOcHl2OV1D/Rcv7d+Tp
V48SiP94KbZLbD13iyRtWCjFj0XhDfqnxG1YIkVxQld3hVBql0lh0bP9qKa9
pP9MKYx/vDx2P5funyXFvAczMacb8ZsjxeC6mw/2V/B5GilOr3s5WIHf98yT
Qr++n/uG/pz/y/kYoLUkTofiZ4EUF6oPHivewuetpDALWx82ox/hc1LUTD4/
SMTfVyqRouzikPefdpLey6QoudA/z/I+4Qop1nkduN1kSvxWSuGsqu3zYRXn
/1LM33pl4eVQwjVyvNrE7JkX5/9SxCT1rMkYR7hOzv+iyiAD5r9BihSP0Ues
Moj/Rvn139eX6dygeNYkRaPzwOAjlsTfOylyfw+z6r+R4n+zFE92nb+rPpvz
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
28+mXeLz3nL+nlk+CL9Cem9Ng9V375FjeL2hkI7wEU2SfmMo31FMh+KecouR
LrI2rJyOT5/GPpfeXNeGu6Xj0MUX04tOarTxrZqOnErFxc1R49uwWjrslMoX
nw73bLtePR17on8YzM9KbsOa6bgXrTF/QxzlQ1rpwM4Pw92vk3600zFeVeV6
9DTSj046NkYrN0/n+oNuOjpbfj1/7Ajxr5+OA11ah+lvIX0ZpuPH5ns3XnH9
1ygdBRq5C0SPiW/jdJRZ3kz+/Zmeh3QINs8eNcSenmeSjj+a4oZNWoTN0mHW
+LyioZz4t0jH4ft2Bdmn+fyP3P9LwSPnaxLf1ukYO1X/6R4P6j/bdNgumNJh
VzzZb5eOz2vvWy7k78c7pCN+y5rcudU8/uX2bGzaEJpM9TPXdFyyefJnbTnl
9+7piFMdWx61nvTvkY4jia2DB35Y1oa90zHs8NOrI/q6tl3vm47Hm7x6JGlQ
vhqQjkWzx45rx/vHgnTEunx36sfjN1zeH6dkpwYP5/GfDg2b6+Lme8RvfDqa
U4aed8zl96Pk9uSnNnlkULskHUNVo556Def1fzq2vZwv7OdL/GemY3UTnq68
S/NdVjr61lvn7QGv/9PRfdsNyX8JfP5H/vyzRUe/qBHOS8eoWf1HTTpM/Oen
Y+qL7jvfXKX2Ann/R8384cj7P0Vyvks7FG3U4fq/vH8lkoNv+P83KkmHac7W
69rxvP5Px3B13VFaO4j/Crn9wpt+s15SfadSfn23VxNb9ga28V0lv/8sqwUd
ZoS14Zp0FO/rNNrhJem/Nh1h791GG9XR+qEuHSdfC68tLKL5vSEdLl0VRvZ6
yeNfzudyNdVJ+8iepnR4W0w82TSK/HuXjvk2V2RH6jj/T4dwrlKjhgbn/+nI
vj1q0EU+j9CSjuhTia7KB6h/W9Mxwn74zd2L+PxvBu6Yrdm3ZCrdXzEDn//9
uHjlPWHlDGwbKr1vGUn91S0DAfk+z7SdqV01A48WBx/+9pL4VsvAp7kHfrrs
J/2rZ2BG1KXM4pfEt2YGsl9eyNbhfForAyG7nJ97VVL80c5AuDB/X5Y16VUn
A0Yznj08H23Xxq9uBuJ0h61QvhDShvUz4PVz5EXdlYQNM7B33KGFDk82tWGj
DJysj9z/abNjG/5/PF19OBVftEaS9CVJiiRJkhCSoixCkiRJQpIkSSUhlSRJ
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
P4EH1zrChw2ZhfgcJfyGNY5Hb2E8Pc4DVYkGFb2zyPeTPFjveKzmmjSORyL5
ffDqsk1DkP9JPHgmkv5p4YD6coYH2/WFsfE/8HqpPDg/qjfCg1tfl0b04NnJ
FuaFx6CdwQO/Vr+6GblY/8nkwcG/+7/qXEf+Z/FgzfTNoaoHEf9sHtjZbvcQ
XOLq/zz48XFP0FaKq//z4Oj37HHCCq7+z4OL734H01vx/eMVgu+nmXbtZog/
n/jjvPPD7/ty9X8ebNB4bNvP5Z8UD7bd/+t+bCa3/x/Rv6c6rZ9OY/wV8+AI
3SBjeAz5d40HkQNRYq0bOP8t4MGdIVcP5YxC/SniweFra+P2+2C8LOaByzEV
9RftiFcJD3pmBX77mojHS3kw/3XCQj8JxL+M6L/phra2HORzBQ/SsrRVTx7C
/KeSB9WGGw32qKB9jweuUy5NrUzE8bnPA52qgNUJQzUG7WpiP9Zyiq1CftXw
IOUQu0TpO+L/mAcWlYc0F8ng+6k6HoS82RyqpIN41pPxaZg5324/4v+UB6Y/
3ll/S+Lq/zwo+/Zvd6ky2k3E/zdLCd9YcvV/HhyfPu531Wiu/s+DtireyoSr
mP+08uARa296RoT5WRsPPo/J6FzFw/63Nzx4a7zpVQm3nqqDB3m/Pua6cfsT
dPJgz1GfKZHeOB/u4sGrcZJWnZsRz24SL781nmxSxn7AjzxQCVAeMGxHPfrM
gxg9pv66B45HLw9inTvKTBei/Y0HV2/1JitkoD/08WATzKAvjsfx/MkDYXJt
cosx4v+LBxObtZK3dvXd+n/7Dxn/0dS1ryE4v/zHg8LT0+40XkT9HcKH7nHD
9sx8hvNTCT48yq3p9IpH/kvyIfbCt0u6sVz9nw+5PNPEn1z+I8OHRnPPlJhg
rv7PhyvWY2bPVeTq/3xgldY8mNCK+j+aD/oGK0Ajgqv/8+H7lt3Dplij/svz
4aPVv7987nscCnwIPxP+bJ0zPv8EPiSIxlVXjUX9V+LD6vObXWueoz2JDy/k
X6+x+Yz4q/BBUTNeIOXPrf/nw1HIrlXSRHyn8WGq7Ll3meaoVzP4cCu6/96B
MPw/NT7U+5gekvmLeM8mtnekqVU86pc6H3LW8KelVeH1NfmgQJUOHG/ivlfK
B6Oe5RFrKjC/mMeHCS6lD6Stsd6gw4fKjkDTiZ+Qn7p88L6nbnvIDfFcyIc/
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
9NwQr7sULMnrrehcjny+R/IJxeqKPfPRrqLgU+6GWUdH43jdp8Dqiomu8SnU
nwcUPNhm2tDahPyopuCJfpCKdhjm/w8J3jMdJjUfix98nhpyP/zA7AJHjL+P
SL5ZOuOZpB5Xfyb5yFxHSKlD/a+lQEpBsy9yLPK/joKov0cOKHL7zzwhfAud
eLaB60+sJ/ryziC6lMO/gYLqX0qKa86jPz2lwNtDWZC3Hf3tGYn3Ycc++61D
/W8k8TG7LasuFPPP5xS8VYtUsfyH/Gsi8Wu75frxcqgnzQSPn2/fpfsg/i1k
/rKuMNyvA8fnBQVXVv9LfrmBW+9O8pGyx3VS5qgvr8h8Y/upEL0y5HMriR+/
Xhs3cvsFvyb4PXOtVR+F49VG4sX7k4p+XP26nYLkLZmPwv3x+BsKjq0+suJ1
APbLvCX5wmVea/xs7H/ooGBpavmvB/p5g/Y7ks/1N/xn9Q7nX50ULNxo9eOq
DOr/e6JPpVdr1RUR/y4K+i89+jSZsz8Q/ncd3719B+LdTeL9+RNPZjqi3UPy
R7UzF3xkUX8+kvytetyiFlfE/xPJn5o01z96yr1/J/7auy3ipi32/3+hYFvp
fKnw7ZgP9lIgmqY1b0Ih4vuVguVeXt1DLqDefKMgJvmHh/UxtL9TsDL6ZVph
OcbfPgoyFu4Nyp+L4/mDxAu/+yejHJDvPylI8is1bOtEfPvJ/PpZ3Xn1XZgf
/SLzlRCpQ1W+iPdvCja8WTbHOhJ//4fMT2ec+r3rTdig/ZfYOz8tKdyL+f8/
4i8ajcfvvcR+7wGSX/Ly1ZQ5vR9Cw9K/LpIJgRgvh9Kg/lDap1XyzqAtQYPT
8CMvy7n9h4fRsFjlLv9CDo6HJA0Js9UONSnh8eE0yEcV+h15hnovRcPy+AEl
++vob9I0tJRvGKNehd+bkaEhadzEoSXxuD/OCBpWzNvxUJL7HvNIGkTJv9Qe
DkN8ZWkYd2eywblXWI+Wo0FY7ErpBqA9ioaMF4WC4Vy9bjQN/svO8synoT+M
oeHZ6UiVH6+Q/2NpMP14SHftE9SbcTTs+DHuoOIr1Bt5Yme5T5CTR/zH09C0
6Elc+Fj0FwUalOtLDjuV4HxRkQa/pMWslxfmPxNoiA9Z3iDrgfhPpEk+knRs
gwPyUYmGigG1fIki5K8yDW/m7+q7/r5i0J5E8Oy+oRj1EPGeTMOPcXvU9e6g
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
PHbnzz0TNmXB/wHrDzob
        "]]}, {
       RGBColor[0.6, 0.24, 0.4428931686004542], 
       LineBox[CompressedData["
1:eJxc3X98VlX9APBFRGREi8gWkS0iWka0iHAR6hMhLUWaSDgJcSLiRMSJiBMR
HxFxIuJExImIExEnIk6cOHHaIqJFRMuIFhEtIlpEtIhoEdm3b885e+2+n3/G
m8/5dc8999x7z7179ompN46/pltWVtbwAVlZ//8z82k/P/Pz9nPDf6SS7omz
cV+cg/unZv7v5+Xh/3NTY//z/5/i4AF4YPh5c8g/COfhs/FgPATn4y/goamx
ifZ+Mfyc8Ubm57DUxkR7v4SHh5+3hPTnBE8ILsBfpv4R+Ct4JD4Xn4fPZ3tS
qY1dnU5lfjYuD+m/GtJNzziNs0YRx1lfI46zRhPHWRekBifad0FqZqJ/xySd
HhN+Lgz9+fWk0zirMJQT9k8aZ32DOM66MOPGVaH9FxK/KNR3V4hflFradXuy
xqYGJ9o/NvxcEvJfzP65OPy8J/TPuKTT46j/m8Hh+EvjrKKkUziNG4s4fi9J
He3a/hROXxLShfHdiLPGJ52KjuMBN+KsS5NO4TRuvDQ5nrImhJ+FIf+EVK+u
8TTxRpz1LfLjNG7EWRPJj9O4cWKyfVmXJefLFE5fFn4uDv0ffV+ovzjpFE7j
RtzZTzE/TuPGy1O7Eu2flNwfqUnJ+TONG3HWt8PPuP9xGjfirMnkx+nJyfY1
Tmb+uSK0M8wnqSuS82s6xsPx3BjcefxNSTqF07gRZ11JfpzGjVdy/JYk90cu
TuESnC4JP8P+rcaNuBVnXRXaEc6nuTh1VbL/S65ifODqmD/Mf424FWdNTToX
p6LD/FSC07gaN+LWqamlifFzdfh5R6g/uLEq7M+rk+lLcBpX40bcSn1Z00I5
4fyUi1PTkuerkmnMjyF9nJ+qcSNuxVnXJJ2LU7gEp3E1bsSt1zB/Tk+eX3On
Mx9ND+nC8VOC07gaN+JWnHVt0rnBjSvD9l+bnG9KQrzzeob01aRvJH1rdLx+
KE06F6dwCU7jatyIW0uT/Z11Hf1/Xfj/ePxdx/GP07g65o/zPW7FWTOSzsUp
XILTM6g/xGN/N0bH7cdZ1yedi1O4BKdxNW7ErdfT/zMzP+P1a+7M5HyawiU4
HfLH/VWNG6Nj/+OsG5LOxSlcgtM30P83cL0Q08f5H2fNSjoXp3AJTuNq3Ihb
Z6V6vaNLe7NuDO0M833ujcn5OoVLQvo4f6dxNW6MjvMfzipLOhvnliXny/wQ
j9czqeB4v1hUlryfKSF9WUz/UNh/Mb40E6+MvjeMZ1yLG3EzbsXtZamGrtuT
dVPqdFdn35Sa39W5/4133Z58nMJFuASX4TSuxNW4FjfeFLYjP9N/zTelJifO
9yGeXpSJtwc3PhL2/+xkPBvnRt+fSZ+PU7gIl+Cy2an9Xfs3HeKp5WH/k776
v+kT248bcTNuxe2h/Kyp4fi/OXhyGP84F+fj1M2p/l23p+jm1PzE/g/p0+kw
/qPD9qVxJa7GtbgRN+NW3H5zsv+z5iT7JxvnzgnpQn/l4xQuwiVzkvWXEU8T
r8TVc5LtrSXeiJtJ3xrruzVsP866JelsnIvzcQoX4RJcdktqctf2pW9JjpfK
kD6Ol2pcG8u7M2w/bsatuB1nzU06G+fOTc6H+Tg1l/kPl8TywvxUhtO4Elfj
2uhZYftxM27F7XNTI7u2P+vWzM94fsi+NXl+yL01NbLr+To/pq8I45/8RbgE
l+E0rsTVtKcWN5K+GbfidpxVzvbjXJyPU7gIl+Cy8mT70+Wp1Ynxj6txbSgv
67ZwfRMd5uNm3IrbcdZtSWfj3NuS83s+Tt2WPN8W4ZJQXjyfluF0dJz/cDWu
xY24Gbfi9tuY/+elGhLzP87F+fNCvpvC+MdFuASX4TSuxNXR8fifx/UP8eZ5
qZGJ83+Ix+O1Pbjx4bD/b0/Gs29PxnOJ5xNPES+KvjuMf1x2e2r1//4Rx//t
yfNtJa4O+eP5shY3RofzSzNuxe04a37S2TgX589Pnr9SxItwCS7DaVyJq3Et
bsTNuBW30/6sO5LHczbOxfl3hHzx+g8X4RJchtO4EldTf+0dyfHdiJtxayiv
c/zH8uP5f0HS2TgX5+MULsIluGxB8vohvSB5Pq7E1SF/PN5qcSNujvXF8z9u
x1l3Jp2Nc+9Mtif/zuT8ngrp43xeRPqSWF44X5XhNK7E1bgWN+Jm3Brc+FjY
/juT59OsdNI9cTbOwbk4L52sPx8XBMf5MIULcVE6OV8Wp5Pno5JYfjhflOIy
XE75aVyBK3EVrsY1uBbXsz2NsX1hvDWlk+OnGbfgVtyG23EH9WXdlXRPnH1X
Mn/OXan+if0f0sf1m7y7uF+I5YXzVQFO4UJchItxCS7FZbj8ruT8mMYVuJLt
r8LVuAbX4nrciJtwM/3ZchfrO7H/w/zTFh3GWzvuwFkLk+6Js3EOzsV5OB8X
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
hBfjik3J658lxJdS/jJciZfjFXglrsKromeG8z9esyn5/dbVxNfidXg9rsEb
8Ea8CdfizbSvDm9h/Ncz3rYy/hs4nt7EjXgb3o534Ca8E+/Cu2l/M/G38B68
F7fgfXg/PoBb8UF8iPYexm2bWP/vzJ/Zn0c790/Gxyi/HR/HJ/BJ3IFP4dP4
bdqf9WLS3V5Mpu+Oe+Ce+AzcC/fG2bgP7emLzyR9DvF+L7L+H9OH6/GzcG5n
eZn9MwAPjI7f/4fz8Nl4MB7yYvL3w/PxUDwMD6e8AjwCj8Tn4RQehUdT/xhc
+GLy9wEujPmDx0bH9X/2XxEejyfgibgYT8KT8RTGSwmeiqeRfzouxTPwTDwL
l+HZeA6eS/vKYzyst8xjf8yP8bAesACn8UK8CC+ODp+K6PD3JJZ0Hl+Z/b0U
L3sxeT6rxMvxCryS8qrwKrwar8HVeC1eR/3r2d4a4hvwRsrbRP5a9u9mXIe3
4Hq8FTfgNxk/jXgb3o53UF4T3ol34d24Gb9FfXvwXtzCfL8vlndtOP/jA9Hj
M/ujFR/Eh/Bh3BZ9fab8I/ho9Ohw/n8xdbLr+GgnfhyfwCdxBz6FT+O3cVZt
0u+oTbavG34n6bsTfxfxHtHXZfxu3DP6mozfE5y+JVxPEH9vZ/5wfRE9NhN/
H+6N31+bOt61vdn4A7gP+T+I++IP4TPxh3EO/gj198Mfxf3xxyjvrOjxmf76
OM7Fn8AD8CfxQPwpPAh/ujbV53//iO9P4s/gs8n/WTwYfw4PwZ/H+fgL1D8U
fzGmvyqTflhtakDX+JdiPDcTH47PwQX4y3gE/goeic/F5+Hza1PdurY3Rfyr
eBT+Gh6NL8Bj8NdxIf4GvpD2XoTHsn8uZn4Yx/HwTVwUPSmT/hI8Hl+KJ+Bv
4YnRBZn6LqtNnep6vBYTvxxPwt/Gk/EVeAq+Epfgq/BU2ns18Wm1qTMyDc/8
/zW1qSNd00+P6Sdm0l+LSzn+rsMz8PV4Jr4Bz2I83cj4KSN+E56Nb8Zz8C14
Lr4Vl+PbaN88fDuez/begRfgO3Ea34UX4rvxInwPXozv5XitIH4fXoLvx0vx
A3gZfhBX4ofwctr7MF5B+kfwSvworsKP4VX4cbwaP4HX4CdpfzV+ivRr8dN4
HX4Gr8fP4hr8HO3ZgJ/HG2P+azL5X6hNnd01vinGR2fiL+Ja/BLejF/GdfgV
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
        "]]}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {None, None}, AxesOrigin -> {0, 0.}, 
    ImageSize -> {251., Automatic}, Method -> {}, 
    PlotRange -> {{0, 8758.}, {-5346.97830828503, 12192.824156391207`}}, 
    PlotRangeClipping -> True, 
    PlotRangePadding -> {{175.16, 175.16}, {350.79604929352473`, 
     350.79604929352473`}}],
   TemplateBox[{"\"COST\"", "\"BATTERY\""}, "PointLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"PointLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24720000000000014`", ",", "0.24`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.24`", ",", "0.4428931686004542`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"LegendMarkers", "\[Rule]", "False"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.605224323900832*^9, 3.60522452543536*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"bat", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "2000"}], "]"}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<BATTERY\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6052246278182154`*^9, 3.6052246649683404`*^9}, {
  3.6052248557492523`*^9, 3.6052248677459383`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {
      RGBColor[0.24720000000000014`, 0.24, 0.6], 
      PointBox[CompressedData["
1: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
+3//Hyxb4dA=
       "]]}, {}}, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes -> True, AxesLabel -> {None, None}, AxesOrigin -> {0, 0.}, 
    ImageSize -> {451., Automatic}, Method -> {}, 
    PlotRange -> {{0, 2000.}, {-6.423306331271306*^-12, 100.00000000000449`}},
     PlotRangeClipping -> True, 
    PlotRangePadding -> {{40., 40.}, {2.0000000000002185`, 
     2.0000000000002185`}}],"\"BATTERY\""},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.605224650944538*^9, 3.605224665905394*^9}, {
  3.605224861183563*^9, 3.6052248683959756`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["DayOfWeek"], "Input",
 CellChangeTimes->{{3.6052272737495537`*^9, 3.6052272773717613`*^9}}],

Cell[BoxData["DayOfWeek"], "Output",
 CellChangeTimes->{3.60522727857683*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<Calendar`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.605227288874419*^9, 3.6052273007340975`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"DayOfWeek", "::", "shdw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Symbol \[NoBreak]\\!\\(\\\"DayOfWeek\\\"\\)\[NoBreak] \
appears in multiple contexts \[NoBreak]\\!\\({\\\"Calendar`\\\", \
\\\"Global`\\\"}\\)\[NoBreak]; definitions in context \
\[NoBreak]\\!\\(\\\"Calendar`\\\"\\)\[NoBreak] may shadow or be shadowed by \
other definitions. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\
\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/shdw\\\", ButtonNote -> \
\\\"Calendar`DayOfWeek::shdw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6052273015241427`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", "Calendar`"}]], "Input",
 CellChangeTimes->{{3.605227312382764*^9, 3.605227319023144*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DayOfWeek", "[", 
  RowBox[{"{", 
   RowBox[{"2010", ",", "1", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6052273217412987`*^9, 3.6052273321948967`*^9}}],

Cell[BoxData["Friday"], "Output",
 CellChangeTimes->{3.605227332829933*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wData", "[", 
  RowBox[{"[", 
   RowBox[{"100", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6052273968295937`*^9, 3.605227408535263*^9}}],

Cell[BoxData["\<\"20100105 03:00\"\>"], "Output",
 CellChangeTimes->{3.605227410448373*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DateString", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"wData", "[", 
       RowBox[{"[", 
        RowBox[{"100", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Year\>\"", ",", "\"\<Month\>\"", ",", "\"\<Day\>\"", ",", 
        "\"\< \>\"", ",", "\"\<Hour\>\"", ",", "\"\<:\>\"", ",", 
        "\"\<Minute\>\""}], "}"}]}], "}"}], ",", "\"\<Year\>\""}], "]"}], "//",
   "ToExpression"}]], "Input",
 CellChangeTimes->{{3.6052274245761805`*^9, 3.605227469685761*^9}}],

Cell[BoxData["2010"], "Output",
 CellChangeTimes->{{3.6052274549689193`*^9, 3.6052274701437874`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Saturday", ",", "Sunday"}], "}"}], ",", 
   RowBox[{"DayOfWeek", "[", 
    RowBox[{"{", 
     RowBox[{"2014", ",", "3", ",", "30"}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6052276677880917`*^9, 3.6052276794667597`*^9}, {
  3.6052277123156385`*^9, 3.6052278059379935`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6052277698969316`*^9, 3.6052278064260216`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BuyPrice", "[", "400", "]"}]], "Input",
 CellChangeTimes->{{3.605227880197241*^9, 3.6052279190454626`*^9}}],

Cell[BoxData["0.051`"], "Output",
 CellChangeTimes->{{3.605227890897853*^9, 3.6052279195574923`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", "1000"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{"Print", "[", 
    RowBox[{"dayOfWeek", "[", "i", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6052282430619955`*^9, 3.60522826918749*^9}, {
  3.6052283272508106`*^9, 3.605228332703123*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Saturday", ",", "Sunday"}], "}"}], ",", 
   RowBox[{"dayOfWeek", "[", "50", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6052283594256516`*^9, 3.605228382782987*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.60522838336102*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"dayOfWeek", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{
       RowBox[{"Dimensions", "[", 
        RowBox[{"wData", ",", "1"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], "//", 
  "Timing"}]], "Input",
 CellChangeTimes->{{3.605230687173791*^9, 3.605230745280114*^9}, {
  3.6052310246820955`*^9, 3.6052310282973022`*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6058207996640635`*^9, 3.6058208074995117`*^9}}],

Cell[CellGroupData[{

Cell["Three-stage SP Test:", "Section",
 CellChangeTimes->{{3.6058255875909166`*^9, 3.605825612501342*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "Calendar`"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Definition", " ", "of", " ", "functions", " ", "to", " ", "work", " ", 
    "on", " ", "simulation", " ", 
    RowBox[{"part", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wData", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<wt_data.csv\>\"", ",", "\"\<CSV\>\"", ",", 
     RowBox[{"Path", "\[Rule]", 
      RowBox[{"NotebookDirectory", "[", "]"}]}], ",", 
     RowBox[{"\"\<HeaderLines\>\"", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solarRadi", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<solar.txt\>\"", ",", "\"\<Table\>\"", ",", 
     RowBox[{"Path", "\[Rule]", " ", 
      RowBox[{"NotebookDirectory", "[", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"markovChainMatrix", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.7", ",", "0.2", ",", "0.1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6", ",", "0.3", ",", "0.1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.4", ",", "0.1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stateProb", " ", "=", " ", 
   RowBox[{
    RowBox[{"markovChainMatrix", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ".", 
    RowBox[{"MatrixPower", "[", 
     RowBox[{"markovChainMatrix", ",", "10"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"randomStateSequence", " ", "=", " ", 
    RowBox[{"RandomChoice", "[", 
     RowBox[{
      RowBox[{"stateProb", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<N\>\"", ",", "\"\<A\>\"", ",", "\"\<M\>\""}], "}"}]}], 
      ",", 
      RowBox[{
       RowBox[{"Dimensions", "[", "wData", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Extract", " ", "wind", " ", "and", " ", "time", " ", "data"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"windSpeed", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"wData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "20"}], "]"}], "]"}], "/", "10"}], "*", 
    "0.44704"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coolingDegreeHours", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"wData", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "/.", 
      RowBox[{
       RowBox[{"-", "7777"}], "\[Rule]", "0"}]}], ")"}], "/", "10"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"heatDegreeHours", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"wData", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "3"}], "]"}], "]"}], "/.", 
      RowBox[{
       RowBox[{"-", "7777"}], "\[Rule]", "0"}]}], ")"}], "/", "10"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cloudOvercastPercentage", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"wData", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "3"}], "]"}], "]"}], ")"}], "/.", 
       RowBox[{
        RowBox[{"-", "7777"}], "\[Rule]", "0"}]}], ")"}], "/", "10"}], "/", 
    "100"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"year", "[", "t_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"DateString", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"wData", "[", 
          RowBox[{"[", 
           RowBox[{"t", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Year\>\"", ",", "\"\<Month\>\"", ",", "\"\<Day\>\"", ",", 
           "\"\< \>\"", ",", "\"\<Hour\>\"", ",", "\"\<:\>\"", ",", 
           "\"\<Minute\>\""}], "}"}]}], "}"}], ",", "\"\<Year\>\""}], "]"}], "//",
      "ToExpression"}], "\[IndentingNewLine]", ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"month", "[", "t_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"DateString", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"wData", "[", 
          RowBox[{"[", 
           RowBox[{"t", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Year\>\"", ",", "\"\<Month\>\"", ",", "\"\<Day\>\"", ",", 
           "\"\< \>\"", ",", "\"\<Hour\>\"", ",", "\"\<:\>\"", ",", 
           "\"\<Minute\>\""}], "}"}]}], "}"}], ",", "\"\<Month\>\""}], "]"}], 
     "//", "ToExpression"}], "\[IndentingNewLine]", ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"day", "[", "t_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"DateString", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"wData", "[", 
          RowBox[{"[", 
           RowBox[{"t", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Year\>\"", ",", "\"\<Month\>\"", ",", "\"\<Day\>\"", ",", 
           "\"\< \>\"", ",", "\"\<Hour\>\"", ",", "\"\<:\>\"", ",", 
           "\"\<Minute\>\""}], "}"}]}], "}"}], ",", "\"\<Day\>\""}], "]"}], "//",
      "ToExpression"}], "\[IndentingNewLine]", ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dayOfWeek", "[", "t_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"DayOfWeek", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"year", "[", "t", "]"}], ",", 
        RowBox[{"month", "[", "t", "]"}], ",", 
        RowBox[{"day", "[", "t", "]"}]}], "}"}], "]"}], "\[IndentingNewLine]",
      ")"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Define", " ", "Price", " ", "of", " ", "buying", " ", "and", " ", 
    RowBox[{"selling", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BuyPrice", "[", "t_", "]"}], ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Saturday", ",", "Sunday"}], "}"}], ",", 
        RowBox[{"dayOfWeek", "[", "t", "]"}]}], "]"}], ",", "0.051", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"7", "\[LessEqual]", " ", 
          RowBox[{"Mod", "[", 
           RowBox[{"t", ",", "24"}], "]"}], "<", "11"}], "||", 
         RowBox[{"17", "<", 
          RowBox[{"Mod", "[", 
           RowBox[{"t", ",", "24"}], "]"}], "\[LessEqual]", " ", "21"}]}], 
        ",", "0.099", ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"11", "\[LessEqual]", 
           RowBox[{"Mod", "[", 
            RowBox[{"t", ",", "24"}], "]"}], "\[LessEqual]", " ", "17"}], ",",
           "0.081", ",", "\[IndentingNewLine]", "0.051"}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SellPrice", "[", "t_", "]"}], ":=", " ", 
    RowBox[{"0.8", "*", 
     RowBox[{"BuyPrice", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Initialize", " ", "stages"}], ",", " ", 
    RowBox[{"currently", " ", "two", " ", 
     RowBox[{"stages", "."}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stageSize", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"availableResources", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", "stageSize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"demand", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "stageSize"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Initial", " ", "values", " ", "to", " ", 
    RowBox[{"parameters", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"airDensity", " ", "=", " ", "1.27"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"windTurbineCoefficientFactor", " ", "=", " ", "0.5"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"windTurbineRadius", " ", "=", " ", "5"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solarRadiationFactor", " ", "=", " ", "1.2"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solarPanelSize", " ", "=", " ", "100"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initBatt", " ", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", "15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"capBat", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "of", " ", "Available", " ", "Resources", " ", "at", " ", 
    "time", " ", 
    RowBox[{"t", ":", " ", 
     RowBox[{
     "electricity", " ", "power", " ", "from", " ", "wind", " ", "energy", 
      " ", "and", " ", "solar", " ", "energy"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AvailableResource", "[", "t_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"0.5", "*", "windTurbineCoefficientFactor", "*", 
       RowBox[{"windTurbineRadius", "^", "2"}], "*", "airDensity", "*", "Pi", 
       "*", 
       RowBox[{
        RowBox[{"windSpeed", "[", 
         RowBox[{"[", "t", "]"}], "]"}], "^", "3"}]}], "+", 
      RowBox[{"solarRadiationFactor", "*", "solarPanelSize", "*", 
       RowBox[{"solarRadi", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"t", ",", "24"}], "]"}], "+", "1"}], ",", 
          RowBox[{"month", "[", "t", "]"}]}], "]"}], "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"cloudOvercastPercentage", "[", 
          RowBox[{"[", "t", "]"}], "]"}]}], ")"}]}]}], "\[IndentingNewLine]", 
     ")"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "of", " ", "Local", " ", "Demand", " ", "at", " ", "time",
     " ", 
    RowBox[{"t", ":", " ", 
     RowBox[{
     "pick", " ", "a", " ", "random", " ", "integer", " ", "from", " ", 
      "1000", " ", "to", " ", "10000"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Demand", "[", "t_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"t", "\[Equal]", "18"}], ",", "100000", ",", 
        RowBox[{
         RowBox[{"AvailableResource", "[", "t", "]"}], "+", "1000"}]}], "]"}],
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pLossRate", " ", "=", " ", "1000"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"heatDegreeHours", "[", 
         RowBox[{"[", "t", "]"}], "]"}], "*", "pLossRate"}], "+", 
       RowBox[{
        RowBox[{"coolingDegreeHours", "[", 
         RowBox[{"[", "t", "]"}], "]"}], "*", "pLossRate"}], "+", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"500", ",", "5000"}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1000", ",", "10000"}], "}"}], "]"}], "*)"}], 
     "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "of", " ", "unit", " ", "cost", " ", "of", " ", 
    "reserving", " ", "electricity", " ", "in", " ", 
    RowBox[{"battery", " ", ":", " ", 
     RowBox[{"set", " ", "it", " ", "constant"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReserveCost", "[", "t_", "]"}], ":=", 
    RowBox[{"(", "0.02", ")"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "of", " ", "unit", " ", "cost", " ", "of", " ", 
    "transiting", " ", "electricity", " ", "to", " ", "or", " ", "from", " ", 
    RowBox[{"battery", " ", ":", " ", 
     RowBox[{"set", " ", "it", " ", "constant"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TransitionCost", "[", "t_", "]"}], ":=", 
    RowBox[{"(", "0.01", ")"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Function", " ", "of", " ", "optimization", " ", "of", " ", "simple", " ",
      "two"}], "-", "stage"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"B", "\[Rule]", 
     RowBox[{"C", ":", "1"}]}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"B", "\[Rule]", 
     RowBox[{"G", ":", "2"}]}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"G", "\[Rule]", 
     RowBox[{"B", ":", "3"}]}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"G", "\[Rule]", 
     RowBox[{"C", ":", "4"}]}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"R", "\[Rule]", 
     RowBox[{"B", ":", "5"}]}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"R", "\[Rule]", 
     RowBox[{"C", ":", "6"}]}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"R", "\[Rule]", 
     RowBox[{"G", ":", "7"}]}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StageMinimize", "[", 
    RowBox[{"t_", ",", "initBatt_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{"Minimize", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", "[", "3", "]"}], "+", 
            RowBox[{"x", "[", "4", "]"}]}], ")"}], "*", 
          RowBox[{"BuyPrice", "[", "t", "]"}]}], "+", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"initBatt", "+", 
            RowBox[{"x", "[", "3", "]"}], "+", 
            RowBox[{"x", "[", "5", "]"}], "-", 
            RowBox[{"x", "[", "1", "]"}], "-", 
            RowBox[{"x", "[", "2", "]"}]}], ")"}], "*", 
          RowBox[{"ReserveCost", "[", "t", "]"}]}], " ", "+", " ", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"initBatt", "+", 
            RowBox[{"x", "[", "3", "]"}], "+", 
            RowBox[{"x", "[", "5", "]"}], "+", 
            RowBox[{"x", "[", "1", "]"}], "+", 
            RowBox[{"x", "[", "2", "]"}]}], ")"}], "*", 
          RowBox[{"TransitionCost", "[", "t", "]"}]}], "-", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x", "[", "2", "]"}], "+", 
            RowBox[{"x", "[", "7", "]"}]}], ")"}], "*", 
          RowBox[{"SellPrice", "[", "t", "]"}]}], "+", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"randomStateSequence", "[", 
              RowBox[{"[", "t", "]"}], "]"}], "\[Equal]", "\"\<N\>\""}], ",", 
            RowBox[{"markovChainMatrix", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"randomStateSequence", "[", 
                RowBox[{"[", "t", "]"}], "]"}], "\[Equal]", "\"\<A\>\""}], 
              ",", 
              RowBox[{"markovChainMatrix", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"markovChainMatrix", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "1"}], "]"}], "]"}]}], "]"}]}], "]"}], "*", 
          RowBox[{"(", "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"y", "[", 
                RowBox[{"3", ",", "1"}], "]"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"4", ",", "1"}], "]"}]}], ")"}], "*", 
             RowBox[{"BuyPrice", "[", 
              RowBox[{"t", "+", "1"}], "]"}]}], "+", "\[IndentingNewLine]", 
            "\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"initBatt", "+", 
                 RowBox[{"x", "[", "3", "]"}], "+", 
                 RowBox[{"x", "[", "5", "]"}], "-", 
                 RowBox[{"x", "[", "1", "]"}], "-", 
                 RowBox[{"x", "[", "2", "]"}]}], ")"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"3", ",", "1"}], "]"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"5", ",", "1"}], "]"}], "-", 
               RowBox[{"y", "[", 
                RowBox[{"1", ",", "1"}], "]"}], "-", 
               RowBox[{"y", "[", 
                RowBox[{"2", ",", "1"}], "]"}]}], ")"}], "*", 
             RowBox[{"ReserveCost", "[", 
              RowBox[{"t", "+", "1"}], "]"}]}], "+", "\[IndentingNewLine]", 
            "\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"initBatt", "+", 
                 RowBox[{"x", "[", "3", "]"}], "+", 
                 RowBox[{"x", "[", "5", "]"}], "-", 
                 RowBox[{"x", "[", "1", "]"}], "-", 
                 RowBox[{"x", "[", "2", "]"}]}], ")"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"3", ",", "1"}], "]"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"5", ",", "1"}], "]"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"1", ",", "1"}], "]"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"2", ",", "1"}], "]"}]}], ")"}], "*", 
             RowBox[{"TransitionCost", "[", 
              RowBox[{"t", "+", "1"}], "]"}]}], "-", "\[IndentingNewLine]", 
            "\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"y", "[", 
                RowBox[{"2", ",", "1"}], "]"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"7", ",", "1"}], "]"}]}], ")"}], "*", 
             RowBox[{"SellPrice", "[", 
              RowBox[{"t", "+", "1"}], "]"}]}]}], ")"}]}], "+", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"randomStateSequence", "[", 
              RowBox[{"[", "t", "]"}], "]"}], "\[Equal]", "\"\<N\>\""}], ",", 
            RowBox[{"markovChainMatrix", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"randomStateSequence", "[", 
                RowBox[{"[", "t", "]"}], "]"}], "\[Equal]", "\"\<A\>\""}], 
              ",", 
              RowBox[{"markovChainMatrix", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"markovChainMatrix", "[", 
               RowBox[{"3", ",", "2"}], "]"}]}], "]"}]}], "]"}], "*", 
          RowBox[{"(", "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"y", "[", 
                RowBox[{"3", ",", "2"}], "]"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"4", ",", "2"}], "]"}]}], ")"}], "*", 
             RowBox[{"BuyPrice", "[", 
              RowBox[{"t", "+", "1"}], "]"}]}], "+", "\[IndentingNewLine]", 
            "\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"initBatt", "+", 
                 RowBox[{"x", "[", "3", "]"}], "+", 
                 RowBox[{"x", "[", "5", "]"}], "-", 
                 RowBox[{"x", "[", "1", "]"}], "-", 
                 RowBox[{"x", "[", "2", "]"}]}], ")"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"3", ",", "2"}], "]"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"5", ",", "2"}], "]"}], "-", 
               RowBox[{"y", "[", 
                RowBox[{"1", ",", "2"}], "]"}], "-", 
               RowBox[{"y", "[", 
                RowBox[{"2", ",", "2"}], "]"}]}], ")"}], "*", 
             RowBox[{"ReserveCost", "[", 
              RowBox[{"t", "+", "1"}], "]"}]}], "+", "  ", 
            "\[IndentingNewLine]", "\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"initBatt", "+", 
                 RowBox[{"x", "[", "3", "]"}], "+", 
                 RowBox[{"x", "[", "5", "]"}], "-", 
                 RowBox[{"x", "[", "1", "]"}], "-", 
                 RowBox[{"x", "[", "2", "]"}]}], ")"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"3", ",", "2"}], "]"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"5", ",", "2"}], "]"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"1", ",", "2"}], "]"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"2", ",", "2"}], "]"}]}], ")"}], "*", 
             RowBox[{"TransitionCost", "[", 
              RowBox[{"t", "+", "1"}], "]"}]}], "-", "\[IndentingNewLine]", 
            "\t\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"y", "[", 
                RowBox[{"2", ",", "2"}], "]"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"7", ",", "2"}], "]"}]}], ")"}], "*", 
             RowBox[{"SellPrice", "[", 
              RowBox[{"t", "+", "1"}], "]"}]}]}], ")"}]}], "+", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"randomStateSequence", "[", 
              RowBox[{"[", "t", "]"}], "]"}], "\[Equal]", "\"\<N\>\""}], ",", 
            RowBox[{"markovChainMatrix", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "3"}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"randomStateSequence", "[", 
                RowBox[{"[", "t", "]"}], "]"}], "\[Equal]", "\"\<A\>\""}], 
              ",", 
              RowBox[{"markovChainMatrix", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "3"}], "]"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"markovChainMatrix", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "3"}], "]"}], "]"}]}], "]"}]}], "]"}], "*", 
          RowBox[{"(", "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"y", "[", 
                RowBox[{"3", ",", "3"}], "]"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"4", ",", "3"}], "]"}]}], ")"}], "*", 
             RowBox[{"BuyPrice", "[", 
              RowBox[{"t", "+", "1"}], "]"}]}], "+", "\[IndentingNewLine]", 
            "\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"initBatt", "+", 
                 RowBox[{"x", "[", "3", "]"}], "+", 
                 RowBox[{"x", "[", "5", "]"}], "-", 
                 RowBox[{"x", "[", "1", "]"}], "-", 
                 RowBox[{"x", "[", "2", "]"}]}], ")"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"3", ",", "3"}], "]"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"5", ",", "3"}], "]"}], "-", 
               RowBox[{"y", "[", 
                RowBox[{"1", ",", "3"}], "]"}], "-", 
               RowBox[{"y", "[", 
                RowBox[{"2", ",", "3"}], "]"}]}], ")"}], "*", 
             RowBox[{"ReserveCost", "[", 
              RowBox[{"t", "+", "1"}], "]"}]}], "+", "\[IndentingNewLine]", 
            "\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"initBatt", "+", 
                 RowBox[{"x", "[", "3", "]"}], "+", 
                 RowBox[{"x", "[", "5", "]"}], "-", 
                 RowBox[{"x", "[", "1", "]"}], "-", 
                 RowBox[{"x", "[", "2", "]"}]}], ")"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"3", ",", "3"}], "]"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"5", ",", "3"}], "]"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"1", ",", "3"}], "]"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"2", ",", "3"}], "]"}]}], ")"}], "*", 
             RowBox[{"TransitionCost", "[", 
              RowBox[{"t", "+", "1"}], "]"}]}], "-", "\[IndentingNewLine]", 
            "\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"y", "[", 
                RowBox[{"2", ",", "3"}], "]"}], "+", 
               RowBox[{"y", "[", 
                RowBox[{"7", ",", "3"}], "]"}]}], ")"}], "*", 
             RowBox[{"SellPrice", "[", 
              RowBox[{"t", "+", "1"}], "]"}]}]}], ")"}]}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", "1", "]"}], "+", 
           RowBox[{"x", "[", "4", "]"}], "+", 
           RowBox[{"x", "[", "6", "]"}]}], "\[Equal]", 
          RowBox[{"Demand", "[", "t", "]"}]}], "&&", "\[IndentingNewLine]", 
         RowBox[{"0", "\[LessEqual]", " ", 
          RowBox[{"initBatt", "+", 
           RowBox[{"x", "[", "5", "]"}], "+", 
           RowBox[{"x", "[", "3", "]"}], "-", 
           RowBox[{"x", "[", "2", "]"}], "-", 
           RowBox[{"x", "[", "1", "]"}]}], "\[LessEqual]", " ", "capBat"}], "&&",
          "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", "7", "]"}], "+", 
           RowBox[{"x", "[", "5", "]"}], "+", 
           RowBox[{"x", "[", "6", "]"}]}], "\[Equal]", 
          RowBox[{"AvailableResource", "[", "t", "]"}]}], "&&", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"x", "[", "3", "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"x", "[", "4", "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"x", "[", "5", "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"x", "[", "6", "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"x", "[", "1", "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"x", "[", "2", "]"}], "\[GreaterEqual]", "0"}], "&&", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"y", "[", 
            RowBox[{"1", ",", "1"}], "]"}], "+", 
           RowBox[{"y", "[", 
            RowBox[{"4", ",", "1"}], "]"}], "+", 
           RowBox[{"y", "[", 
            RowBox[{"6", ",", "1"}], "]"}]}], "\[Equal]", 
          RowBox[{"Demand", "[", 
           RowBox[{"t", "+", "1"}], "]"}]}], "&&", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"initBatt", "+", 
             RowBox[{"x", "[", "3", "]"}], "+", 
             RowBox[{"x", "[", "5", "]"}], "-", 
             RowBox[{"x", "[", "1", "]"}], "-", 
             RowBox[{"x", "[", "2", "]"}]}], ")"}]}], "\[LessEqual]", " ", 
          RowBox[{
           RowBox[{"y", "[", 
            RowBox[{"5", ",", "1"}], "]"}], "+", 
           RowBox[{"y", "[", 
            RowBox[{"3", ",", "1"}], "]"}], "-", 
           RowBox[{"y", "[", 
            RowBox[{"2", ",", "1"}], "]"}], "-", 
           RowBox[{"y", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "\[LessEqual]", " ", 
          RowBox[{"capBat", "-", 
           RowBox[{"(", 
            RowBox[{"initBatt", "+", 
             RowBox[{"x", "[", "3", "]"}], "+", 
             RowBox[{"x", "[", "5", "]"}], "-", 
             RowBox[{"x", "[", "1", "]"}], "-", 
             RowBox[{"x", "[", "2", "]"}]}], ")"}]}]}], "&&", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"y", "[", 
            RowBox[{"7", ",", "1"}], "]"}], "+", 
           RowBox[{"y", "[", 
            RowBox[{"5", ",", "1"}], "]"}], "+", 
           RowBox[{"y", "[", 
            RowBox[{"6", ",", "1"}], "]"}]}], "\[Equal]", 
          RowBox[{"AvailableResource", "[", 
           RowBox[{"t", "+", "1"}], "]"}]}], "&&", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"3", ",", "1"}], "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"4", ",", "1"}], "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"5", ",", "1"}], "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"6", ",", "1"}], "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"7", ",", "1"}], "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"1", ",", "1"}], "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"2", ",", "1"}], "]"}], "\[GreaterEqual]", "0"}], "&&", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"y", "[", 
            RowBox[{"1", ",", "2"}], "]"}], "+", 
           RowBox[{"y", "[", 
            RowBox[{"4", ",", "2"}], "]"}], "+", 
           RowBox[{"y", "[", 
            RowBox[{"6", ",", "2"}], "]"}]}], "\[Equal]", 
          RowBox[{"Demand", "[", 
           RowBox[{"t", "+", "1"}], "]"}]}], "&&", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"initBatt", "+", 
             RowBox[{"x", "[", "3", "]"}], "+", 
             RowBox[{"x", "[", "5", "]"}], "-", 
             RowBox[{"x", "[", "1", "]"}], "-", 
             RowBox[{"x", "[", "2", "]"}]}], ")"}]}], "\[LessEqual]", " ", 
          RowBox[{
           RowBox[{"y", "[", 
            RowBox[{"5", ",", "2"}], "]"}], "+", 
           RowBox[{"y", "[", 
            RowBox[{"3", ",", "2"}], "]"}], "-", 
           RowBox[{"y", "[", 
            RowBox[{"2", ",", "2"}], "]"}], "-", 
           RowBox[{"y", "[", 
            RowBox[{"1", ",", "2"}], "]"}]}], "\[LessEqual]", " ", 
          RowBox[{"capBat", "-", 
           RowBox[{"(", 
            RowBox[{"initBatt", "+", 
             RowBox[{"x", "[", "3", "]"}], "+", 
             RowBox[{"x", "[", "5", "]"}], "-", 
             RowBox[{"x", "[", "1", "]"}], "-", 
             RowBox[{"x", "[", "2", "]"}]}], ")"}]}]}], "&&", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"y", "[", 
            RowBox[{"7", ",", "2"}], "]"}], "+", 
           RowBox[{"y", "[", 
            RowBox[{"5", ",", "2"}], "]"}], "+", 
           RowBox[{"y", "[", 
            RowBox[{"6", ",", "2"}], "]"}]}], "\[Equal]", 
          RowBox[{
           RowBox[{"AvailableResource", "[", 
            RowBox[{"t", "+", "1"}], "]"}], "/", "2"}]}], "&&", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"3", ",", "2"}], "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"4", ",", "2"}], "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"5", ",", "2"}], "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"6", ",", "2"}], "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"7", ",", "2"}], "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"1", ",", "2"}], "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"2", ",", "2"}], "]"}], "\[GreaterEqual]", "0"}], "&&", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"y", "[", 
            RowBox[{"1", ",", "3"}], "]"}], "+", 
           RowBox[{"y", "[", 
            RowBox[{"4", ",", "3"}], "]"}], "+", 
           RowBox[{"y", "[", 
            RowBox[{"6", ",", "3"}], "]"}]}], "\[Equal]", 
          RowBox[{"Demand", "[", 
           RowBox[{"t", "+", "1"}], "]"}]}], "&&", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"initBatt", "+", 
             RowBox[{"x", "[", "3", "]"}], "+", 
             RowBox[{"x", "[", "5", "]"}], "-", 
             RowBox[{"x", "[", "1", "]"}], "-", 
             RowBox[{"x", "[", "2", "]"}]}], ")"}]}], "\[LessEqual]", " ", 
          RowBox[{
           RowBox[{"y", "[", 
            RowBox[{"5", ",", "3"}], "]"}], "+", 
           RowBox[{"y", "[", 
            RowBox[{"3", ",", "3"}], "]"}], "-", 
           RowBox[{"y", "[", 
            RowBox[{"2", ",", "3"}], "]"}], "-", 
           RowBox[{"y", "[", 
            RowBox[{"1", ",", "3"}], "]"}]}], "\[LessEqual]", " ", 
          RowBox[{"capBat", "-", 
           RowBox[{"(", 
            RowBox[{"initBatt", "+", 
             RowBox[{"x", "[", "3", "]"}], "+", 
             RowBox[{"x", "[", "5", "]"}], "-", 
             RowBox[{"x", "[", "1", "]"}], "-", 
             RowBox[{"x", "[", "2", "]"}]}], ")"}]}]}], "&&", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"y", "[", 
            RowBox[{"7", ",", "3"}], "]"}], "+", 
           RowBox[{"y", "[", 
            RowBox[{"5", ",", "3"}], "]"}], "+", 
           RowBox[{"y", "[", 
            RowBox[{"6", ",", "3"}], "]"}]}], "\[Equal]", 
          RowBox[{
           RowBox[{"AvailableResource", "[", 
            RowBox[{"t", "+", "1"}], "]"}], "/", "4"}]}], "&&", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"3", ",", "3"}], "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"4", ",", "3"}], "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"5", ",", "3"}], "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"6", ",", "3"}], "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"7", ",", "3"}], "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"1", ",", "3"}], "]"}], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"2", ",", "3"}], "]"}], "\[GreaterEqual]", "0"}]}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "3", "]"}], ",", 
        RowBox[{"x", "[", "4", "]"}], ",", 
        RowBox[{"x", "[", "5", "]"}], ",", 
        RowBox[{"x", "[", "6", "]"}], ",", 
        RowBox[{"x", "[", "7", "]"}], ",", 
        RowBox[{"x", "[", "1", "]"}], ",", 
        RowBox[{"x", "[", "2", "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"3", ",", "1"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"4", ",", "1"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"5", ",", "1"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"6", ",", "1"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"7", ",", "1"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"1", ",", "1"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"2", ",", "1"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"3", ",", "2"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"4", ",", "2"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"5", ",", "2"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"6", ",", "2"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"7", ",", "2"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"1", ",", "2"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"2", ",", "2"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"3", ",", "3"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"4", ",", "3"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"5", ",", "3"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"6", ",", "3"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"7", ",", "3"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"1", ",", "3"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"2", ",", "3"}], "]"}]}], "}"}]}], "]"}], 
    "\[IndentingNewLine]", ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6040903810218115`*^9, 3.6040904250083275`*^9}, {
   3.604090582596341*^9, 3.6040905915768547`*^9}, {3.6040914535951595`*^9, 
   3.604091493605448*^9}, {3.6040990387680063`*^9, 3.6040990392930365`*^9}, {
   3.604100627103854*^9, 3.604100659143687*^9}, {3.604100801623836*^9, 
   3.6041008984763756`*^9}, {3.604152105195197*^9, 3.604152172374039*^9}, {
   3.604152293968994*^9, 3.6041523151892076`*^9}, {3.6041524666478705`*^9, 
   3.604152474539322*^9}, {3.604152505030066*^9, 3.6041526103540897`*^9}, {
   3.6041527249666457`*^9, 3.604152831673749*^9}, {3.6041530261438723`*^9, 
   3.6041530314631763`*^9}, {3.6041532547839494`*^9, 
   3.6041533001495442`*^9}, {3.6041535995236673`*^9, 3.604153634593673*^9}, {
   3.6041536759470387`*^9, 3.6041536793922358`*^9}, {3.604153745209*^9, 
   3.604153769563393*^9}, {3.604154206191367*^9, 3.6041542797575746`*^9}, {
   3.604154526303676*^9, 3.6041545668229938`*^9}, {3.6041547856575108`*^9, 
   3.6041548406926584`*^9}, {3.604154921275267*^9, 3.604154977363475*^9}, {
   3.604155062846365*^9, 3.6041550648684807`*^9}, {3.6041563074305506`*^9, 
   3.604156313569902*^9}, {3.604156430222574*^9, 3.6041564440073624`*^9}, {
   3.60415649414123*^9, 3.6041566613137918`*^9}, {3.60415691373623*^9, 
   3.6041569274220123`*^9}, {3.6041569740206776`*^9, 
   3.6041570257486362`*^9}, {3.604166516543479*^9, 3.6041665629461327`*^9}, {
   3.604188032569934*^9, 3.6041880329199543`*^9}, {3.604188175560113*^9, 
   3.604188282310219*^9}, {3.604188618486447*^9, 3.6041886250968246`*^9}, {
   3.604190037784626*^9, 3.6041901868911543`*^9}, {3.6041907511224265`*^9, 
   3.6041908532212667`*^9}, {3.6041908962457275`*^9, 
   3.6041909152288127`*^9}, {3.604191412898278*^9, 3.604191421605776*^9}, {
   3.6041936026585255`*^9, 3.6041936031385527`*^9}, {3.604194398895067*^9, 
   3.604194401656225*^9}, {3.604195092825758*^9, 3.60419517609052*^9}, {
   3.604195432886208*^9, 3.6041954330892196`*^9}, {3.604196248661868*^9, 
   3.604196268352994*^9}, {3.6041964588828917`*^9, 3.604196462682109*^9}, {
   3.6041975942918334`*^9, 3.6041976054334707`*^9}, {3.6041977455394845`*^9, 
   3.604197747051571*^9}, 3.6041990769576373`*^9, {3.60419944940594*^9, 
   3.6041994746013813`*^9}, {3.6041996267350826`*^9, 
   3.6041996269100924`*^9}, {3.604237302418082*^9, 3.6042373047782173`*^9}, {
   3.6042374300473824`*^9, 3.604237641078452*^9}, {3.6042378870965242`*^9, 
   3.604237944230792*^9}, {3.604238039946266*^9, 3.6042381127004275`*^9}, {
   3.60423816012114*^9, 3.604238160315151*^9}, {3.6042384029980316`*^9, 
   3.6042384042411027`*^9}, {3.604238509742137*^9, 3.604238658166627*^9}, {
   3.6042868420218744`*^9, 3.604287029877404*^9}, {3.6042871900962057`*^9, 
   3.604287192851363*^9}, {3.6042873421839046`*^9, 3.604287389719623*^9}, {
   3.604287532368782*^9, 3.6042875345249057`*^9}, {3.604287901110873*^9, 
   3.604287908551299*^9}, {3.6043233093001766`*^9, 3.6043233108841767`*^9}, {
   3.604323352283177*^9, 3.6043233530501766`*^9}, {3.6043235434981766`*^9, 
   3.604323556217177*^9}, 3.6043246208581767`*^9, 3.604324762329177*^9, {
   3.604324826065177*^9, 3.604324978653177*^9}, {3.604325038673177*^9, 
   3.604325065040177*^9}, {3.6043251776891766`*^9, 3.6043251789101768`*^9}, {
   3.6043253807931767`*^9, 3.6043253950351768`*^9}, {3.604325897969177*^9, 
   3.604325898311177*^9}, {3.6043261456041765`*^9, 3.604326147988177*^9}, {
   3.6043262975641766`*^9, 3.6043262981231766`*^9}, {3.6057458462809153`*^9, 
   3.605745885128137*^9}, {3.6057459373381233`*^9, 3.6057461275110006`*^9}, {
   3.605746222279421*^9, 3.605746231545951*^9}, {3.605751035184704*^9, 
   3.6057510644173756`*^9}, {3.6057511108440313`*^9, 
   3.6057511952228575`*^9}, {3.60575124789287*^9, 3.6057512685250497`*^9}, {
   3.605751541656672*^9, 3.605751541781679*^9}, {3.605751692392294*^9, 
   3.6057517607802052`*^9}, {3.6057524638794203`*^9, 3.605752465784529*^9}, {
   3.605752520585664*^9, 3.605752526701013*^9}, {3.6057525924767756`*^9, 
   3.6057526464858646`*^9}, {3.6057526766965923`*^9, 3.605752692443493*^9}, {
   3.605752744749485*^9, 3.605752806882039*^9}, {3.6057528498308306`*^9, 
   3.6057528684098935`*^9}, {3.605752906188054*^9, 3.6057529255601625`*^9}, 
   3.6058248388560915`*^9, {3.6058256206208057`*^9, 3.605825629114292*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1.2", "*", 
  RowBox[{"10", "^", 
   RowBox[{"-", "12"}]}]}]], "Input",
 CellChangeTimes->{{3.606489863296402*^9, 3.6064898726969395`*^9}}],

Cell[BoxData["1.2`*^-12"], "Output",
 CellChangeTimes->{3.6064898733929796`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"%", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.6064898767661724`*^9, 3.6064898818514633`*^9}}],

Cell[BoxData["1.2`*^-12"], "Output",
 CellChangeTimes->{3.606489882430496*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"%", "`2"}]], "Input",
 CellChangeTimes->{{3.6064899648822126`*^9, 3.6064899674013567`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"1.2*^-12", "`2"}]], "Input",
 CellChangeTimes->{{3.606489979292036*^9, 3.606489984686345*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"wData", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<wt_data.csv\>\"", ",", "\"\<CSV\>\"", ",", 
     RowBox[{"Path", "\[Rule]", 
      RowBox[{"NotebookDirectory", "[", "]"}]}], ",", 
     RowBox[{"\"\<HeaderLines\>\"", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solarRadi", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<solar.txt\>\"", ",", "\"\<Table\>\"", ",", 
     RowBox[{"Path", "\[Rule]", " ", 
      RowBox[{"NotebookDirectory", "[", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"markovChainMatrix", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.7", ",", "0.2", ",", "0.1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6", ",", "0.3", ",", "0.1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.4", ",", "0.1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stateProb", " ", "=", " ", 
   RowBox[{
    RowBox[{"markovChainMatrix", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ".", 
    RowBox[{"MatrixPower", "[", 
     RowBox[{"markovChainMatrix", ",", "10"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"randomStateSequence", " ", "=", " ", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{
     RowBox[{"stateProb", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<N\>\"", ",", "\"\<A\>\"", ",", "\"\<M\>\""}], "}"}]}], 
     ",", 
     RowBox[{
      RowBox[{"Dimensions", "[", "wData", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}]}], "Input"],

Cell[BoxData["randomStateSequence"], "Input",
 CellChangeTimes->{{3.608855657248211*^9, 3.608855663558572*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solarRadi", "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.6088590988120565`*^9, 3.608859100140133*^9}, {
  3.608859736979558*^9, 3.608859744229973*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"0", "0", "0", "0", "1", "4", "1", "0", "0", "0", "0", "0"},
    {"0", "0", "0", "11", "86", "102", "88", "18", "1", "0", "0", "0"},
    {"0", "1", "28", "151", "199", "216", "224", "154", "98", "17", "0", "0"},
    {"3", "44", "124", "235", "285", "328", "362", "295", "230", "158", "73", 
     "3"},
    {"111", "138", "240", "354", "402", "449", "489", "437", "353", "273", 
     "199", "129"},
    {"187", "249", "330", "426", "461", "562", "596", "539", "466", "352", 
     "298", "199"},
    {"250", "316", "415", "498", "582", "642", "729", "624", "555", "381", 
     "383", "268"},
    {"288", "340", "424", "501", "688", "665", "733", "643", "613", "426", 
     "410", "298"},
    {"287", "347", "418", "458", "649", "700", "769", "682", "586", "402", 
     "373", "281"},
    {"223", "318", "375", "434", "625", "665", "641", "623", "554", "332", 
     "307", "234"},
    {"184", "259", "314", "403", "538", "580", "577", "530", "458", "274", 
     "210", "162"},
    {"100", "160", "208", "313", "420", "471", "449", "407", "334", "172", 
     "87", "70"},
    {"14", "61", "103", "197", "286", "341", "299", "281", "168", "46", "2", 
     "0"},
    {"0", "3", "24", "82", "159", "193", "180", "126", "35", "0", "0", "0"},
    {"0", "0", "0", "3", "33", "67", "61", "16", "0", "0", "0", "0"},
    {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
    {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.608859102283255*^9, {3.6088597400837355`*^9, 3.6088597447710037`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateString", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2010", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<DayName\>\"", ",", "\"\<  \>\"", ",", "\"\<Month\>\"", ",", 
     "\"\</\>\"", ",", "\"\<YearShort\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6088591616396503`*^9, 3.6088591683120317`*^9}}],

Cell[BoxData["\<\"Friday  01/10\"\>"], "Output",
 CellChangeTimes->{3.6088591713502054`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dimensions", "[", "wData", "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.608860932815956*^9, 3.608860941559456*^9}}],

Cell[BoxData["8759"], "Output",
 CellChangeTimes->{{3.608860938028254*^9, 3.6088609419544783`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"so", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.608860876189717*^9, 3.60886088166203*^9}}],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", 
    RowBox[{
     RowBox[{"Dimensions", "[", "wData", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"so", " ", "=", " ", 
     RowBox[{"Append", "[", 
      RowBox[{"so", ",", 
       RowBox[{"solarRadi", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"i", ",", "24"}], "]"}], "+", "1"}], ",", 
          RowBox[{"month", "[", "i", "]"}]}], "]"}], "]"}]}], "]"}]}], 
    ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.608860852223346*^9, 3.6088608887014327`*^9}, {
  3.608860944126603*^9, 3.608861042049204*^9}, {3.608861240061529*^9, 
  3.6088612457728558`*^9}}],

Cell[BoxData["so"], "Input",
 CellChangeTimes->{{3.6088610490076017`*^9, 3.6088610491666107`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OwnValues", "[", "so", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"HoldPattern", "[", "so", "]"}], "\[RuleDelayed]", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6088611413728848`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"HoldPattern", "[", "so", "]"}], "/.", "\[VeryThinSpace]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"HoldPattern", "[", "so", "]"}], "\[RuleDelayed]", 
    RowBox[{"{", "}"}]}], "}"}]}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"HoldPattern", "[", 
  RowBox[{"{", "}"}], "]"}]], "Output",
 CellChangeTimes->{3.6088611475542383`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"month", "[", "5000", "]"}]], "Input",
 CellChangeTimes->{{3.60886109112401*^9, 3.608861162426089*^9}}],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{{3.608861093833165*^9, 3.608861162993121*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solarRadi", "[", 
  RowBox[{"[", 
   RowBox[{"10", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.608861172095642*^9, 3.6088611834232893`*^9}, {
  3.6088612136290174`*^9, 3.608861215299113*^9}}],

Cell[BoxData["187"], "Output",
 CellChangeTimes->{3.6088611841463313`*^9, 3.6088612158351436`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "so", "]"}]], "Input",
 CellChangeTimes->{{3.608861890318722*^9, 3.608861905964617*^9}}],

Cell[BoxData[
 RowBox[{"{", "8758", "}"}]], "Output",
 CellChangeTimes->{{3.6088618983351803`*^9, 3.6088619065096483`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["stateProb"], "Input",
 CellChangeTimes->{{3.6089047481768565`*^9, 3.6089047495609355`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.65555555556`", ",", "0.24444444444`", ",", "0.1`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6089047501129675`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1264, 675},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3604156249-5721513"->{
  Cell[10085, 359, 553, 12, 42, "Print",
   CellTags->"Info3604156249-5721513"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3604156249-5721513", 608751, 11975}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 94, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[676, 25, 122, 2, 31, "Input"],
Cell[801, 29, 75, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[913, 35, 200, 5, 31, "Input"],
Cell[1116, 42, 141, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1294, 50, 199, 5, 31, "Input"],
Cell[1496, 57, 150, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1683, 65, 133, 2, 31, "Input"],
Cell[1819, 69, 185, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2041, 78, 163, 3, 31, "Input"],
Cell[2207, 83, 160, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2404, 91, 313, 7, 31, "Input"],
Cell[2720, 100, 245, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3002, 110, 133, 2, 31, "Input"],
Cell[3138, 114, 185, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3360, 123, 174, 3, 31, "Input"],
Cell[3537, 128, 409, 11, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3983, 144, 185, 4, 31, "Input"],
Cell[4171, 150, 157, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4365, 159, 100, 1, 31, "Input"],
Cell[4468, 162, 159, 4, 31, "Output"]
}, Open  ]],
Cell[4642, 169, 96, 1, 31, "Input"],
Cell[4741, 172, 94, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[4860, 177, 137, 2, 31, "Input"],
Cell[5000, 181, 121, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5158, 189, 145, 3, 31, "Input"],
Cell[5306, 194, 72, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5415, 200, 357, 8, 31, "Input"],
Cell[5775, 210, 81, 1, 23, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5893, 216, 142, 2, 31, "Input"],
Cell[6038, 220, 70, 1, 31, "Output"]
}, Open  ]],
Cell[6123, 224, 1125, 29, 72, "Input"],
Cell[CellGroupData[{
Cell[7273, 257, 114, 1, 31, "Input"],
Cell[7390, 260, 166, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7593, 269, 112, 1, 31, "Input"],
Cell[7708, 272, 207, 5, 31, "Output"]
}, Open  ]],
Cell[7930, 280, 238, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[8193, 288, 100, 1, 31, "Input"],
Cell[8296, 291, 115, 3, 31, "Output"]
}, Open  ]],
Cell[8426, 297, 131, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[8582, 303, 100, 1, 31, "Input"],
Cell[8685, 306, 152, 3, 31, "Output"]
}, Open  ]],
Cell[8852, 312, 133, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[9010, 319, 262, 7, 31, "Input"],
Cell[9275, 328, 243, 7, 46, "Output"]
}, Open  ]],
Cell[9533, 338, 146, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[9704, 344, 124, 2, 31, "Input"],
Cell[9831, 348, 99, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9967, 355, 115, 2, 31, "Input"],
Cell[10085, 359, 553, 12, 42, "Print",
 CellTags->"Info3604156249-5721513"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10675, 376, 135, 2, 31, "Input"],
Cell[10813, 380, 94, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10944, 386, 69, 1, 31, "Input"],
Cell[11016, 389, 94, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11147, 395, 139, 2, 31, "Input"],
Cell[11289, 399, 314, 9, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11640, 413, 187, 4, 31, "Input"],
Cell[11830, 419, 97, 1, 31, "Output"]
}, Open  ]],
Cell[11942, 423, 127, 2, 31, "Input"],
Cell[12072, 427, 98, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[12195, 432, 152, 3, 31, "Input"],
Cell[12350, 437, 154, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12541, 446, 237, 4, 31, "Input"],
Cell[12781, 452, 87, 1, 31, "Output"]
}, Open  ]],
Cell[12883, 456, 94, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[13002, 461, 128, 2, 31, "Input"],
Cell[13133, 465, 88, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13258, 471, 202, 4, 31, "Input"],
Cell[13463, 477, 101, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13601, 483, 6846, 159, 312, "Input"],
Cell[20450, 644, 6889, 160, 292, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27376, 809, 6747, 153, 312, "Input"],
Cell[34126, 964, 6751, 153, 292, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40914, 1122, 150, 3, 31, "Input"],
Cell[41067, 1127, 115, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41219, 1133, 106, 2, 31, "Input"],
Cell[41328, 1137, 186, 6, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41551, 1148, 127, 2, 31, "Input"],
Cell[41681, 1152, 1513, 24, 56, "Message"],
Cell[43197, 1178, 1693, 34, 72, "Output"]
}, Open  ]],
Cell[44905, 1215, 139, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[45069, 1222, 11783, 284, 632, "Input"],
Cell[56855, 1508, 1896, 30, 70, "Message"],
Cell[58754, 1540, 1536, 26, 73, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60327, 1571, 129, 2, 31, "Input"],
Cell[60459, 1575, 89, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60585, 1581, 106, 2, 31, "Input"],
Cell[60694, 1585, 184, 6, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60915, 1596, 174, 3, 31, "Input"],
Cell[61092, 1601, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61202, 1607, 104, 1, 31, "Input"],
Cell[61309, 1610, 1614, 33, 72, "Output"]
}, Open  ]],
Cell[62938, 1646, 96, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[63059, 1651, 105, 1, 31, "Input"],
Cell[63167, 1654, 1637, 33, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64841, 1692, 137, 3, 31, "Input"],
Cell[64981, 1697, 99, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65117, 1703, 107, 1, 31, "Input"],
Cell[65227, 1706, 1605, 33, 72, "Output"]
}, Open  ]],
Cell[66847, 1742, 141, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[67013, 1749, 441, 11, 31, "Input"],
Cell[67457, 1762, 543, 11, 21, "Message"],
Cell[68003, 1775, 541, 11, 21, "Message"],
Cell[68547, 1788, 543, 11, 21, "Message"],
Cell[69093, 1801, 548, 11, 21, "Message"],
Cell[69644, 1814, 368, 12, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70049, 1831, 219, 5, 31, "Input"],
Cell[70271, 1838, 130, 2, 31, "Output"]
}, Open  ]],
Cell[70416, 1843, 327, 9, 72, "Input"],
Cell[CellGroupData[{
Cell[70768, 1856, 526, 12, 31, "Input"],
Cell[71297, 1870, 611, 12, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71945, 1887, 284, 6, 31, "Input"],
Cell[72232, 1895, 162, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72431, 1902, 129, 2, 31, "Input"],
Cell[72563, 1906, 205, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72805, 1916, 226, 5, 31, "Input"],
Cell[73034, 1923, 535, 13, 247, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73606, 1941, 189, 4, 31, "Input"],
Cell[73798, 1947, 409, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74244, 1959, 811, 19, 72, "Input"],
Cell[75058, 1980, 550, 11, 21, "Message"],
Cell[75611, 1993, 550, 11, 21, "Message"],
Cell[76164, 2006, 550, 11, 21, "Message"],
Cell[76717, 2019, 557, 11, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77311, 2035, 99, 1, 31, "Input"],
Cell[77413, 2038, 151, 3, 31, "Output"]
}, Open  ]],
Cell[77579, 2044, 192, 4, 31, "Input"],
Cell[77774, 2050, 94, 1, 31, "Input"],
Cell[77871, 2053, 92, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[77988, 2058, 109, 1, 31, "Input"],
Cell[78100, 2061, 118, 1, 31, "Output"]
}, Open  ]],
Cell[78233, 2065, 95, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[78353, 2070, 127, 2, 31, "Input"],
Cell[78483, 2074, 75, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78595, 2080, 102, 1, 31, "Input"],
Cell[78700, 2083, 3226, 91, 92, "Output"]
}, Open  ]],
Cell[81941, 2177, 144, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[82110, 2183, 104, 1, 31, "Input"],
Cell[82217, 2186, 3246, 91, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85500, 2282, 108, 1, 31, "Input"],
Cell[85611, 2285, 94, 1, 31, "Output"]
}, Open  ]],
Cell[85720, 2289, 176, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[85921, 2297, 276, 7, 31, "Input"],
Cell[86200, 2306, 41146, 680, 272, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127383, 2991, 94, 1, 31, "Input"],
Cell[127480, 2994, 548, 11, 21, "Message"],
Cell[128031, 3007, 74, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128142, 3013, 207, 5, 31, "Input"],
Cell[128352, 3020, 118, 2, 31, "Output"]
}, Open  ]],
Cell[128485, 3025, 325, 8, 31, "Input"],
Cell[CellGroupData[{
Cell[128835, 3037, 192, 4, 31, "Input"],
Cell[129030, 3043, 42373, 701, 245, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171440, 3749, 69, 1, 31, "Input"],
Cell[171512, 3752, 5474, 145, 134, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177023, 3902, 168, 3, 31, "Input"],
Cell[177194, 3907, 93, 2, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177324, 3914, 130, 2, 31, "Input"],
Cell[177457, 3918, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177567, 3924, 139, 2, 31, "Input"],
Cell[177709, 3928, 110, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177856, 3935, 152, 3, 31, "Input"],
Cell[178011, 3940, 80, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178128, 3946, 272, 8, 31, "Input"],
Cell[178403, 3956, 74, 1, 31, "Output"]
}, Open  ]],
Cell[178492, 3960, 114, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[178631, 3966, 672, 18, 52, "Input"],
Cell[179306, 3986, 106, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179449, 3993, 148, 4, 31, "Input"],
Cell[179600, 3999, 90, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179727, 4006, 250, 6, 31, "Input"],
Cell[179980, 4014, 994, 19, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181011, 4038, 173, 4, 31, "Input"],
Cell[181187, 4044, 117, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181341, 4050, 173, 4, 31, "Input"],
Cell[181517, 4056, 91, 1, 31, "Output"]
}, Open  ]],
Cell[181623, 4060, 146, 2, 31, "Input"],
Cell[181772, 4064, 140, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[181937, 4071, 527, 15, 31, "Input"],
Cell[182467, 4088, 94, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182598, 4094, 417, 8, 31, "Input"],
Cell[183018, 4104, 44352, 733, 243, "Output"]
}, Open  ]],
Cell[227385, 4840, 96, 1, 31, "Input"],
Cell[227484, 4843, 106, 1, 31, "Input"],
Cell[227593, 4846, 96, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[227714, 4851, 158, 3, 31, "Input"],
Cell[227875, 4856, 123, 2, 31, "Output"]
}, Open  ]],
Cell[228013, 4861, 94, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[228132, 4866, 267, 7, 31, "Input"],
Cell[228402, 4875, 387, 9, 21, "Message"],
Cell[228792, 4886, 326, 8, 21, "Message"],
Cell[229121, 4896, 276, 7, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229434, 4908, 200, 4, 31, "Input"],
Cell[229637, 4914, 1598, 33, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231272, 4952, 130, 2, 31, "Input"],
Cell[231405, 4956, 1518, 24, 56, "Message"],
Cell[232926, 4982, 1704, 34, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234667, 5021, 2303, 57, 192, "Input"],
Cell[236973, 5080, 507, 10, 21, "Message"],
Cell[237483, 5092, 1600, 25, 311, "Message"],
Cell[239086, 5119, 507, 10, 21, "Message"],
Cell[239596, 5131, 1513, 24, 90, "Message"],
Cell[241112, 5157, 532, 11, 21, "Message"],
Cell[241647, 5170, 1598, 25, 311, "Message"],
Cell[243248, 5197, 540, 11, 21, "Message"],
Cell[243791, 5210, 507, 10, 21, "Message"],
Cell[244301, 5222, 528, 11, 21, "Message"]
}, {2}]],
Cell[CellGroupData[{
Cell[244863, 5238, 99, 1, 31, "Input"],
Cell[244965, 5241, 5204, 137, 134, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250206, 5383, 103, 1, 31, "Input"],
Cell[250312, 5386, 1620, 33, 72, "Output"]
}, Open  ]],
Cell[251947, 5422, 158, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[252130, 5430, 153, 3, 31, "Input"],
Cell[252286, 5435, 110, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252433, 5441, 216, 5, 31, "Input"],
Cell[252652, 5448, 111, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252800, 5455, 99, 1, 31, "Input"],
Cell[252902, 5458, 89, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253028, 5465, 192, 4, 31, "Input"],
Cell[253223, 5471, 1938, 37, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255198, 5513, 210, 5, 31, "Input"],
Cell[255411, 5520, 98, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255546, 5526, 131, 2, 31, "Input"],
Cell[255680, 5530, 75, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255792, 5536, 398, 8, 31, "Input"],
Cell[256193, 5546, 124972, 2054, 645, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[381202, 7605, 123, 2, 31, "Input"],
Cell[381328, 7609, 107, 2, 31, "Output"]
}, Open  ]],
Cell[381450, 7614, 2142, 55, 192, "Input"],
Cell[CellGroupData[{
Cell[383617, 7673, 429, 11, 31, "Input"],
Cell[384049, 7686, 159394, 2645, 157, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[543480, 10336, 347, 8, 31, "Input"],
Cell[543830, 10346, 8440, 146, 300, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[552307, 10497, 105, 1, 31, "Input"],
Cell[552415, 10500, 77, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[552529, 10506, 142, 2, 31, "Input"],
Cell[552674, 10510, 670, 13, 21, "Message"]
}, Open  ]],
Cell[553359, 10526, 119, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[553503, 10532, 192, 4, 31, "Input"],
Cell[553698, 10538, 75, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[553810, 10544, 175, 4, 31, "Input"],
Cell[553988, 10550, 91, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[554116, 10556, 554, 15, 31, "Input"],
Cell[554673, 10573, 101, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[554811, 10579, 369, 9, 31, "Input"],
Cell[555183, 10590, 101, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[555321, 10596, 131, 2, 31, "Input"],
Cell[555455, 10600, 101, 1, 31, "Output"]
}, Open  ]],
Cell[555571, 10604, 359, 9, 31, "Input"],
Cell[CellGroupData[{
Cell[555955, 10617, 250, 6, 31, "Input"],
Cell[556208, 10625, 72, 1, 31, "Output"]
}, Open  ]],
Cell[556295, 10629, 467, 13, 31, "Input"],
Cell[556765, 10644, 146, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[556936, 10650, 107, 1, 86, "Section"],
Cell[557046, 10653, 42125, 1024, 2732, "Input"],
Cell[CellGroupData[{
Cell[599196, 11681, 163, 4, 31, "Input"],
Cell[599362, 11687, 80, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[599479, 11693, 147, 3, 31, "Input"],
Cell[599629, 11698, 78, 1, 31, "Output"]
}, Open  ]],
Cell[599722, 11702, 145, 3, 31, "Input"],
Cell[599870, 11707, 148, 3, 31, "Input"],
Cell[600021, 11712, 1620, 45, 112, "Input"],
Cell[601644, 11759, 111, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[601780, 11764, 183, 3, 31, "Input"],
Cell[601966, 11769, 2500, 50, 372, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[604503, 11824, 401, 10, 31, "Input"],
Cell[604907, 11836, 92, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[605036, 11842, 184, 4, 31, "Input"],
Cell[605223, 11848, 99, 1, 31, "Output"]
}, Open  ]],
Cell[605337, 11852, 162, 4, 31, "Input"],
Cell[605502, 11858, 849, 23, 72, "Input"],
Cell[606354, 11883, 98, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[606477, 11888, 84, 2, 31, "Input"],
Cell[606564, 11892, 189, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[606790, 11902, 251, 7, 31, "Input"],
Cell[607044, 11911, 127, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[607208, 11919, 126, 2, 31, "Input"],
Cell[607337, 11923, 94, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[607468, 11929, 229, 5, 31, "Input"],
Cell[607700, 11936, 98, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[607835, 11942, 130, 2, 31, "Input"],
Cell[607968, 11946, 123, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[608128, 11953, 105, 1, 31, "Input"],
Cell[608236, 11956, 159, 4, 87, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
